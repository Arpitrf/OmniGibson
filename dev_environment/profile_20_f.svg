<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="394" onload="init(evt)" viewBox="0 0 1200 394" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="394" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile_20_f.svg --pid 20295</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="383.00"> </text><svg id="frames" x="10" width="1180" total_samples="1209"><g><title>sample (gymnasium/spaces/box.py:206) (3 samples, 0.25%)</title><rect x="0.0000%" y="100" width="0.2481%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="110.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="0.4963%" y="116" width="0.1654%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="2"/><text x="0.7463%" y="126.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (2 samples, 0.17%)</title><rect x="0.4963%" y="132" width="0.1654%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="2"/><text x="0.7463%" y="142.50"></text></g><g><title>sample (gymnasium/spaces/box.py:218) (5 samples, 0.41%)</title><rect x="0.3309%" y="100" width="0.4136%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="5"/><text x="0.5809%" y="110.50"></text></g><g><title>main (test_multiple_envs.py:58) (10 samples, 0.83%)</title><rect x="0.0000%" y="84" width="0.8271%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="10"/><text x="0.2500%" y="94.50"></text></g><g><title>_pre_step (omnigibson/envs/env_base.py:540) (2 samples, 0.17%)</title><rect x="0.8271%" y="116" width="0.1654%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="2"/><text x="1.0771%" y="126.50"></text></g><g><title>robots (omnigibson/envs/env_base.py:723) (2 samples, 0.17%)</title><rect x="0.8271%" y="132" width="0.1654%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="2"/><text x="1.0771%" y="142.50"></text></g><g><title>robots (omnigibson/scenes/scene_base.py:142) (2 samples, 0.17%)</title><rect x="0.8271%" y="148" width="0.1654%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="2"/><text x="1.0771%" y="158.50"></text></g><g><title>object_registry (omnigibson/scenes/scene_base.py:114) (2 samples, 0.17%)</title><rect x="0.8271%" y="164" width="0.1654%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="2"/><text x="1.0771%" y="174.50"></text></g><g><title>command_dim (omnigibson/controllers/joint_controller.py:244) (2 samples, 0.17%)</title><rect x="1.1580%" y="164" width="0.1654%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="2"/><text x="1.4080%" y="174.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="1.1580%" y="180" width="0.1654%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="2"/><text x="1.4080%" y="190.50"></text></g><g><title>_pre_step (omnigibson/envs/env_base.py:541) (5 samples, 0.41%)</title><rect x="0.9926%" y="116" width="0.4136%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="5"/><text x="1.2426%" y="126.50"></text></g><g><title>action_dim (omnigibson/objects/controllable_object.py:638) (5 samples, 0.41%)</title><rect x="0.9926%" y="132" width="0.4136%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="5"/><text x="1.2426%" y="142.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/objects/controllable_object.py:638) (4 samples, 0.33%)</title><rect x="1.0753%" y="148" width="0.3309%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="4"/><text x="1.3253%" y="158.50"></text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:325) (3 samples, 0.25%)</title><rect x="1.4061%" y="132" width="0.2481%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="3"/><text x="1.6561%" y="142.50"></text></g><g><title>action_dim (omnigibson/objects/controllable_object.py:638) (3 samples, 0.25%)</title><rect x="1.4061%" y="148" width="0.2481%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="3"/><text x="1.6561%" y="158.50"></text></g><g><title>_preprocess_command (omnigibson/controllers/controller_base.py:171) (2 samples, 0.17%)</title><rect x="1.9024%" y="180" width="0.1654%" height="15" fill="rgb(225,20,46)" fg:x="23" fg:w="2"/><text x="2.1524%" y="190.50"></text></g><g><title>_clip (numpy/core/_methods.py:160) (2 samples, 0.17%)</title><rect x="1.9024%" y="196" width="0.1654%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="2"/><text x="2.1524%" y="206.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:114) (2 samples, 0.17%)</title><rect x="1.9024%" y="212" width="0.1654%" height="15" fill="rgb(221,200,47)" fg:x="23" fg:w="2"/><text x="2.1524%" y="222.50"></text></g><g><title>_preprocess_command (omnigibson/controllers/multi_finger_gripper_controller.py:152) (3 samples, 0.25%)</title><rect x="1.9024%" y="164" width="0.2481%" height="15" fill="rgb(226,26,5)" fg:x="23" fg:w="3"/><text x="2.1524%" y="174.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:554) (4 samples, 0.33%)</title><rect x="2.3160%" y="212" width="0.3309%" height="15" fill="rgb(249,33,26)" fg:x="28" fg:w="4"/><text x="2.5660%" y="222.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (4 samples, 0.33%)</title><rect x="2.3160%" y="228" width="0.3309%" height="15" fill="rgb(235,183,28)" fg:x="28" fg:w="4"/><text x="2.5660%" y="238.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (4 samples, 0.33%)</title><rect x="2.3160%" y="244" width="0.3309%" height="15" fill="rgb(221,5,38)" fg:x="28" fg:w="4"/><text x="2.5660%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (3 samples, 0.25%)</title><rect x="2.3987%" y="260" width="0.2481%" height="15" fill="rgb(247,18,42)" fg:x="29" fg:w="3"/><text x="2.6487%" y="270.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (3 samples, 0.25%)</title><rect x="2.3987%" y="276" width="0.2481%" height="15" fill="rgb(241,131,45)" fg:x="29" fg:w="3"/><text x="2.6487%" y="286.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (49 samples, 4.05%)</title><rect x="2.6468%" y="228" width="4.0529%" height="15" fill="rgb(249,31,29)" fg:x="32" fg:w="49"/><text x="2.8968%" y="238.50">arti..</text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (49 samples, 4.05%)</title><rect x="2.6468%" y="244" width="4.0529%" height="15" fill="rgb(225,111,53)" fg:x="32" fg:w="49"/><text x="2.8968%" y="254.50">kine..</text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (49 samples, 4.05%)</title><rect x="2.6468%" y="260" width="4.0529%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="49"/><text x="2.8968%" y="270.50">kine..</text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (49 samples, 4.05%)</title><rect x="2.6468%" y="276" width="4.0529%" height="15" fill="rgb(214,148,48)" fg:x="32" fg:w="49"/><text x="2.8968%" y="286.50">get_..</text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:119) (58 samples, 4.80%)</title><rect x="2.1505%" y="164" width="4.7974%" height="15" fill="rgb(232,36,49)" fg:x="26" fg:w="58"/><text x="2.4005%" y="174.50">_updat..</text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (57 samples, 4.71%)</title><rect x="2.2333%" y="180" width="4.7146%" height="15" fill="rgb(209,103,24)" fg:x="27" fg:w="57"/><text x="2.4833%" y="190.50">__get..</text></g><g><title>get (omnigibson/utils/python_utils.py:755) (56 samples, 4.63%)</title><rect x="2.3160%" y="196" width="4.6319%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="56"/><text x="2.5660%" y="206.50">get (..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:555) (52 samples, 4.30%)</title><rect x="2.6468%" y="212" width="4.3011%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="52"/><text x="2.8968%" y="222.50">&lt;lamb..</text></g><g><title>_clip (numpy/core/_methods.py:135) (3 samples, 0.25%)</title><rect x="6.9479%" y="180" width="0.2481%" height="15" fill="rgb(254,191,54)" fg:x="84" fg:w="3"/><text x="7.1979%" y="190.50"></text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:149) (4 samples, 0.33%)</title><rect x="6.9479%" y="164" width="0.3309%" height="15" fill="rgb(241,83,37)" fg:x="84" fg:w="4"/><text x="7.1979%" y="174.50"></text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:334) (70 samples, 5.79%)</title><rect x="1.6543%" y="132" width="5.7899%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="70"/><text x="1.9043%" y="142.50">apply_a..</text></g><g><title>update_goal (omnigibson/controllers/controller_base.py:207) (69 samples, 5.71%)</title><rect x="1.7370%" y="148" width="5.7072%" height="15" fill="rgb(226,3,54)" fg:x="21" fg:w="69"/><text x="1.9870%" y="158.50">update_..</text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:437) (8 samples, 0.66%)</title><rect x="7.4442%" y="148" width="0.6617%" height="15" fill="rgb(245,192,40)" fg:x="90" fg:w="8"/><text x="7.6942%" y="158.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:562) (2 samples, 0.17%)</title><rect x="7.9404%" y="164" width="0.1654%" height="15" fill="rgb(238,167,29)" fg:x="96" fg:w="2"/><text x="8.1904%" y="174.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:440) (2 samples, 0.17%)</title><rect x="8.1059%" y="148" width="0.1654%" height="15" fill="rgb(232,182,51)" fg:x="98" fg:w="2"/><text x="8.3559%" y="158.50"></text></g><g><title>eef_links (omnigibson/robots/manipulation_robot.py:683) (4 samples, 0.33%)</title><rect x="8.9330%" y="180" width="0.3309%" height="15" fill="rgb(231,60,39)" fg:x="108" fg:w="4"/><text x="9.1830%" y="190.50"></text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:335) (23 samples, 1.90%)</title><rect x="7.4442%" y="132" width="1.9024%" height="15" fill="rgb(208,69,12)" fg:x="90" fg:w="23"/><text x="7.6942%" y="142.50">a..</text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:441) (13 samples, 1.08%)</title><rect x="8.2713%" y="148" width="1.0753%" height="15" fill="rgb(235,93,37)" fg:x="100" fg:w="13"/><text x="8.5213%" y="158.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:470) (8 samples, 0.66%)</title><rect x="8.6849%" y="164" width="0.6617%" height="15" fill="rgb(213,116,39)" fg:x="105" fg:w="8"/><text x="8.9349%" y="174.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:14) (104 samples, 8.60%)</title><rect x="0.8271%" y="100" width="8.6022%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="104"/><text x="1.0771%" y="110.50">step (omnigi..</text></g><g><title>_pre_step (omnigibson/envs/env_base.py:550) (97 samples, 8.02%)</title><rect x="1.4061%" y="116" width="8.0232%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="97"/><text x="1.6561%" y="126.50">_pre_step (..</text></g><g><title>step (omnigibson/simulator.py:838) (2 samples, 0.17%)</title><rect x="9.4293%" y="116" width="0.1654%" height="15" fill="rgb(218,138,4)" fg:x="114" fg:w="2"/><text x="9.6793%" y="126.50"></text></g><g><title>stage (core/simulation_context/simulation_context.py:291) (2 samples, 0.17%)</title><rect x="9.4293%" y="132" width="0.1654%" height="15" fill="rgb(250,191,14)" fg:x="114" fg:w="2"/><text x="9.6793%" y="142.50"></text></g><g><title>get_current_stage (core/utils/stage.py:52) (2 samples, 0.17%)</title><rect x="9.4293%" y="148" width="0.1654%" height="15" fill="rgb(239,60,40)" fg:x="114" fg:w="2"/><text x="9.6793%" y="158.50"></text></g><g><title>step (core/simulation_context/simulation_context.py:689) (6 samples, 0.50%)</title><rect x="9.5947%" y="132" width="0.4963%" height="15" fill="rgb(206,27,48)" fg:x="116" fg:w="6"/><text x="9.8447%" y="142.50"></text></g><g><title>stage (core/simulation_context/simulation_context.py:291) (6 samples, 0.50%)</title><rect x="9.5947%" y="148" width="0.4963%" height="15" fill="rgb(225,35,8)" fg:x="116" fg:w="6"/><text x="9.8447%" y="158.50"></text></g><g><title>get_current_stage (core/utils/stage.py:52) (6 samples, 0.50%)</title><rect x="9.5947%" y="164" width="0.4963%" height="15" fill="rgb(250,213,24)" fg:x="116" fg:w="6"/><text x="9.8447%" y="174.50"></text></g><g><title>_get_stage (usd/_impl/__init__.py:106) (3 samples, 0.25%)</title><rect x="9.8428%" y="180" width="0.2481%" height="15" fill="rgb(247,123,22)" fg:x="119" fg:w="3"/><text x="10.0928%" y="190.50"></text></g><g><title>_step (core/physics_context/physics_context.py:573) (5 samples, 0.41%)</title><rect x="10.0910%" y="148" width="0.4136%" height="15" fill="rgb(231,138,38)" fg:x="122" fg:w="5"/><text x="10.3410%" y="158.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:542) (3 samples, 0.25%)</title><rect x="21.5881%" y="228" width="0.2481%" height="15" fill="rgb(231,145,46)" fg:x="261" fg:w="3"/><text x="21.8381%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:543) (2 samples, 0.17%)</title><rect x="21.8362%" y="228" width="0.1654%" height="15" fill="rgb(251,118,11)" fg:x="264" fg:w="2"/><text x="22.0862%" y="238.50"></text></g><g><title>__setitem__ (omnigibson/utils/python_utils.py:739) (2 samples, 0.17%)</title><rect x="21.8362%" y="244" width="0.1654%" height="15" fill="rgb(217,147,25)" fg:x="264" fg:w="2"/><text x="22.0862%" y="254.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:548) (2 samples, 0.17%)</title><rect x="22.0844%" y="228" width="0.1654%" height="15" fill="rgb(247,81,37)" fg:x="267" fg:w="2"/><text x="22.3344%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:551) (3 samples, 0.25%)</title><rect x="22.2498%" y="228" width="0.2481%" height="15" fill="rgb(209,12,38)" fg:x="269" fg:w="3"/><text x="22.4998%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:557) (5 samples, 0.41%)</title><rect x="22.5806%" y="228" width="0.4136%" height="15" fill="rgb(227,1,9)" fg:x="273" fg:w="5"/><text x="22.8306%" y="238.50"></text></g><g><title>__setitem__ (omnigibson/utils/python_utils.py:739) (4 samples, 0.33%)</title><rect x="22.6634%" y="244" width="0.3309%" height="15" fill="rgb(248,47,43)" fg:x="274" fg:w="4"/><text x="22.9134%" y="254.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:437) (20 samples, 1.65%)</title><rect x="21.5054%" y="212" width="1.6543%" height="15" fill="rgb(221,10,30)" fg:x="260" fg:w="20"/><text x="21.7554%" y="222.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:454) (2 samples, 0.17%)</title><rect x="23.1596%" y="228" width="0.1654%" height="15" fill="rgb(210,229,1)" fg:x="280" fg:w="2"/><text x="23.4096%" y="238.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (9 samples, 0.74%)</title><rect x="23.7386%" y="244" width="0.7444%" height="15" fill="rgb(222,148,37)" fg:x="287" fg:w="9"/><text x="23.9886%" y="254.50"></text></g><g><title>is_playing (core/simulation_context/simulation_context.py:836) (7 samples, 0.58%)</title><rect x="23.9041%" y="260" width="0.5790%" height="15" fill="rgb(234,67,33)" fg:x="289" fg:w="7"/><text x="24.1541%" y="270.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (5 samples, 0.41%)</title><rect x="24.5658%" y="244" width="0.4136%" height="15" fill="rgb(247,98,35)" fg:x="297" fg:w="5"/><text x="24.8158%" y="254.50"></text></g><g><title>check (tensors/impl/api.py:828) (5 samples, 0.41%)</title><rect x="24.5658%" y="260" width="0.4136%" height="15" fill="rgb(247,138,52)" fg:x="297" fg:w="5"/><text x="24.8158%" y="270.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:470) (22 samples, 1.82%)</title><rect x="23.4905%" y="228" width="1.8197%" height="15" fill="rgb(213,79,30)" fg:x="284" fg:w="22"/><text x="23.7405%" y="238.50">_..</text></g><g><title>get_body_index (core/articulations/articulation_view.py:423) (3 samples, 0.25%)</title><rect x="25.0620%" y="244" width="0.2481%" height="15" fill="rgb(246,177,23)" fg:x="303" fg:w="3"/><text x="25.3120%" y="254.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:472) (2 samples, 0.17%)</title><rect x="25.3102%" y="228" width="0.1654%" height="15" fill="rgb(230,62,27)" fg:x="306" fg:w="2"/><text x="25.5602%" y="238.50"></text></g><g><title>__setitem__ (omnigibson/utils/python_utils.py:739) (2 samples, 0.17%)</title><rect x="25.3102%" y="244" width="0.1654%" height="15" fill="rgb(216,154,8)" fg:x="306" fg:w="2"/><text x="25.5602%" y="254.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:365) (49 samples, 4.05%)</title><rect x="21.5054%" y="196" width="4.0529%" height="15" fill="rgb(244,35,45)" fg:x="260" fg:w="49"/><text x="21.7554%" y="206.50">step..</text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:441) (29 samples, 2.40%)</title><rect x="23.1596%" y="212" width="2.3987%" height="15" fill="rgb(251,115,12)" fg:x="280" fg:w="29"/><text x="23.4096%" y="222.50">ge..</text></g><g><title>step (omnigibson/objects/controllable_object.py:367) (2 samples, 0.17%)</title><rect x="25.5583%" y="196" width="0.1654%" height="15" fill="rgb(240,54,50)" fg:x="309" fg:w="2"/><text x="25.8083%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:368) (2 samples, 0.17%)</title><rect x="25.7237%" y="196" width="0.1654%" height="15" fill="rgb(233,84,52)" fg:x="311" fg:w="2"/><text x="25.9737%" y="206.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (10 samples, 0.83%)</title><rect x="27.4607%" y="292" width="0.8271%" height="15" fill="rgb(207,117,47)" fg:x="332" fg:w="10"/><text x="27.7107%" y="302.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (10 samples, 0.83%)</title><rect x="27.4607%" y="308" width="0.8271%" height="15" fill="rgb(249,43,39)" fg:x="332" fg:w="10"/><text x="27.7107%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (9 samples, 0.74%)</title><rect x="27.5434%" y="324" width="0.7444%" height="15" fill="rgb(209,38,44)" fg:x="333" fg:w="9"/><text x="27.7934%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (9 samples, 0.74%)</title><rect x="27.5434%" y="340" width="0.7444%" height="15" fill="rgb(236,212,23)" fg:x="333" fg:w="9"/><text x="27.7934%" y="350.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:554) (12 samples, 0.99%)</title><rect x="27.4607%" y="276" width="0.9926%" height="15" fill="rgb(242,79,21)" fg:x="332" fg:w="12"/><text x="27.7107%" y="286.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:234) (3 samples, 0.25%)</title><rect x="28.4533%" y="292" width="0.2481%" height="15" fill="rgb(211,96,35)" fg:x="344" fg:w="3"/><text x="28.7033%" y="302.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (19 samples, 1.57%)</title><rect x="28.7014%" y="292" width="1.5715%" height="15" fill="rgb(253,215,40)" fg:x="347" fg:w="19"/><text x="28.9514%" y="302.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (19 samples, 1.57%)</title><rect x="28.7014%" y="308" width="1.5715%" height="15" fill="rgb(211,81,21)" fg:x="347" fg:w="19"/><text x="28.9514%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (19 samples, 1.57%)</title><rect x="28.7014%" y="324" width="1.5715%" height="15" fill="rgb(208,190,38)" fg:x="347" fg:w="19"/><text x="28.9514%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (19 samples, 1.57%)</title><rect x="28.7014%" y="340" width="1.5715%" height="15" fill="rgb(235,213,38)" fg:x="347" fg:w="19"/><text x="28.9514%" y="350.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:245) (2 samples, 0.17%)</title><rect x="30.2730%" y="292" width="0.1654%" height="15" fill="rgb(237,122,38)" fg:x="366" fg:w="2"/><text x="30.5230%" y="302.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (43 samples, 3.56%)</title><rect x="26.9644%" y="244" width="3.5567%" height="15" fill="rgb(244,218,35)" fg:x="326" fg:w="43"/><text x="27.2144%" y="254.50">__ge..</text></g><g><title>get (omnigibson/utils/python_utils.py:755) (37 samples, 3.06%)</title><rect x="27.4607%" y="260" width="3.0604%" height="15" fill="rgb(240,68,47)" fg:x="332" fg:w="37"/><text x="27.7107%" y="270.50">get..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:555) (25 samples, 2.07%)</title><rect x="28.4533%" y="276" width="2.0678%" height="15" fill="rgb(210,16,53)" fg:x="344" fg:w="25"/><text x="28.7033%" y="286.50">&lt;..</text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:173) (53 samples, 4.38%)</title><rect x="26.6336%" y="228" width="4.3838%" height="15" fill="rgb(235,124,12)" fg:x="322" fg:w="53"/><text x="26.8836%" y="238.50">compu..</text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (6 samples, 0.50%)</title><rect x="30.5211%" y="244" width="0.4963%" height="15" fill="rgb(224,169,11)" fg:x="369" fg:w="6"/><text x="30.7711%" y="254.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:174) (3 samples, 0.25%)</title><rect x="31.0174%" y="228" width="0.2481%" height="15" fill="rgb(250,166,2)" fg:x="375" fg:w="3"/><text x="31.2674%" y="238.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:180) (4 samples, 0.33%)</title><rect x="31.3482%" y="228" width="0.3309%" height="15" fill="rgb(242,216,29)" fg:x="379" fg:w="4"/><text x="31.5982%" y="238.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (2 samples, 0.17%)</title><rect x="31.8445%" y="244" width="0.1654%" height="15" fill="rgb(230,116,27)" fg:x="385" fg:w="2"/><text x="32.0945%" y="254.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:181) (5 samples, 0.41%)</title><rect x="31.6791%" y="228" width="0.4136%" height="15" fill="rgb(228,99,48)" fg:x="383" fg:w="5"/><text x="31.9291%" y="238.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:182) (8 samples, 0.66%)</title><rect x="32.0926%" y="228" width="0.6617%" height="15" fill="rgb(253,11,6)" fg:x="388" fg:w="8"/><text x="32.3426%" y="238.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4977) (4 samples, 0.33%)</title><rect x="33.2506%" y="260" width="0.3309%" height="15" fill="rgb(247,143,39)" fg:x="402" fg:w="4"/><text x="33.5006%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/function_base.py:4977) (4 samples, 0.33%)</title><rect x="33.2506%" y="276" width="0.3309%" height="15" fill="rgb(236,97,10)" fg:x="402" fg:w="4"/><text x="33.5006%" y="286.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4978) (3 samples, 0.25%)</title><rect x="33.5815%" y="260" width="0.2481%" height="15" fill="rgb(233,208,19)" fg:x="406" fg:w="3"/><text x="33.8315%" y="270.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4983) (2 samples, 0.17%)</title><rect x="33.9123%" y="260" width="0.1654%" height="15" fill="rgb(216,164,2)" fg:x="410" fg:w="2"/><text x="34.1623%" y="270.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:538) (2 samples, 0.17%)</title><rect x="34.4086%" y="292" width="0.1654%" height="15" fill="rgb(220,129,5)" fg:x="416" fg:w="2"/><text x="34.6586%" y="302.50"></text></g><g><title>_broadcast_shape (numpy/lib/stride_tricks.py:422) (4 samples, 0.33%)</title><rect x="34.8222%" y="308" width="0.3309%" height="15" fill="rgb(242,17,10)" fg:x="421" fg:w="4"/><text x="35.0722%" y="318.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:540) (8 samples, 0.66%)</title><rect x="34.5740%" y="292" width="0.6617%" height="15" fill="rgb(242,107,0)" fg:x="418" fg:w="8"/><text x="34.8240%" y="302.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:542) (6 samples, 0.50%)</title><rect x="35.2357%" y="292" width="0.4963%" height="15" fill="rgb(251,28,31)" fg:x="426" fg:w="6"/><text x="35.4857%" y="302.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:341) (2 samples, 0.17%)</title><rect x="35.7320%" y="324" width="0.1654%" height="15" fill="rgb(233,223,10)" fg:x="432" fg:w="2"/><text x="35.9820%" y="334.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:345) (3 samples, 0.25%)</title><rect x="35.9801%" y="324" width="0.2481%" height="15" fill="rgb(215,21,27)" fg:x="435" fg:w="3"/><text x="36.2301%" y="334.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:349) (9 samples, 0.74%)</title><rect x="36.3110%" y="324" width="0.7444%" height="15" fill="rgb(232,23,21)" fg:x="439" fg:w="9"/><text x="36.5610%" y="334.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:352) (2 samples, 0.17%)</title><rect x="37.0554%" y="324" width="0.1654%" height="15" fill="rgb(244,5,23)" fg:x="448" fg:w="2"/><text x="37.3054%" y="334.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4987) (42 samples, 3.47%)</title><rect x="34.0778%" y="260" width="3.4739%" height="15" fill="rgb(226,81,46)" fg:x="412" fg:w="42"/><text x="34.3278%" y="270.50">mes..</text></g><g><title>broadcast_arrays (&lt;__array_function__ internals&gt;:180) (39 samples, 3.23%)</title><rect x="34.3259%" y="276" width="3.2258%" height="15" fill="rgb(247,70,30)" fg:x="415" fg:w="39"/><text x="34.5759%" y="286.50">bro..</text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:546) (22 samples, 1.82%)</title><rect x="35.7320%" y="292" width="1.8197%" height="15" fill="rgb(212,68,19)" fg:x="432" fg:w="22"/><text x="35.9820%" y="302.50">b..</text></g><g><title>&lt;listcomp&gt; (numpy/lib/stride_tricks.py:546) (22 samples, 1.82%)</title><rect x="35.7320%" y="308" width="1.8197%" height="15" fill="rgb(240,187,13)" fg:x="432" fg:w="22"/><text x="35.9820%" y="318.50">&lt;..</text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:190) (61 samples, 5.05%)</title><rect x="32.7543%" y="228" width="5.0455%" height="15" fill="rgb(223,113,26)" fg:x="396" fg:w="61"/><text x="33.0043%" y="238.50">comput..</text></g><g><title>meshgrid (&lt;__array_function__ internals&gt;:180) (57 samples, 4.71%)</title><rect x="33.0852%" y="244" width="4.7146%" height="15" fill="rgb(206,192,2)" fg:x="400" fg:w="57"/><text x="33.3352%" y="254.50">meshg..</text></g><g><title>meshgrid (numpy/lib/function_base.py:4990) (3 samples, 0.25%)</title><rect x="37.5517%" y="260" width="0.2481%" height="15" fill="rgb(241,108,4)" fg:x="454" fg:w="3"/><text x="37.8017%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/function_base.py:4990) (2 samples, 0.17%)</title><rect x="37.6344%" y="276" width="0.1654%" height="15" fill="rgb(247,173,49)" fg:x="455" fg:w="2"/><text x="37.8844%" y="286.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:191) (24 samples, 1.99%)</title><rect x="37.7998%" y="228" width="1.9851%" height="15" fill="rgb(224,114,35)" fg:x="457" fg:w="24"/><text x="38.0498%" y="238.50">c..</text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (15 samples, 1.24%)</title><rect x="38.5443%" y="244" width="1.2407%" height="15" fill="rgb(245,159,27)" fg:x="466" fg:w="15"/><text x="38.7943%" y="254.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (15 samples, 1.24%)</title><rect x="38.5443%" y="260" width="1.2407%" height="15" fill="rgb(245,172,44)" fg:x="466" fg:w="15"/><text x="38.7943%" y="270.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:557) (14 samples, 1.16%)</title><rect x="38.6270%" y="276" width="1.1580%" height="15" fill="rgb(236,23,11)" fg:x="467" fg:w="14"/><text x="38.8770%" y="286.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (11 samples, 0.91%)</title><rect x="38.8751%" y="292" width="0.9098%" height="15" fill="rgb(205,117,38)" fg:x="470" fg:w="11"/><text x="39.1251%" y="302.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (11 samples, 0.91%)</title><rect x="38.8751%" y="308" width="0.9098%" height="15" fill="rgb(237,72,25)" fg:x="470" fg:w="11"/><text x="39.1251%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (11 samples, 0.91%)</title><rect x="38.8751%" y="324" width="0.9098%" height="15" fill="rgb(244,70,9)" fg:x="470" fg:w="11"/><text x="39.1251%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (11 samples, 0.91%)</title><rect x="38.8751%" y="340" width="0.9098%" height="15" fill="rgb(217,125,39)" fg:x="470" fg:w="11"/><text x="39.1251%" y="350.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:179) (2 samples, 0.17%)</title><rect x="39.7849%" y="244" width="0.1654%" height="15" fill="rgb(235,36,10)" fg:x="481" fg:w="2"/><text x="40.0349%" y="254.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:192) (10 samples, 0.83%)</title><rect x="39.7849%" y="228" width="0.8271%" height="15" fill="rgb(251,123,47)" fg:x="481" fg:w="10"/><text x="40.0349%" y="238.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:180) (8 samples, 0.66%)</title><rect x="39.9504%" y="244" width="0.6617%" height="15" fill="rgb(221,13,13)" fg:x="483" fg:w="8"/><text x="40.2004%" y="254.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:560) (5 samples, 0.41%)</title><rect x="41.2738%" y="276" width="0.4136%" height="15" fill="rgb(238,131,9)" fg:x="499" fg:w="5"/><text x="41.5238%" y="286.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (5 samples, 0.41%)</title><rect x="41.2738%" y="292" width="0.4136%" height="15" fill="rgb(211,50,8)" fg:x="499" fg:w="5"/><text x="41.5238%" y="302.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (5 samples, 0.41%)</title><rect x="41.2738%" y="308" width="0.4136%" height="15" fill="rgb(245,182,24)" fg:x="499" fg:w="5"/><text x="41.5238%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (5 samples, 0.41%)</title><rect x="41.2738%" y="324" width="0.4136%" height="15" fill="rgb(242,14,37)" fg:x="499" fg:w="5"/><text x="41.5238%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (5 samples, 0.41%)</title><rect x="41.2738%" y="340" width="0.4136%" height="15" fill="rgb(246,228,12)" fg:x="499" fg:w="5"/><text x="41.5238%" y="350.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:195) (20 samples, 1.65%)</title><rect x="40.6121%" y="228" width="1.6543%" height="15" fill="rgb(213,55,15)" fg:x="491" fg:w="20"/><text x="40.8621%" y="238.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (14 samples, 1.16%)</title><rect x="41.1084%" y="244" width="1.1580%" height="15" fill="rgb(209,9,3)" fg:x="497" fg:w="14"/><text x="41.3584%" y="254.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (13 samples, 1.08%)</title><rect x="41.1911%" y="260" width="1.0753%" height="15" fill="rgb(230,59,30)" fg:x="498" fg:w="13"/><text x="41.4411%" y="270.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:563) (6 samples, 0.50%)</title><rect x="41.7701%" y="276" width="0.4963%" height="15" fill="rgb(209,121,21)" fg:x="505" fg:w="6"/><text x="42.0201%" y="286.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (6 samples, 0.50%)</title><rect x="41.7701%" y="292" width="0.4963%" height="15" fill="rgb(220,109,13)" fg:x="505" fg:w="6"/><text x="42.0201%" y="302.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (6 samples, 0.50%)</title><rect x="41.7701%" y="308" width="0.4963%" height="15" fill="rgb(232,18,1)" fg:x="505" fg:w="6"/><text x="42.0201%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (6 samples, 0.50%)</title><rect x="41.7701%" y="324" width="0.4963%" height="15" fill="rgb(215,41,42)" fg:x="505" fg:w="6"/><text x="42.0201%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (6 samples, 0.50%)</title><rect x="41.7701%" y="340" width="0.4963%" height="15" fill="rgb(224,123,36)" fg:x="505" fg:w="6"/><text x="42.0201%" y="350.50"></text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:175) (2 samples, 0.17%)</title><rect x="42.2663%" y="228" width="0.1654%" height="15" fill="rgb(240,125,3)" fg:x="511" fg:w="2"/><text x="42.5163%" y="238.50"></text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:183) (3 samples, 0.25%)</title><rect x="42.5972%" y="228" width="0.2481%" height="15" fill="rgb(205,98,50)" fg:x="515" fg:w="3"/><text x="42.8472%" y="238.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:241) (3 samples, 0.25%)</title><rect x="42.9280%" y="244" width="0.2481%" height="15" fill="rgb(205,185,37)" fg:x="519" fg:w="3"/><text x="43.1780%" y="254.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="43.0108%" y="260" width="0.1654%" height="15" fill="rgb(238,207,15)" fg:x="520" fg:w="2"/><text x="43.2608%" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:164) (2 samples, 0.17%)</title><rect x="43.3416%" y="292" width="0.1654%" height="15" fill="rgb(213,199,42)" fg:x="524" fg:w="2"/><text x="43.5916%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (5 samples, 0.41%)</title><rect x="43.5897%" y="292" width="0.4136%" height="15" fill="rgb(235,201,11)" fg:x="527" fg:w="5"/><text x="43.8397%" y="302.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:244) (11 samples, 0.91%)</title><rect x="43.1762%" y="244" width="0.9098%" height="15" fill="rgb(207,46,11)" fg:x="522" fg:w="11"/><text x="43.4262%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (10 samples, 0.83%)</title><rect x="43.2589%" y="260" width="0.8271%" height="15" fill="rgb(241,35,35)" fg:x="523" fg:w="10"/><text x="43.5089%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (9 samples, 0.74%)</title><rect x="43.3416%" y="276" width="0.7444%" height="15" fill="rgb(243,32,47)" fg:x="524" fg:w="9"/><text x="43.5916%" y="286.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:254) (2 samples, 0.17%)</title><rect x="44.2514%" y="244" width="0.1654%" height="15" fill="rgb(247,202,23)" fg:x="535" fg:w="2"/><text x="44.5014%" y="254.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:255) (3 samples, 0.25%)</title><rect x="44.4169%" y="244" width="0.2481%" height="15" fill="rgb(219,102,11)" fg:x="537" fg:w="3"/><text x="44.6669%" y="254.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:258) (5 samples, 0.41%)</title><rect x="44.6650%" y="244" width="0.4136%" height="15" fill="rgb(243,110,44)" fg:x="540" fg:w="5"/><text x="44.9150%" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (3 samples, 0.25%)</title><rect x="44.8304%" y="260" width="0.2481%" height="15" fill="rgb(222,74,54)" fg:x="542" fg:w="3"/><text x="45.0804%" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (3 samples, 0.25%)</title><rect x="44.8304%" y="276" width="0.2481%" height="15" fill="rgb(216,99,12)" fg:x="542" fg:w="3"/><text x="45.0804%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (2 samples, 0.17%)</title><rect x="44.9132%" y="292" width="0.1654%" height="15" fill="rgb(226,22,26)" fg:x="543" fg:w="2"/><text x="45.1632%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:168) (3 samples, 0.25%)</title><rect x="45.3267%" y="292" width="0.2481%" height="15" fill="rgb(217,163,10)" fg:x="548" fg:w="3"/><text x="45.5767%" y="302.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:269) (6 samples, 0.50%)</title><rect x="45.2440%" y="244" width="0.4963%" height="15" fill="rgb(213,25,53)" fg:x="547" fg:w="6"/><text x="45.4940%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="45.3267%" y="260" width="0.4136%" height="15" fill="rgb(252,105,26)" fg:x="548" fg:w="5"/><text x="45.5767%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (5 samples, 0.41%)</title><rect x="45.3267%" y="276" width="0.4136%" height="15" fill="rgb(220,39,43)" fg:x="548" fg:w="5"/><text x="45.5767%" y="286.50"></text></g><g><title>step (omnigibson/controllers/controller_base.py:277) (243 samples, 20.10%)</title><rect x="26.1373%" y="212" width="20.0993%" height="15" fill="rgb(229,68,48)" fg:x="316" fg:w="243"/><text x="26.3873%" y="222.50">step (omnigibson/controllers/con..</text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:209) (40 samples, 3.31%)</title><rect x="42.9280%" y="228" width="3.3085%" height="15" fill="rgb(252,8,32)" fg:x="519" fg:w="40"/><text x="43.1780%" y="238.50">com..</text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:274) (5 samples, 0.41%)</title><rect x="45.8230%" y="244" width="0.4136%" height="15" fill="rgb(223,20,43)" fg:x="554" fg:w="5"/><text x="46.0730%" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="46.0711%" y="260" width="0.1654%" height="15" fill="rgb(229,81,49)" fg:x="557" fg:w="2"/><text x="46.3211%" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (2 samples, 0.17%)</title><rect x="46.0711%" y="276" width="0.1654%" height="15" fill="rgb(236,28,36)" fg:x="557" fg:w="2"/><text x="46.3211%" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:133) (3 samples, 0.25%)</title><rect x="47.0637%" y="244" width="0.2481%" height="15" fill="rgb(249,185,26)" fg:x="569" fg:w="3"/><text x="47.3137%" y="254.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:103) (2 samples, 0.17%)</title><rect x="47.1464%" y="260" width="0.1654%" height="15" fill="rgb(249,174,33)" fg:x="570" fg:w="2"/><text x="47.3964%" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:94) (4 samples, 0.33%)</title><rect x="47.3945%" y="260" width="0.3309%" height="15" fill="rgb(233,201,37)" fg:x="573" fg:w="4"/><text x="47.6445%" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:135) (9 samples, 0.74%)</title><rect x="47.3118%" y="244" width="0.7444%" height="15" fill="rgb(221,78,26)" fg:x="572" fg:w="9"/><text x="47.5618%" y="254.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:95) (4 samples, 0.33%)</title><rect x="47.7254%" y="260" width="0.3309%" height="15" fill="rgb(250,127,30)" fg:x="577" fg:w="4"/><text x="47.9754%" y="270.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="47.8908%" y="276" width="0.1654%" height="15" fill="rgb(230,49,44)" fg:x="579" fg:w="2"/><text x="48.1408%" y="286.50"></text></g><g><title>_clip (numpy/core/_methods.py:138) (2 samples, 0.17%)</title><rect x="48.0562%" y="244" width="0.1654%" height="15" fill="rgb(229,67,23)" fg:x="581" fg:w="2"/><text x="48.3062%" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:160) (14 samples, 1.16%)</title><rect x="48.3044%" y="244" width="1.1580%" height="15" fill="rgb(249,83,47)" fg:x="584" fg:w="14"/><text x="48.5544%" y="254.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:114) (8 samples, 0.66%)</title><rect x="48.8007%" y="260" width="0.6617%" height="15" fill="rgb(215,43,3)" fg:x="590" fg:w="8"/><text x="49.0507%" y="270.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:249) (35 samples, 2.89%)</title><rect x="46.6501%" y="228" width="2.8950%" height="15" fill="rgb(238,154,13)" fg:x="564" fg:w="35"/><text x="46.9001%" y="238.50">cl..</text></g><g><title>control_type (omnigibson/controllers/joint_controller.py:240) (3 samples, 0.25%)</title><rect x="49.9586%" y="244" width="0.2481%" height="15" fill="rgb(219,56,2)" fg:x="604" fg:w="3"/><text x="50.2086%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:250) (15 samples, 1.24%)</title><rect x="49.5451%" y="228" width="1.2407%" height="15" fill="rgb(233,0,4)" fg:x="599" fg:w="15"/><text x="49.7951%" y="238.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (6 samples, 0.50%)</title><rect x="50.2895%" y="244" width="0.4963%" height="15" fill="rgb(235,30,7)" fg:x="608" fg:w="6"/><text x="50.5395%" y="254.50"></text></g><g><title>get_type (omnigibson/controllers/controller_base.py:61) (2 samples, 0.17%)</title><rect x="50.8685%" y="260" width="0.1654%" height="15" fill="rgb(250,79,13)" fg:x="615" fg:w="2"/><text x="51.1185%" y="270.50"></text></g><g><title>control_type (omnigibson/controllers/joint_controller.py:240) (3 samples, 0.25%)</title><rect x="50.8685%" y="244" width="0.2481%" height="15" fill="rgb(211,146,34)" fg:x="615" fg:w="3"/><text x="51.1185%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:251) (7 samples, 0.58%)</title><rect x="50.7858%" y="228" width="0.5790%" height="15" fill="rgb(228,22,38)" fg:x="614" fg:w="7"/><text x="51.0358%" y="238.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="51.1993%" y="244" width="0.1654%" height="15" fill="rgb(235,168,5)" fg:x="619" fg:w="2"/><text x="51.4493%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:254) (4 samples, 0.33%)</title><rect x="51.3648%" y="228" width="0.3309%" height="15" fill="rgb(221,155,16)" fg:x="621" fg:w="4"/><text x="51.6148%" y="238.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:255) (3 samples, 0.25%)</title><rect x="51.6956%" y="228" width="0.2481%" height="15" fill="rgb(215,215,53)" fg:x="625" fg:w="3"/><text x="51.9456%" y="238.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:256) (5 samples, 0.41%)</title><rect x="51.9438%" y="228" width="0.4136%" height="15" fill="rgb(223,4,10)" fg:x="628" fg:w="5"/><text x="52.1938%" y="238.50"></text></g><g><title>control_dim (omnigibson/controllers/controller_base.py:422) (3 samples, 0.25%)</title><rect x="52.1092%" y="244" width="0.2481%" height="15" fill="rgb(234,103,6)" fg:x="630" fg:w="3"/><text x="52.3592%" y="254.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="52.1919%" y="260" width="0.1654%" height="15" fill="rgb(227,97,0)" fg:x="631" fg:w="2"/><text x="52.4419%" y="270.50"></text></g><g><title>step (omnigibson/controllers/controller_base.py:278) (91 samples, 7.53%)</title><rect x="46.2366%" y="212" width="7.5269%" height="15" fill="rgb(234,150,53)" fg:x="559" fg:w="91"/><text x="46.4866%" y="222.50">step (omni..</text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:258) (17 samples, 1.41%)</title><rect x="52.3573%" y="228" width="1.4061%" height="15" fill="rgb(228,201,54)" fg:x="633" fg:w="17"/><text x="52.6073%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:369) (338 samples, 27.96%)</title><rect x="25.8892%" y="196" width="27.9570%" height="15" fill="rgb(222,22,37)" fg:x="313" fg:w="338"/><text x="26.1392%" y="206.50">step (omnigibson/objects/controllable_object...</text></g><g><title>step (omnigibson/objects/controllable_object.py:370) (5 samples, 0.41%)</title><rect x="53.8462%" y="196" width="0.4136%" height="15" fill="rgb(237,53,32)" fg:x="651" fg:w="5"/><text x="54.0962%" y="206.50"></text></g><g><title>control_type (omnigibson/controllers/joint_controller.py:240) (5 samples, 0.41%)</title><rect x="53.8462%" y="212" width="0.4136%" height="15" fill="rgb(233,25,53)" fg:x="651" fg:w="5"/><text x="54.0962%" y="222.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:373) (4 samples, 0.33%)</title><rect x="54.2597%" y="196" width="0.3309%" height="15" fill="rgb(210,40,34)" fg:x="656" fg:w="4"/><text x="54.5097%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:378) (4 samples, 0.33%)</title><rect x="54.5906%" y="196" width="0.3309%" height="15" fill="rgb(241,220,44)" fg:x="660" fg:w="4"/><text x="54.8406%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:380) (3 samples, 0.25%)</title><rect x="54.9214%" y="196" width="0.2481%" height="15" fill="rgb(235,28,35)" fg:x="664" fg:w="3"/><text x="55.1714%" y="206.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="55.0041%" y="212" width="0.1654%" height="15" fill="rgb(210,56,17)" fg:x="665" fg:w="2"/><text x="55.2541%" y="222.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:381) (2 samples, 0.17%)</title><rect x="55.1696%" y="196" width="0.1654%" height="15" fill="rgb(224,130,29)" fg:x="667" fg:w="2"/><text x="55.4196%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:382) (3 samples, 0.25%)</title><rect x="55.3350%" y="196" width="0.2481%" height="15" fill="rgb(235,212,8)" fg:x="669" fg:w="3"/><text x="55.5850%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:384) (3 samples, 0.25%)</title><rect x="55.5831%" y="196" width="0.2481%" height="15" fill="rgb(223,33,50)" fg:x="672" fg:w="3"/><text x="55.8331%" y="206.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:384) (2 samples, 0.17%)</title><rect x="55.9140%" y="212" width="0.1654%" height="15" fill="rgb(219,149,13)" fg:x="676" fg:w="2"/><text x="56.1640%" y="222.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:441) (2 samples, 0.17%)</title><rect x="56.3275%" y="228" width="0.1654%" height="15" fill="rgb(250,156,29)" fg:x="681" fg:w="2"/><text x="56.5775%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:455) (3 samples, 0.25%)</title><rect x="56.5757%" y="228" width="0.2481%" height="15" fill="rgb(216,193,19)" fg:x="684" fg:w="3"/><text x="56.8257%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:457) (8 samples, 0.66%)</title><rect x="56.9065%" y="228" width="0.6617%" height="15" fill="rgb(216,135,14)" fg:x="688" fg:w="8"/><text x="57.1565%" y="238.50"></text></g><g><title>n_dof (omnigibson/prims/joint_prim.py:569) (7 samples, 0.58%)</title><rect x="56.9892%" y="244" width="0.5790%" height="15" fill="rgb(241,47,5)" fg:x="689" fg:w="7"/><text x="57.2392%" y="254.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:478) (3 samples, 0.25%)</title><rect x="57.5682%" y="228" width="0.2481%" height="15" fill="rgb(233,42,35)" fg:x="696" fg:w="3"/><text x="57.8182%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:481) (4 samples, 0.33%)</title><rect x="57.8164%" y="228" width="0.3309%" height="15" fill="rgb(231,13,6)" fg:x="699" fg:w="4"/><text x="58.0664%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:484) (3 samples, 0.25%)</title><rect x="58.2299%" y="228" width="0.2481%" height="15" fill="rgb(207,181,40)" fg:x="704" fg:w="3"/><text x="58.4799%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:488) (2 samples, 0.17%)</title><rect x="58.5608%" y="228" width="0.1654%" height="15" fill="rgb(254,173,49)" fg:x="708" fg:w="2"/><text x="58.8108%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:508) (5 samples, 0.41%)</title><rect x="58.8916%" y="228" width="0.4136%" height="15" fill="rgb(221,1,38)" fg:x="712" fg:w="5"/><text x="59.1416%" y="238.50"></text></g><g><title>set_joint_position_targets (omnigibson/utils/usd_utils.py:798) (5 samples, 0.41%)</title><rect x="58.8916%" y="244" width="0.4136%" height="15" fill="rgb(206,124,46)" fg:x="712" fg:w="5"/><text x="59.1416%" y="254.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:509) (14 samples, 1.16%)</title><rect x="59.3052%" y="228" width="1.1580%" height="15" fill="rgb(249,21,11)" fg:x="717" fg:w="14"/><text x="59.5552%" y="238.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (13 samples, 1.08%)</title><rect x="59.3879%" y="244" width="1.0753%" height="15" fill="rgb(222,201,40)" fg:x="718" fg:w="13"/><text x="59.6379%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (13 samples, 1.08%)</title><rect x="59.3879%" y="260" width="1.0753%" height="15" fill="rgb(235,61,29)" fg:x="718" fg:w="13"/><text x="59.6379%" y="270.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (13 samples, 1.08%)</title><rect x="59.3879%" y="276" width="1.0753%" height="15" fill="rgb(219,207,3)" fg:x="718" fg:w="13"/><text x="59.6379%" y="286.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (13 samples, 1.08%)</title><rect x="59.3879%" y="292" width="1.0753%" height="15" fill="rgb(222,56,46)" fg:x="718" fg:w="13"/><text x="59.6379%" y="302.50"></text></g><g><title>set_joint_velocity_targets (omnigibson/utils/usd_utils.py:811) (2 samples, 0.17%)</title><rect x="60.6286%" y="244" width="0.1654%" height="15" fill="rgb(239,76,54)" fg:x="733" fg:w="2"/><text x="60.8786%" y="254.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:512) (5 samples, 0.41%)</title><rect x="60.4632%" y="228" width="0.4136%" height="15" fill="rgb(231,124,27)" fg:x="731" fg:w="5"/><text x="60.7132%" y="238.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (9 samples, 0.74%)</title><rect x="60.9595%" y="244" width="0.7444%" height="15" fill="rgb(249,195,6)" fg:x="737" fg:w="9"/><text x="61.2095%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (9 samples, 0.74%)</title><rect x="60.9595%" y="260" width="0.7444%" height="15" fill="rgb(237,174,47)" fg:x="737" fg:w="9"/><text x="61.2095%" y="270.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (8 samples, 0.66%)</title><rect x="61.0422%" y="276" width="0.6617%" height="15" fill="rgb(206,201,31)" fg:x="738" fg:w="8"/><text x="61.2922%" y="286.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (8 samples, 0.66%)</title><rect x="61.0422%" y="292" width="0.6617%" height="15" fill="rgb(231,57,52)" fg:x="738" fg:w="8"/><text x="61.2922%" y="302.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:513) (11 samples, 0.91%)</title><rect x="60.8768%" y="228" width="0.9098%" height="15" fill="rgb(248,177,22)" fg:x="736" fg:w="11"/><text x="61.1268%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:516) (10 samples, 0.83%)</title><rect x="61.7866%" y="228" width="0.8271%" height="15" fill="rgb(215,211,37)" fg:x="747" fg:w="10"/><text x="62.0366%" y="238.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/usd_utils.py:834) (5 samples, 0.41%)</title><rect x="62.2002%" y="244" width="0.4136%" height="15" fill="rgb(241,128,51)" fg:x="752" fg:w="5"/><text x="62.4502%" y="254.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:392) (85 samples, 7.03%)</title><rect x="56.1621%" y="212" width="7.0306%" height="15" fill="rgb(227,165,31)" fg:x="679" fg:w="85"/><text x="56.4121%" y="222.50">deploy_co..</text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:517) (7 samples, 0.58%)</title><rect x="62.6137%" y="228" width="0.5790%" height="15" fill="rgb(228,167,24)" fg:x="757" fg:w="7"/><text x="62.8637%" y="238.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (4 samples, 0.33%)</title><rect x="62.8619%" y="244" width="0.3309%" height="15" fill="rgb(228,143,12)" fg:x="760" fg:w="4"/><text x="63.1119%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (4 samples, 0.33%)</title><rect x="62.8619%" y="260" width="0.3309%" height="15" fill="rgb(249,149,8)" fg:x="760" fg:w="4"/><text x="63.1119%" y="270.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (4 samples, 0.33%)</title><rect x="62.8619%" y="276" width="0.3309%" height="15" fill="rgb(243,35,44)" fg:x="760" fg:w="4"/><text x="63.1119%" y="286.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (4 samples, 0.33%)</title><rect x="62.8619%" y="292" width="0.3309%" height="15" fill="rgb(246,89,9)" fg:x="760" fg:w="4"/><text x="63.1119%" y="302.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1318) (3 samples, 0.25%)</title><rect x="63.1927%" y="228" width="0.2481%" height="15" fill="rgb(233,213,13)" fg:x="764" fg:w="3"/><text x="63.4427%" y="238.50"></text></g><g><title>arm_names (omnigibson/robots/manipulation_robot.py:561) (2 samples, 0.17%)</title><rect x="63.2754%" y="244" width="0.1654%" height="15" fill="rgb(233,141,41)" fg:x="765" fg:w="2"/><text x="63.5254%" y="254.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3426) (2 samples, 0.17%)</title><rect x="63.8544%" y="260" width="0.1654%" height="15" fill="rgb(239,167,4)" fg:x="772" fg:w="2"/><text x="64.1044%" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:164) (2 samples, 0.17%)</title><rect x="64.1026%" y="276" width="0.1654%" height="15" fill="rgb(209,217,16)" fg:x="775" fg:w="2"/><text x="64.3526%" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:168) (3 samples, 0.25%)</title><rect x="64.2680%" y="276" width="0.2481%" height="15" fill="rgb(219,88,35)" fg:x="777" fg:w="3"/><text x="64.5180%" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (6 samples, 0.50%)</title><rect x="64.5161%" y="276" width="0.4963%" height="15" fill="rgb(220,193,23)" fg:x="780" fg:w="6"/><text x="64.7661%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1324) (29 samples, 2.40%)</title><rect x="63.5236%" y="228" width="2.3987%" height="15" fill="rgb(230,90,52)" fg:x="768" fg:w="29"/><text x="63.7736%" y="238.50">_h..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (28 samples, 2.32%)</title><rect x="63.6063%" y="244" width="2.3160%" height="15" fill="rgb(252,106,19)" fg:x="769" fg:w="28"/><text x="63.8563%" y="254.50">m..</text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (23 samples, 1.90%)</title><rect x="64.0199%" y="260" width="1.9024%" height="15" fill="rgb(206,74,20)" fg:x="774" fg:w="23"/><text x="64.2699%" y="270.50">m..</text></g><g><title>_mean (numpy/core/_methods.py:182) (11 samples, 0.91%)</title><rect x="65.0124%" y="276" width="0.9098%" height="15" fill="rgb(230,138,44)" fg:x="786" fg:w="11"/><text x="65.2624%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:70) (2 samples, 0.17%)</title><rect x="66.4185%" y="276" width="0.1654%" height="15" fill="rgb(235,182,43)" fg:x="803" fg:w="2"/><text x="66.6685%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1330) (12 samples, 0.99%)</title><rect x="65.9222%" y="228" width="0.9926%" height="15" fill="rgb(242,16,51)" fg:x="797" fg:w="12"/><text x="66.1722%" y="238.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:180) (9 samples, 0.74%)</title><rect x="66.1704%" y="244" width="0.7444%" height="15" fill="rgb(248,9,4)" fg:x="800" fg:w="9"/><text x="66.4204%" y="254.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2397) (8 samples, 0.66%)</title><rect x="66.2531%" y="260" width="0.6617%" height="15" fill="rgb(210,31,22)" fg:x="801" fg:w="8"/><text x="66.5031%" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (4 samples, 0.33%)</title><rect x="66.5840%" y="276" width="0.3309%" height="15" fill="rgb(239,54,39)" fg:x="805" fg:w="4"/><text x="66.8340%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1334) (2 samples, 0.17%)</title><rect x="66.9148%" y="228" width="0.1654%" height="15" fill="rgb(230,99,41)" fg:x="809" fg:w="2"/><text x="67.1648%" y="238.50"></text></g><g><title>_find_gripper_contacts (omnigibson/robots/manipulation_robot.py:314) (14 samples, 1.16%)</title><rect x="67.3284%" y="276" width="1.1580%" height="15" fill="rgb(253,106,12)" fg:x="814" fg:w="14"/><text x="67.5784%" y="286.50"></text></g><g><title>link_prim_paths (omnigibson/objects/object_base.py:295) (13 samples, 1.08%)</title><rect x="67.4111%" y="292" width="1.0753%" height="15" fill="rgb(213,46,41)" fg:x="815" fg:w="13"/><text x="67.6611%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/objects/object_base.py:295) (11 samples, 0.91%)</title><rect x="67.5765%" y="308" width="0.9098%" height="15" fill="rgb(215,133,35)" fg:x="817" fg:w="11"/><text x="67.8265%" y="318.50"></text></g><g><title>prim_path (omnigibson/prims/prim_base.py:148) (9 samples, 0.74%)</title><rect x="67.7419%" y="324" width="0.7444%" height="15" fill="rgb(213,28,5)" fg:x="819" fg:w="9"/><text x="67.9919%" y="334.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:155) (574 samples, 47.48%)</title><rect x="21.0918%" y="164" width="47.4773%" height="15" fill="rgb(215,77,49)" fg:x="255" fg:w="574"/><text x="21.3418%" y="174.50">&lt;lambda&gt; (omnigibson/objects/controllable_object.py:155)</text></g><g><title>step (omnigibson/robots/robot_base.py:313) (571 samples, 47.23%)</title><rect x="21.3400%" y="180" width="47.2291%" height="15" fill="rgb(248,100,22)" fg:x="258" fg:w="571"/><text x="21.5900%" y="190.50">step (omnigibson/robots/robot_base.py:313)</text></g><g><title>step (omnigibson/objects/controllable_object.py:387) (154 samples, 12.74%)</title><rect x="55.8313%" y="196" width="12.7378%" height="15" fill="rgb(208,67,9)" fg:x="675" fg:w="154"/><text x="56.0813%" y="206.50">step (omnigibson/ob..</text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:396) (65 samples, 5.38%)</title><rect x="63.1927%" y="212" width="5.3763%" height="15" fill="rgb(219,133,21)" fg:x="764" fg:w="65"/><text x="63.4427%" y="222.50">deploy_..</text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1344) (18 samples, 1.49%)</title><rect x="67.0802%" y="228" width="1.4888%" height="15" fill="rgb(246,46,29)" fg:x="811" fg:w="18"/><text x="67.3302%" y="238.50"></text></g><g><title>_calculate_in_hand_object (omnigibson/robots/manipulation_robot.py:1367) (17 samples, 1.41%)</title><rect x="67.1629%" y="244" width="1.4061%" height="15" fill="rgb(246,185,52)" fg:x="812" fg:w="17"/><text x="67.4129%" y="254.50"></text></g><g><title>_calculate_in_hand_object_rigid (omnigibson/robots/manipulation_robot.py:867) (17 samples, 1.41%)</title><rect x="67.1629%" y="260" width="1.4061%" height="15" fill="rgb(252,136,11)" fg:x="812" fg:w="17"/><text x="67.4129%" y="270.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (2 samples, 0.17%)</title><rect x="68.7345%" y="308" width="0.1654%" height="15" fill="rgb(219,138,53)" fg:x="831" fg:w="2"/><text x="68.9845%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (2 samples, 0.17%)</title><rect x="68.7345%" y="324" width="0.1654%" height="15" fill="rgb(211,51,23)" fg:x="831" fg:w="2"/><text x="68.9845%" y="334.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (2 samples, 0.17%)</title><rect x="68.7345%" y="340" width="0.1654%" height="15" fill="rgb(247,221,28)" fg:x="831" fg:w="2"/><text x="68.9845%" y="350.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (2 samples, 0.17%)</title><rect x="68.7345%" y="356" width="0.1654%" height="15" fill="rgb(251,222,45)" fg:x="831" fg:w="2"/><text x="68.9845%" y="366.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:554) (4 samples, 0.33%)</title><rect x="68.7345%" y="292" width="0.3309%" height="15" fill="rgb(217,162,53)" fg:x="831" fg:w="4"/><text x="68.9845%" y="302.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:173) (5 samples, 0.41%)</title><rect x="68.7345%" y="244" width="0.4136%" height="15" fill="rgb(229,93,14)" fg:x="831" fg:w="5"/><text x="68.9845%" y="254.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (5 samples, 0.41%)</title><rect x="68.7345%" y="260" width="0.4136%" height="15" fill="rgb(209,67,49)" fg:x="831" fg:w="5"/><text x="68.9845%" y="270.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (5 samples, 0.41%)</title><rect x="68.7345%" y="276" width="0.4136%" height="15" fill="rgb(213,87,29)" fg:x="831" fg:w="5"/><text x="68.9845%" y="286.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:181) (2 samples, 0.17%)</title><rect x="69.2308%" y="244" width="0.1654%" height="15" fill="rgb(205,151,52)" fg:x="837" fg:w="2"/><text x="69.4808%" y="254.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.17%)</title><rect x="69.2308%" y="260" width="0.1654%" height="15" fill="rgb(253,215,39)" fg:x="837" fg:w="2"/><text x="69.4808%" y="270.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:190) (5 samples, 0.41%)</title><rect x="69.4789%" y="244" width="0.4136%" height="15" fill="rgb(221,220,41)" fg:x="840" fg:w="5"/><text x="69.7289%" y="254.50"></text></g><g><title>meshgrid (&lt;__array_function__ internals&gt;:180) (4 samples, 0.33%)</title><rect x="69.5616%" y="260" width="0.3309%" height="15" fill="rgb(218,133,21)" fg:x="841" fg:w="4"/><text x="69.8116%" y="270.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:191) (9 samples, 0.74%)</title><rect x="69.8925%" y="244" width="0.7444%" height="15" fill="rgb(221,193,43)" fg:x="845" fg:w="9"/><text x="70.1425%" y="254.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (9 samples, 0.74%)</title><rect x="69.8925%" y="260" width="0.7444%" height="15" fill="rgb(240,128,52)" fg:x="845" fg:w="9"/><text x="70.1425%" y="270.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (9 samples, 0.74%)</title><rect x="69.8925%" y="276" width="0.7444%" height="15" fill="rgb(253,114,12)" fg:x="845" fg:w="9"/><text x="70.1425%" y="286.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:557) (9 samples, 0.74%)</title><rect x="69.8925%" y="292" width="0.7444%" height="15" fill="rgb(215,223,47)" fg:x="845" fg:w="9"/><text x="70.1425%" y="302.50"></text></g><g><title>get_mass_matrix (omnigibson/utils/usd_utils.py:903) (8 samples, 0.66%)</title><rect x="69.9752%" y="308" width="0.6617%" height="15" fill="rgb(248,225,23)" fg:x="846" fg:w="8"/><text x="70.2252%" y="318.50"></text></g><g><title>get_mass_matrices (tensors/impl/api.py:587) (8 samples, 0.66%)</title><rect x="69.9752%" y="324" width="0.6617%" height="15" fill="rgb(250,108,0)" fg:x="846" fg:w="8"/><text x="70.2252%" y="334.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:559) (7 samples, 0.58%)</title><rect x="70.7196%" y="292" width="0.5790%" height="15" fill="rgb(228,208,7)" fg:x="855" fg:w="7"/><text x="70.9696%" y="302.50"></text></g><g><title>get_generalized_gravity_forces (omnigibson/utils/usd_utils.py:912) (7 samples, 0.58%)</title><rect x="70.7196%" y="308" width="0.5790%" height="15" fill="rgb(244,45,10)" fg:x="855" fg:w="7"/><text x="70.9696%" y="318.50"></text></g><g><title>get_generalized_gravity_forces (tensors/impl/api.py:613) (7 samples, 0.58%)</title><rect x="70.7196%" y="324" width="0.5790%" height="15" fill="rgb(207,125,25)" fg:x="855" fg:w="7"/><text x="70.9696%" y="334.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:560) (3 samples, 0.25%)</title><rect x="71.2986%" y="292" width="0.2481%" height="15" fill="rgb(210,195,18)" fg:x="862" fg:w="3"/><text x="71.5486%" y="302.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (3 samples, 0.25%)</title><rect x="71.2986%" y="308" width="0.2481%" height="15" fill="rgb(249,80,12)" fg:x="862" fg:w="3"/><text x="71.5486%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (3 samples, 0.25%)</title><rect x="71.2986%" y="324" width="0.2481%" height="15" fill="rgb(221,65,9)" fg:x="862" fg:w="3"/><text x="71.5486%" y="334.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (3 samples, 0.25%)</title><rect x="71.2986%" y="340" width="0.2481%" height="15" fill="rgb(235,49,36)" fg:x="862" fg:w="3"/><text x="71.5486%" y="350.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (3 samples, 0.25%)</title><rect x="71.2986%" y="356" width="0.2481%" height="15" fill="rgb(225,32,20)" fg:x="862" fg:w="3"/><text x="71.5486%" y="366.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:562) (8 samples, 0.66%)</title><rect x="71.5467%" y="292" width="0.6617%" height="15" fill="rgb(215,141,46)" fg:x="865" fg:w="8"/><text x="71.7967%" y="302.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (omnigibson/utils/usd_utils.py:920) (8 samples, 0.66%)</title><rect x="71.5467%" y="308" width="0.6617%" height="15" fill="rgb(250,160,47)" fg:x="865" fg:w="8"/><text x="71.7967%" y="318.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (tensors/impl/api.py:600) (8 samples, 0.66%)</title><rect x="71.5467%" y="324" width="0.6617%" height="15" fill="rgb(216,222,40)" fg:x="865" fg:w="8"/><text x="71.7967%" y="334.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (20 samples, 1.65%)</title><rect x="70.7196%" y="260" width="1.6543%" height="15" fill="rgb(234,217,39)" fg:x="855" fg:w="20"/><text x="70.9696%" y="270.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (20 samples, 1.65%)</title><rect x="70.7196%" y="276" width="1.6543%" height="15" fill="rgb(207,178,40)" fg:x="855" fg:w="20"/><text x="70.9696%" y="286.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:563) (2 samples, 0.17%)</title><rect x="72.2084%" y="292" width="0.1654%" height="15" fill="rgb(221,136,13)" fg:x="873" fg:w="2"/><text x="72.4584%" y="302.50"></text></g><g><title>articulation_root_path (omnigibson/objects/object_base.py:235) (2 samples, 0.17%)</title><rect x="72.2084%" y="308" width="0.1654%" height="15" fill="rgb(249,199,10)" fg:x="873" fg:w="2"/><text x="72.4584%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (2 samples, 0.17%)</title><rect x="72.2084%" y="324" width="0.1654%" height="15" fill="rgb(249,222,13)" fg:x="873" fg:w="2"/><text x="72.4584%" y="334.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (2 samples, 0.17%)</title><rect x="72.2084%" y="340" width="0.1654%" height="15" fill="rgb(244,185,38)" fg:x="873" fg:w="2"/><text x="72.4584%" y="350.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (2 samples, 0.17%)</title><rect x="72.2084%" y="356" width="0.1654%" height="15" fill="rgb(236,202,9)" fg:x="873" fg:w="2"/><text x="72.4584%" y="366.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:195) (22 samples, 1.82%)</title><rect x="70.6369%" y="244" width="1.8197%" height="15" fill="rgb(250,229,37)" fg:x="854" fg:w="22"/><text x="70.8869%" y="254.50">c..</text></g><g><title>step (omnigibson/controllers/controller_base.py:277) (48 samples, 3.97%)</title><rect x="68.7345%" y="228" width="3.9702%" height="15" fill="rgb(206,174,23)" fg:x="831" fg:w="48"/><text x="68.9845%" y="238.50">step..</text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:209) (2 samples, 0.17%)</title><rect x="72.5393%" y="244" width="0.1654%" height="15" fill="rgb(211,33,43)" fg:x="877" fg:w="2"/><text x="72.7893%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:249) (5 samples, 0.41%)</title><rect x="72.7047%" y="244" width="0.4136%" height="15" fill="rgb(245,58,50)" fg:x="879" fg:w="5"/><text x="72.9547%" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:160) (2 samples, 0.17%)</title><rect x="72.9529%" y="260" width="0.1654%" height="15" fill="rgb(244,68,36)" fg:x="882" fg:w="2"/><text x="73.2029%" y="270.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:369) (56 samples, 4.63%)</title><rect x="68.7345%" y="212" width="4.6319%" height="15" fill="rgb(232,229,15)" fg:x="831" fg:w="56"/><text x="68.9845%" y="222.50">step ..</text></g><g><title>step (omnigibson/controllers/controller_base.py:278) (8 samples, 0.66%)</title><rect x="72.7047%" y="228" width="0.6617%" height="15" fill="rgb(254,30,23)" fg:x="879" fg:w="8"/><text x="72.9547%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:508) (3 samples, 0.25%)</title><rect x="73.8627%" y="244" width="0.2481%" height="15" fill="rgb(235,160,14)" fg:x="893" fg:w="3"/><text x="74.1127%" y="254.50"></text></g><g><title>set_joint_position_targets (omnigibson/utils/usd_utils.py:798) (2 samples, 0.17%)</title><rect x="73.9454%" y="260" width="0.1654%" height="15" fill="rgb(212,155,44)" fg:x="894" fg:w="2"/><text x="74.1954%" y="270.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:392) (10 samples, 0.83%)</title><rect x="73.5318%" y="228" width="0.8271%" height="15" fill="rgb(226,2,50)" fg:x="889" fg:w="10"/><text x="73.7818%" y="238.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1324) (3 samples, 0.25%)</title><rect x="74.4417%" y="244" width="0.2481%" height="15" fill="rgb(234,177,6)" fg:x="900" fg:w="3"/><text x="74.6917%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (3 samples, 0.25%)</title><rect x="74.4417%" y="260" width="0.2481%" height="15" fill="rgb(217,24,9)" fg:x="900" fg:w="3"/><text x="74.6917%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (2 samples, 0.17%)</title><rect x="74.5244%" y="276" width="0.1654%" height="15" fill="rgb(220,13,46)" fg:x="901" fg:w="2"/><text x="74.7744%" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (2 samples, 0.17%)</title><rect x="74.5244%" y="292" width="0.1654%" height="15" fill="rgb(239,221,27)" fg:x="901" fg:w="2"/><text x="74.7744%" y="302.50"></text></g><g><title>_on_physics_step (omnigibson/simulator.py:876) (74 samples, 6.12%)</title><rect x="68.6518%" y="180" width="6.1208%" height="15" fill="rgb(222,198,25)" fg:x="830" fg:w="74"/><text x="68.9018%" y="190.50">_on_phys..</text></g><g><title>step (omnigibson/robots/robot_base.py:313) (74 samples, 6.12%)</title><rect x="68.6518%" y="196" width="6.1208%" height="15" fill="rgb(211,99,13)" fg:x="830" fg:w="74"/><text x="68.9018%" y="206.50">step (om..</text></g><g><title>step (omnigibson/objects/controllable_object.py:387) (15 samples, 1.24%)</title><rect x="73.5318%" y="212" width="1.2407%" height="15" fill="rgb(232,111,31)" fg:x="889" fg:w="15"/><text x="73.7818%" y="222.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:396) (4 samples, 0.33%)</title><rect x="74.4417%" y="228" width="0.3309%" height="15" fill="rgb(245,82,37)" fg:x="900" fg:w="4"/><text x="74.6917%" y="238.50"></text></g><g><title>step (omnigibson/simulator.py:850) (791 samples, 65.43%)</title><rect x="9.5947%" y="116" width="65.4260%" height="15" fill="rgb(227,149,46)" fg:x="116" fg:w="791"/><text x="9.8447%" y="126.50">step (omnigibson/simulator.py:850)</text></g><g><title>step (core/simulation_context/simulation_context.py:704) (785 samples, 64.93%)</title><rect x="10.0910%" y="132" width="64.9297%" height="15" fill="rgb(218,36,50)" fg:x="122" fg:w="785"/><text x="10.3410%" y="142.50">step (core/simulation_context/simulation_context.py:704)</text></g><g><title>_step (core/physics_context/physics_context.py:574) (780 samples, 64.52%)</title><rect x="10.5045%" y="148" width="64.5161%" height="15" fill="rgb(226,80,48)" fg:x="127" fg:w="780"/><text x="10.7545%" y="158.50">_step (core/physics_context/physics_context.py:574)</text></g><g><title>&lt;lambda&gt; (omnigibson/simulator.py:1423) (78 samples, 6.45%)</title><rect x="68.5691%" y="164" width="6.4516%" height="15" fill="rgb(238,224,15)" fg:x="829" fg:w="78"/><text x="68.8191%" y="174.50">&lt;lambda&gt;..</text></g><g><title>_on_physics_step (omnigibson/simulator.py:879) (3 samples, 0.25%)</title><rect x="74.7725%" y="180" width="0.2481%" height="15" fill="rgb(241,136,10)" fg:x="904" fg:w="3"/><text x="75.0225%" y="190.50"></text></g><g><title>flush_control (omnigibson/utils/usd_utils.py:734) (3 samples, 0.25%)</title><rect x="74.7725%" y="196" width="0.2481%" height="15" fill="rgb(208,32,45)" fg:x="904" fg:w="3"/><text x="75.0225%" y="206.50"></text></g><g><title>global_update (omnigibson/object_states/tensorized_value_state.py:44) (2 samples, 0.17%)</title><rect x="75.0207%" y="148" width="0.1654%" height="15" fill="rgb(207,135,9)" fg:x="907" fg:w="2"/><text x="75.2707%" y="158.50"></text></g><g><title>_update_values (omnigibson/object_states/temperature.py:58) (2 samples, 0.17%)</title><rect x="75.0207%" y="164" width="0.1654%" height="15" fill="rgb(206,86,44)" fg:x="907" fg:w="2"/><text x="75.2707%" y="174.50"></text></g><g><title>get_rendering_dt (core/simulation_context/simulation_context.py:493) (2 samples, 0.17%)</title><rect x="75.0207%" y="180" width="0.1654%" height="15" fill="rgb(245,177,15)" fg:x="907" fg:w="2"/><text x="75.2707%" y="190.50"></text></g><g><title>stage (core/simulation_context/simulation_context.py:291) (2 samples, 0.17%)</title><rect x="75.0207%" y="196" width="0.1654%" height="15" fill="rgb(206,64,50)" fg:x="907" fg:w="2"/><text x="75.2707%" y="206.50"></text></g><g><title>get_current_stage (core/utils/stage.py:52) (2 samples, 0.17%)</title><rect x="75.0207%" y="212" width="0.1654%" height="15" fill="rgb(234,36,40)" fg:x="907" fg:w="2"/><text x="75.2707%" y="222.50"></text></g><g><title>_non_physics_step (omnigibson/simulator.py:729) (7 samples, 0.58%)</title><rect x="75.0207%" y="132" width="0.5790%" height="15" fill="rgb(213,64,8)" fg:x="907" fg:w="7"/><text x="75.2707%" y="142.50"></text></g><g><title>global_update (omnigibson/object_states/toggle.py:63) (3 samples, 0.25%)</title><rect x="75.3515%" y="148" width="0.2481%" height="15" fill="rgb(210,75,36)" fg:x="911" fg:w="3"/><text x="75.6015%" y="158.50"></text></g><g><title>get_all_impulses (omnigibson/utils/usd_utils.py:324) (3 samples, 0.25%)</title><rect x="75.3515%" y="164" width="0.2481%" height="15" fill="rgb(229,88,21)" fg:x="911" fg:w="3"/><text x="75.6015%" y="174.50"></text></g><g><title>get_contact_force_matrix (tensors/impl/api.py:1426) (3 samples, 0.25%)</title><rect x="75.3515%" y="180" width="0.2481%" height="15" fill="rgb(252,204,47)" fg:x="911" fg:w="3"/><text x="75.6015%" y="190.50"></text></g><g><title>update_visuals (omnigibson/objects/stateful_object.py:451) (2 samples, 0.17%)</title><rect x="75.5997%" y="148" width="0.1654%" height="15" fill="rgb(208,77,27)" fg:x="914" fg:w="2"/><text x="75.8497%" y="158.50"></text></g><g><title>update_visuals (omnigibson/objects/stateful_object.py:454) (2 samples, 0.17%)</title><rect x="75.7651%" y="148" width="0.1654%" height="15" fill="rgb(221,76,26)" fg:x="916" fg:w="2"/><text x="76.0151%" y="158.50"></text></g><g><title>get_value (omnigibson/object_states/object_state_base.py:323) (2 samples, 0.17%)</title><rect x="75.7651%" y="164" width="0.1654%" height="15" fill="rgb(225,139,18)" fg:x="916" fg:w="2"/><text x="76.0151%" y="174.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:16) (806 samples, 66.67%)</title><rect x="9.4293%" y="100" width="66.6667%" height="15" fill="rgb(230,137,11)" fg:x="114" fg:w="806"/><text x="9.6793%" y="110.50">step (omnigibson/envs/vec_env_base.py:16)</text></g><g><title>step (omnigibson/simulator.py:853) (13 samples, 1.08%)</title><rect x="75.0207%" y="116" width="1.0753%" height="15" fill="rgb(212,28,1)" fg:x="907" fg:w="13"/><text x="75.2707%" y="126.50"></text></g><g><title>_non_physics_step (omnigibson/simulator.py:743) (6 samples, 0.50%)</title><rect x="75.5997%" y="132" width="0.4963%" height="15" fill="rgb(248,164,17)" fg:x="914" fg:w="6"/><text x="75.8497%" y="142.50"></text></g><g><title>update_visuals (omnigibson/objects/stateful_object.py:459) (2 samples, 0.17%)</title><rect x="75.9305%" y="148" width="0.1654%" height="15" fill="rgb(222,171,42)" fg:x="918" fg:w="2"/><text x="76.1805%" y="158.50"></text></g><g><title>set_emitter_enabled (omnigibson/objects/stateful_object.py:422) (2 samples, 0.17%)</title><rect x="75.9305%" y="164" width="0.1654%" height="15" fill="rgb(243,84,45)" fg:x="918" fg:w="2"/><text x="76.1805%" y="174.50"></text></g><g><title>get_obs (omnigibson/envs/env_base.py:484) (4 samples, 0.33%)</title><rect x="76.0959%" y="132" width="0.3309%" height="15" fill="rgb(252,49,23)" fg:x="920" fg:w="4"/><text x="76.3459%" y="142.50"></text></g><g><title>wrapper (functools.py:889) (3 samples, 0.25%)</title><rect x="76.1787%" y="148" width="0.2481%" height="15" fill="rgb(215,19,7)" fg:x="921" fg:w="3"/><text x="76.4287%" y="158.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1445) (2 samples, 0.17%)</title><rect x="76.6749%" y="292" width="0.1654%" height="15" fill="rgb(238,81,41)" fg:x="927" fg:w="2"/><text x="76.9249%" y="302.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1450) (2 samples, 0.17%)</title><rect x="76.8404%" y="292" width="0.1654%" height="15" fill="rgb(210,199,37)" fg:x="929" fg:w="2"/><text x="77.0904%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:355) (5 samples, 0.41%)</title><rect x="76.6749%" y="260" width="0.4136%" height="15" fill="rgb(244,192,49)" fg:x="927" fg:w="5"/><text x="76.9249%" y="270.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (5 samples, 0.41%)</title><rect x="76.6749%" y="276" width="0.4136%" height="15" fill="rgb(226,211,11)" fg:x="927" fg:w="5"/><text x="76.9249%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:356) (3 samples, 0.25%)</title><rect x="77.0885%" y="260" width="0.2481%" height="15" fill="rgb(236,162,54)" fg:x="932" fg:w="3"/><text x="77.3385%" y="270.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (3 samples, 0.25%)</title><rect x="77.0885%" y="276" width="0.2481%" height="15" fill="rgb(220,229,9)" fg:x="932" fg:w="3"/><text x="77.3385%" y="286.50"></text></g><g><title>get_measured_joint_efforts (core/articulations/articulation_view.py:1281) (2 samples, 0.17%)</title><rect x="77.4194%" y="292" width="0.1654%" height="15" fill="rgb(250,87,22)" fg:x="936" fg:w="2"/><text x="77.6694%" y="302.50"></text></g><g><title>get_dof_projected_joint_forces (tensors/impl/api.py:543) (2 samples, 0.17%)</title><rect x="77.4194%" y="308" width="0.1654%" height="15" fill="rgb(239,43,17)" fg:x="936" fg:w="2"/><text x="77.6694%" y="318.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:357) (5 samples, 0.41%)</title><rect x="77.3366%" y="260" width="0.4136%" height="15" fill="rgb(231,177,25)" fg:x="935" fg:w="5"/><text x="77.5866%" y="270.50"></text></g><g><title>get_joint_efforts (omnigibson/prims/entity_prim.py:924) (4 samples, 0.33%)</title><rect x="77.4194%" y="276" width="0.3309%" height="15" fill="rgb(219,179,1)" fg:x="936" fg:w="4"/><text x="77.6694%" y="286.50"></text></g><g><title>roll (numpy/core/numeric.py:1229) (2 samples, 0.17%)</title><rect x="77.8329%" y="356" width="0.1654%" height="15" fill="rgb(238,219,53)" fg:x="941" fg:w="2"/><text x="78.0829%" y="366.50"></text></g><g><title>get_position (omnigibson/prims/xform_prim.py:220) (5 samples, 0.41%)</title><rect x="77.7502%" y="276" width="0.4136%" height="15" fill="rgb(232,167,36)" fg:x="940" fg:w="5"/><text x="78.0002%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (5 samples, 0.41%)</title><rect x="77.7502%" y="292" width="0.4136%" height="15" fill="rgb(244,19,51)" fg:x="940" fg:w="5"/><text x="78.0002%" y="302.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (5 samples, 0.41%)</title><rect x="77.7502%" y="308" width="0.4136%" height="15" fill="rgb(224,6,22)" fg:x="940" fg:w="5"/><text x="78.0002%" y="318.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (5 samples, 0.41%)</title><rect x="77.7502%" y="324" width="0.4136%" height="15" fill="rgb(224,145,5)" fg:x="940" fg:w="5"/><text x="78.0002%" y="334.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="77.7502%" y="340" width="0.4136%" height="15" fill="rgb(234,130,49)" fg:x="940" fg:w="5"/><text x="78.0002%" y="350.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (2 samples, 0.17%)</title><rect x="78.2465%" y="308" width="0.1654%" height="15" fill="rgb(254,6,2)" fg:x="946" fg:w="2"/><text x="78.4965%" y="318.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (2 samples, 0.17%)</title><rect x="78.2465%" y="324" width="0.1654%" height="15" fill="rgb(208,96,46)" fg:x="946" fg:w="2"/><text x="78.4965%" y="334.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (5 samples, 0.41%)</title><rect x="78.1638%" y="292" width="0.4136%" height="15" fill="rgb(239,3,39)" fg:x="945" fg:w="5"/><text x="78.4138%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:358) (25 samples, 2.07%)</title><rect x="77.7502%" y="260" width="2.0678%" height="15" fill="rgb(233,210,1)" fg:x="940" fg:w="25"/><text x="78.0002%" y="270.50">_..</text></g><g><title>get_rpy (omnigibson/prims/xform_prim.py:247) (20 samples, 1.65%)</title><rect x="78.1638%" y="276" width="1.6543%" height="15" fill="rgb(244,137,37)" fg:x="945" fg:w="20"/><text x="78.4138%" y="286.50"></text></g><g><title>quat2euler (omnigibson/utils/transform_utils.py:534) (15 samples, 1.24%)</title><rect x="78.5773%" y="292" width="1.2407%" height="15" fill="rgb(240,136,2)" fg:x="950" fg:w="15"/><text x="78.8273%" y="302.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:180) (4 samples, 0.33%)</title><rect x="79.8180%" y="292" width="0.3309%" height="15" fill="rgb(239,18,37)" fg:x="965" fg:w="4"/><text x="80.0680%" y="302.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1371) (2 samples, 0.17%)</title><rect x="79.9835%" y="308" width="0.1654%" height="15" fill="rgb(218,185,22)" fg:x="967" fg:w="2"/><text x="80.2335%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (5 samples, 0.41%)</title><rect x="80.1489%" y="308" width="0.4136%" height="15" fill="rgb(225,218,4)" fg:x="969" fg:w="5"/><text x="80.3989%" y="318.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (2 samples, 0.17%)</title><rect x="80.3970%" y="324" width="0.1654%" height="15" fill="rgb(230,182,32)" fg:x="972" fg:w="2"/><text x="80.6470%" y="334.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (2 samples, 0.17%)</title><rect x="80.3970%" y="340" width="0.1654%" height="15" fill="rgb(242,56,43)" fg:x="972" fg:w="2"/><text x="80.6470%" y="350.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="80.3970%" y="356" width="0.1654%" height="15" fill="rgb(233,99,24)" fg:x="972" fg:w="2"/><text x="80.6470%" y="366.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:254) (10 samples, 0.83%)</title><rect x="79.8180%" y="276" width="0.8271%" height="15" fill="rgb(234,209,42)" fg:x="965" fg:w="10"/><text x="80.0680%" y="286.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (6 samples, 0.50%)</title><rect x="80.1489%" y="292" width="0.4963%" height="15" fill="rgb(227,7,12)" fg:x="969" fg:w="6"/><text x="80.3989%" y="302.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:259) (5 samples, 0.41%)</title><rect x="80.6452%" y="276" width="0.4136%" height="15" fill="rgb(245,203,43)" fg:x="975" fg:w="5"/><text x="80.8952%" y="286.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (4 samples, 0.33%)</title><rect x="80.7279%" y="292" width="0.3309%" height="15" fill="rgb(238,205,33)" fg:x="976" fg:w="4"/><text x="80.9779%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:359) (17 samples, 1.41%)</title><rect x="79.8180%" y="260" width="1.4061%" height="15" fill="rgb(231,56,7)" fg:x="965" fg:w="17"/><text x="80.0680%" y="270.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:262) (2 samples, 0.17%)</title><rect x="81.0587%" y="276" width="0.1654%" height="15" fill="rgb(244,186,29)" fg:x="980" fg:w="2"/><text x="81.3087%" y="286.50"></text></g><g><title>_rigid_prim_view (omnigibson/prims/rigid_prim.py:364) (5 samples, 0.41%)</title><rect x="81.3069%" y="308" width="0.4136%" height="15" fill="rgb(234,111,31)" fg:x="983" fg:w="5"/><text x="81.5569%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (4 samples, 0.33%)</title><rect x="81.3896%" y="324" width="0.3309%" height="15" fill="rgb(241,149,10)" fg:x="984" fg:w="4"/><text x="81.6396%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (4 samples, 0.33%)</title><rect x="81.3896%" y="340" width="0.3309%" height="15" fill="rgb(249,206,44)" fg:x="984" fg:w="4"/><text x="81.6396%" y="350.50"></text></g><g><title>get_linear_velocities (core/prims/rigid_prim_view.py:674) (4 samples, 0.33%)</title><rect x="81.8031%" y="308" width="0.3309%" height="15" fill="rgb(251,153,30)" fg:x="989" fg:w="4"/><text x="82.0531%" y="318.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (3 samples, 0.25%)</title><rect x="81.8859%" y="324" width="0.2481%" height="15" fill="rgb(239,152,38)" fg:x="990" fg:w="3"/><text x="82.1359%" y="334.50"></text></g><g><title>get_linear_velocities (core/prims/rigid_prim_view.py:675) (2 samples, 0.17%)</title><rect x="82.1340%" y="308" width="0.1654%" height="15" fill="rgb(249,139,47)" fg:x="993" fg:w="2"/><text x="82.3840%" y="318.50"></text></g><g><title>get_velocities (tensors/impl/api.py:861) (2 samples, 0.17%)</title><rect x="82.1340%" y="324" width="0.1654%" height="15" fill="rgb(244,64,35)" fg:x="993" fg:w="2"/><text x="82.3840%" y="334.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:372) (13 samples, 1.08%)</title><rect x="81.3069%" y="260" width="1.0753%" height="15" fill="rgb(216,46,15)" fg:x="983" fg:w="13"/><text x="81.5569%" y="270.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/entity_prim.py:945) (13 samples, 1.08%)</title><rect x="81.3069%" y="276" width="1.0753%" height="15" fill="rgb(250,74,19)" fg:x="983" fg:w="13"/><text x="81.5569%" y="286.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/rigid_prim.py:286) (13 samples, 1.08%)</title><rect x="81.3069%" y="292" width="1.0753%" height="15" fill="rgb(249,42,33)" fg:x="983" fg:w="13"/><text x="81.5569%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:35) (76 samples, 6.29%)</title><rect x="76.5922%" y="244" width="6.2862%" height="15" fill="rgb(242,149,17)" fg:x="926" fg:w="76"/><text x="76.8422%" y="254.50">_get_pro..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:373) (6 samples, 0.50%)</title><rect x="82.3821%" y="260" width="0.4963%" height="15" fill="rgb(244,29,21)" fg:x="996" fg:w="6"/><text x="82.6321%" y="270.50"></text></g><g><title>get_angular_velocity (omnigibson/prims/entity_prim.py:962) (5 samples, 0.41%)</title><rect x="82.4648%" y="276" width="0.4136%" height="15" fill="rgb(220,130,37)" fg:x="997" fg:w="5"/><text x="82.7148%" y="286.50"></text></g><g><title>get_angular_velocity (omnigibson/prims/rigid_prim.py:302) (5 samples, 0.41%)</title><rect x="82.4648%" y="292" width="0.4136%" height="15" fill="rgb(211,67,2)" fg:x="997" fg:w="5"/><text x="82.7148%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:38) (3 samples, 0.25%)</title><rect x="82.8784%" y="244" width="0.2481%" height="15" fill="rgb(235,68,52)" fg:x="1002" fg:w="3"/><text x="83.1284%" y="254.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (3 samples, 0.25%)</title><rect x="82.8784%" y="260" width="0.2481%" height="15" fill="rgb(246,142,3)" fg:x="1002" fg:w="3"/><text x="83.1284%" y="270.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (2 samples, 0.17%)</title><rect x="82.9611%" y="276" width="0.1654%" height="15" fill="rgb(241,25,7)" fg:x="1003" fg:w="2"/><text x="83.2111%" y="286.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (2 samples, 0.17%)</title><rect x="82.9611%" y="292" width="0.1654%" height="15" fill="rgb(242,119,39)" fg:x="1003" fg:w="2"/><text x="83.2111%" y="302.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="82.9611%" y="308" width="0.1654%" height="15" fill="rgb(241,98,45)" fg:x="1003" fg:w="2"/><text x="83.2111%" y="318.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:39) (2 samples, 0.17%)</title><rect x="83.1266%" y="244" width="0.1654%" height="15" fill="rgb(254,28,30)" fg:x="1005" fg:w="2"/><text x="83.3766%" y="254.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (2 samples, 0.17%)</title><rect x="83.1266%" y="260" width="0.1654%" height="15" fill="rgb(241,142,54)" fg:x="1005" fg:w="2"/><text x="83.3766%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:40) (82 samples, 6.78%)</title><rect x="76.5922%" y="228" width="6.7825%" height="15" fill="rgb(222,85,15)" fg:x="926" fg:w="82"/><text x="76.8422%" y="238.50">_get_prop..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:42) (5 samples, 0.41%)</title><rect x="83.3747%" y="228" width="0.4136%" height="15" fill="rgb(210,85,47)" fg:x="1008" fg:w="5"/><text x="83.6247%" y="238.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (5 samples, 0.41%)</title><rect x="83.3747%" y="244" width="0.4136%" height="15" fill="rgb(224,206,25)" fg:x="1008" fg:w="5"/><text x="83.6247%" y="254.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (2 samples, 0.17%)</title><rect x="83.6228%" y="260" width="0.1654%" height="15" fill="rgb(243,201,19)" fg:x="1011" fg:w="2"/><text x="83.8728%" y="270.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (2 samples, 0.17%)</title><rect x="83.6228%" y="276" width="0.1654%" height="15" fill="rgb(236,59,4)" fg:x="1011" fg:w="2"/><text x="83.8728%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:43) (5 samples, 0.41%)</title><rect x="83.7883%" y="228" width="0.4136%" height="15" fill="rgb(254,179,45)" fg:x="1013" fg:w="5"/><text x="84.0383%" y="238.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (5 samples, 0.41%)</title><rect x="83.7883%" y="244" width="0.4136%" height="15" fill="rgb(226,14,10)" fg:x="1013" fg:w="5"/><text x="84.0383%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:67) (93 samples, 7.69%)</title><rect x="76.5922%" y="212" width="7.6923%" height="15" fill="rgb(244,27,41)" fg:x="926" fg:w="93"/><text x="76.8422%" y="222.50">_get_propri..</text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1447) (2 samples, 0.17%)</title><rect x="84.6154%" y="260" width="0.1654%" height="15" fill="rgb(235,35,32)" fg:x="1023" fg:w="2"/><text x="84.8654%" y="270.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:622) (9 samples, 0.74%)</title><rect x="84.2845%" y="244" width="0.7444%" height="15" fill="rgb(218,68,31)" fg:x="1019" fg:w="9"/><text x="84.5345%" y="254.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1509) (2 samples, 0.17%)</title><rect x="85.1944%" y="260" width="0.1654%" height="15" fill="rgb(207,120,37)" fg:x="1030" fg:w="2"/><text x="85.4444%" y="270.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:623) (8 samples, 0.66%)</title><rect x="85.0289%" y="244" width="0.6617%" height="15" fill="rgb(227,98,0)" fg:x="1028" fg:w="8"/><text x="85.2789%" y="254.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1517) (3 samples, 0.25%)</title><rect x="85.4425%" y="260" width="0.2481%" height="15" fill="rgb(207,7,3)" fg:x="1033" fg:w="3"/><text x="85.6925%" y="270.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (3 samples, 0.25%)</title><rect x="85.4425%" y="276" width="0.2481%" height="15" fill="rgb(206,98,19)" fg:x="1033" fg:w="3"/><text x="85.6925%" y="286.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (3 samples, 0.25%)</title><rect x="85.4425%" y="292" width="0.2481%" height="15" fill="rgb(217,5,26)" fg:x="1033" fg:w="3"/><text x="85.6925%" y="302.50"></text></g><g><title>get_measured_joint_efforts (core/articulations/articulation_view.py:1278) (2 samples, 0.17%)</title><rect x="85.7734%" y="260" width="0.1654%" height="15" fill="rgb(235,190,38)" fg:x="1037" fg:w="2"/><text x="86.0234%" y="270.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (2 samples, 0.17%)</title><rect x="85.7734%" y="276" width="0.1654%" height="15" fill="rgb(247,86,24)" fg:x="1037" fg:w="2"/><text x="86.0234%" y="286.50"></text></g><g><title>get_measured_joint_efforts (core/articulations/articulation_view.py:1281) (2 samples, 0.17%)</title><rect x="85.9388%" y="260" width="0.1654%" height="15" fill="rgb(205,101,16)" fg:x="1039" fg:w="2"/><text x="86.1888%" y="270.50"></text></g><g><title>get_dof_projected_joint_forces (tensors/impl/api.py:543) (2 samples, 0.17%)</title><rect x="85.9388%" y="276" width="0.1654%" height="15" fill="rgb(246,168,33)" fg:x="1039" fg:w="2"/><text x="86.1888%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:72) (23 samples, 1.90%)</title><rect x="84.2845%" y="212" width="1.9024%" height="15" fill="rgb(231,114,1)" fg:x="1019" fg:w="23"/><text x="84.5345%" y="222.50">_..</text></g><g><title>&lt;listcomp&gt; (omnigibson/robots/two_wheel_robot.py:72) (23 samples, 1.90%)</title><rect x="84.2845%" y="228" width="1.9024%" height="15" fill="rgb(207,184,53)" fg:x="1019" fg:w="23"/><text x="84.5345%" y="238.50">&lt;..</text></g><g><title>get_state (omnigibson/prims/joint_prim.py:624) (6 samples, 0.50%)</title><rect x="85.6907%" y="244" width="0.4963%" height="15" fill="rgb(224,95,51)" fg:x="1036" fg:w="6"/><text x="85.9407%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:477) (119 samples, 9.84%)</title><rect x="76.5922%" y="196" width="9.8428%" height="15" fill="rgb(212,188,45)" fg:x="926" fg:w="119"/><text x="76.8422%" y="206.50">_get_proprioce..</text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1446) (2 samples, 0.17%)</title><rect x="86.5178%" y="228" width="0.1654%" height="15" fill="rgb(223,154,38)" fg:x="1046" fg:w="2"/><text x="86.7678%" y="238.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (2 samples, 0.17%)</title><rect x="86.5178%" y="244" width="0.1654%" height="15" fill="rgb(251,22,52)" fg:x="1046" fg:w="2"/><text x="86.7678%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:480) (6 samples, 0.50%)</title><rect x="86.4351%" y="196" width="0.4963%" height="15" fill="rgb(229,209,22)" fg:x="1045" fg:w="6"/><text x="86.6851%" y="206.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (6 samples, 0.50%)</title><rect x="86.4351%" y="212" width="0.4963%" height="15" fill="rgb(234,138,34)" fg:x="1045" fg:w="6"/><text x="86.6851%" y="222.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (2 samples, 0.17%)</title><rect x="86.7659%" y="228" width="0.1654%" height="15" fill="rgb(212,95,11)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="238.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (2 samples, 0.17%)</title><rect x="86.7659%" y="244" width="0.1654%" height="15" fill="rgb(240,179,47)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="254.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="86.7659%" y="260" width="0.1654%" height="15" fill="rgb(240,163,11)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="270.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:597) (2 samples, 0.17%)</title><rect x="86.7659%" y="276" width="0.1654%" height="15" fill="rgb(236,37,12)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="286.50"></text></g><g><title>normalize_axis_tuple (numpy/core/numeric.py:1397) (2 samples, 0.17%)</title><rect x="86.7659%" y="292" width="0.1654%" height="15" fill="rgb(232,164,16)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (numpy/core/numeric.py:1397) (2 samples, 0.17%)</title><rect x="86.7659%" y="308" width="0.1654%" height="15" fill="rgb(244,205,15)" fg:x="1049" fg:w="2"/><text x="87.0159%" y="318.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:481) (3 samples, 0.25%)</title><rect x="86.9313%" y="196" width="0.2481%" height="15" fill="rgb(223,117,47)" fg:x="1051" fg:w="3"/><text x="87.1813%" y="206.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (3 samples, 0.25%)</title><rect x="86.9313%" y="212" width="0.2481%" height="15" fill="rgb(244,107,35)" fg:x="1051" fg:w="3"/><text x="87.1813%" y="222.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:485) (2 samples, 0.17%)</title><rect x="87.1795%" y="196" width="0.1654%" height="15" fill="rgb(205,140,8)" fg:x="1054" fg:w="2"/><text x="87.4295%" y="206.50"></text></g><g><title>_rigid_prim_view (omnigibson/prims/rigid_prim.py:367) (2 samples, 0.17%)</title><rect x="87.5103%" y="260" width="0.1654%" height="15" fill="rgb(228,84,46)" fg:x="1058" fg:w="2"/><text x="87.7603%" y="270.50"></text></g><g><title>check (tensors/impl/api.py:1088) (2 samples, 0.17%)</title><rect x="87.5103%" y="276" width="0.1654%" height="15" fill="rgb(254,188,9)" fg:x="1058" fg:w="2"/><text x="87.7603%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (12 samples, 0.99%)</title><rect x="87.4276%" y="244" width="0.9926%" height="15" fill="rgb(206,112,54)" fg:x="1057" fg:w="12"/><text x="87.6776%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (5 samples, 0.41%)</title><rect x="88.0066%" y="260" width="0.4136%" height="15" fill="rgb(216,84,49)" fg:x="1064" fg:w="5"/><text x="88.2566%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (5 samples, 0.41%)</title><rect x="88.0066%" y="276" width="0.4136%" height="15" fill="rgb(214,194,35)" fg:x="1064" fg:w="5"/><text x="88.2566%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="88.0066%" y="292" width="0.4136%" height="15" fill="rgb(249,28,3)" fg:x="1064" fg:w="5"/><text x="88.2566%" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (5 samples, 0.41%)</title><rect x="88.5856%" y="276" width="0.4136%" height="15" fill="rgb(222,56,52)" fg:x="1071" fg:w="5"/><text x="88.8356%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="88.5856%" y="292" width="0.4136%" height="15" fill="rgb(245,217,50)" fg:x="1071" fg:w="5"/><text x="88.8356%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (4 samples, 0.33%)</title><rect x="88.6683%" y="308" width="0.3309%" height="15" fill="rgb(213,201,24)" fg:x="1072" fg:w="4"/><text x="88.9183%" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:84) (3 samples, 0.25%)</title><rect x="88.7510%" y="324" width="0.2481%" height="15" fill="rgb(248,116,28)" fg:x="1073" fg:w="3"/><text x="89.0010%" y="334.50"></text></g><g><title>_all (numpy/core/_methods.py:63) (2 samples, 0.17%)</title><rect x="88.8337%" y="340" width="0.1654%" height="15" fill="rgb(219,72,43)" fg:x="1074" fg:w="2"/><text x="89.0837%" y="350.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2355) (4 samples, 0.33%)</title><rect x="88.9992%" y="292" width="0.3309%" height="15" fill="rgb(209,138,14)" fg:x="1076" fg:w="4"/><text x="89.2492%" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:430) (3 samples, 0.25%)</title><rect x="89.0819%" y="308" width="0.2481%" height="15" fill="rgb(222,18,33)" fg:x="1077" fg:w="3"/><text x="89.3319%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (13 samples, 1.08%)</title><rect x="88.4202%" y="244" width="1.0753%" height="15" fill="rgb(213,199,7)" fg:x="1069" fg:w="13"/><text x="88.6702%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (12 samples, 0.99%)</title><rect x="88.5029%" y="260" width="0.9926%" height="15" fill="rgb(250,110,10)" fg:x="1070" fg:w="12"/><text x="88.7529%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2375) (6 samples, 0.50%)</title><rect x="88.9992%" y="276" width="0.4963%" height="15" fill="rgb(248,123,6)" fg:x="1076" fg:w="6"/><text x="89.2492%" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2356) (2 samples, 0.17%)</title><rect x="89.3300%" y="292" width="0.1654%" height="15" fill="rgb(206,91,31)" fg:x="1080" fg:w="2"/><text x="89.5800%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:490) (28 samples, 2.32%)</title><rect x="87.3449%" y="196" width="2.3160%" height="15" fill="rgb(211,154,13)" fg:x="1056" fg:w="28"/><text x="87.5949%" y="206.50">_..</text></g><g><title>get_eef_position (omnigibson/robots/manipulation_robot.py:765) (28 samples, 2.32%)</title><rect x="87.3449%" y="212" width="2.3160%" height="15" fill="rgb(225,148,7)" fg:x="1056" fg:w="28"/><text x="87.5949%" y="222.50">g..</text></g><g><title>get_position (omnigibson/prims/xform_prim.py:220) (28 samples, 2.32%)</title><rect x="87.3449%" y="228" width="2.3160%" height="15" fill="rgb(220,160,43)" fg:x="1056" fg:w="28"/><text x="87.5949%" y="238.50">g..</text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:326) (2 samples, 0.17%)</title><rect x="89.4955%" y="244" width="0.1654%" height="15" fill="rgb(213,52,39)" fg:x="1082" fg:w="2"/><text x="89.7455%" y="254.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="89.4955%" y="260" width="0.1654%" height="15" fill="rgb(243,137,7)" fg:x="1082" fg:w="2"/><text x="89.7455%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:320) (2 samples, 0.17%)</title><rect x="89.7436%" y="244" width="0.1654%" height="15" fill="rgb(230,79,13)" fg:x="1085" fg:w="2"/><text x="89.9936%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (2 samples, 0.17%)</title><rect x="89.7436%" y="260" width="0.1654%" height="15" fill="rgb(247,105,23)" fg:x="1085" fg:w="2"/><text x="89.9936%" y="270.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (2 samples, 0.17%)</title><rect x="89.7436%" y="276" width="0.1654%" height="15" fill="rgb(223,179,41)" fg:x="1085" fg:w="2"/><text x="89.9936%" y="286.50"></text></g><g><title>_rigid_prim_view (omnigibson/prims/rigid_prim.py:364) (2 samples, 0.17%)</title><rect x="89.9090%" y="260" width="0.1654%" height="15" fill="rgb(218,9,34)" fg:x="1087" fg:w="2"/><text x="90.1590%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (6 samples, 0.50%)</title><rect x="89.9090%" y="244" width="0.4963%" height="15" fill="rgb(222,106,8)" fg:x="1087" fg:w="6"/><text x="90.1590%" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (5 samples, 0.41%)</title><rect x="90.5707%" y="276" width="0.4136%" height="15" fill="rgb(211,220,0)" fg:x="1095" fg:w="5"/><text x="90.8207%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="90.5707%" y="292" width="0.4136%" height="15" fill="rgb(229,52,16)" fg:x="1095" fg:w="5"/><text x="90.8207%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (5 samples, 0.41%)</title><rect x="90.5707%" y="308" width="0.4136%" height="15" fill="rgb(212,155,18)" fg:x="1095" fg:w="5"/><text x="90.8207%" y="318.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2355) (2 samples, 0.17%)</title><rect x="90.9843%" y="292" width="0.1654%" height="15" fill="rgb(242,21,14)" fg:x="1100" fg:w="2"/><text x="91.2343%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (10 samples, 0.83%)</title><rect x="90.4053%" y="244" width="0.8271%" height="15" fill="rgb(222,19,48)" fg:x="1093" fg:w="10"/><text x="90.6553%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (10 samples, 0.83%)</title><rect x="90.4053%" y="260" width="0.8271%" height="15" fill="rgb(232,45,27)" fg:x="1093" fg:w="10"/><text x="90.6553%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2375) (3 samples, 0.25%)</title><rect x="90.9843%" y="276" width="0.2481%" height="15" fill="rgb(249,103,42)" fg:x="1100" fg:w="3"/><text x="91.2343%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:326) (3 samples, 0.25%)</title><rect x="91.2324%" y="244" width="0.2481%" height="15" fill="rgb(246,81,33)" fg:x="1103" fg:w="3"/><text x="91.4824%" y="254.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (3 samples, 0.25%)</title><rect x="91.2324%" y="260" width="0.2481%" height="15" fill="rgb(252,33,42)" fg:x="1103" fg:w="3"/><text x="91.4824%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:491) (24 samples, 1.99%)</title><rect x="89.6609%" y="196" width="1.9851%" height="15" fill="rgb(209,212,41)" fg:x="1084" fg:w="24"/><text x="89.9109%" y="206.50">_..</text></g><g><title>get_eef_orientation (omnigibson/robots/manipulation_robot.py:778) (23 samples, 1.90%)</title><rect x="89.7436%" y="212" width="1.9024%" height="15" fill="rgb(207,154,6)" fg:x="1085" fg:w="23"/><text x="89.9936%" y="222.50">g..</text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (23 samples, 1.90%)</title><rect x="89.7436%" y="228" width="1.9024%" height="15" fill="rgb(223,64,47)" fg:x="1085" fg:w="23"/><text x="89.9936%" y="238.50">g..</text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:418) (2 samples, 0.17%)</title><rect x="91.8941%" y="260" width="0.1654%" height="15" fill="rgb(211,161,38)" fg:x="1111" fg:w="2"/><text x="92.1441%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (11 samples, 0.91%)</title><rect x="91.7287%" y="244" width="0.9098%" height="15" fill="rgb(219,138,40)" fg:x="1109" fg:w="11"/><text x="91.9787%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (6 samples, 0.50%)</title><rect x="92.1423%" y="260" width="0.4963%" height="15" fill="rgb(241,228,46)" fg:x="1114" fg:w="6"/><text x="92.3923%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (6 samples, 0.50%)</title><rect x="92.1423%" y="276" width="0.4963%" height="15" fill="rgb(223,209,38)" fg:x="1114" fg:w="6"/><text x="92.3923%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (6 samples, 0.50%)</title><rect x="92.1423%" y="292" width="0.4963%" height="15" fill="rgb(236,164,45)" fg:x="1114" fg:w="6"/><text x="92.3923%" y="302.50"></text></g><g><title>roll (numpy/core/numeric.py:1248) (2 samples, 0.17%)</title><rect x="92.4731%" y="308" width="0.1654%" height="15" fill="rgb(231,15,5)" fg:x="1118" fg:w="2"/><text x="92.7231%" y="318.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (5 samples, 0.41%)</title><rect x="92.8867%" y="276" width="0.4136%" height="15" fill="rgb(252,35,15)" fg:x="1123" fg:w="5"/><text x="93.1367%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (5 samples, 0.41%)</title><rect x="92.8867%" y="292" width="0.4136%" height="15" fill="rgb(248,181,18)" fg:x="1123" fg:w="5"/><text x="93.1367%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (4 samples, 0.33%)</title><rect x="92.9694%" y="308" width="0.3309%" height="15" fill="rgb(233,39,42)" fg:x="1124" fg:w="4"/><text x="93.2194%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (9 samples, 0.74%)</title><rect x="92.6385%" y="244" width="0.7444%" height="15" fill="rgb(238,110,33)" fg:x="1120" fg:w="9"/><text x="92.8885%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (8 samples, 0.66%)</title><rect x="92.7213%" y="260" width="0.6617%" height="15" fill="rgb(233,195,10)" fg:x="1121" fg:w="8"/><text x="92.9713%" y="270.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:792) (22 samples, 1.82%)</title><rect x="91.7287%" y="228" width="1.8197%" height="15" fill="rgb(254,105,3)" fg:x="1109" fg:w="22"/><text x="91.9787%" y="238.50">g..</text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (2 samples, 0.17%)</title><rect x="93.6311%" y="260" width="0.1654%" height="15" fill="rgb(221,225,9)" fg:x="1132" fg:w="2"/><text x="93.8811%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (2 samples, 0.17%)</title><rect x="93.6311%" y="276" width="0.1654%" height="15" fill="rgb(224,227,45)" fg:x="1132" fg:w="2"/><text x="93.8811%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="93.6311%" y="292" width="0.1654%" height="15" fill="rgb(229,198,43)" fg:x="1132" fg:w="2"/><text x="93.8811%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (4 samples, 0.33%)</title><rect x="93.5484%" y="244" width="0.3309%" height="15" fill="rgb(206,209,35)" fg:x="1131" fg:w="4"/><text x="93.7984%" y="254.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:793) (6 samples, 0.50%)</title><rect x="93.5484%" y="228" width="0.4963%" height="15" fill="rgb(245,195,53)" fg:x="1131" fg:w="6"/><text x="93.7984%" y="238.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:458) (2 samples, 0.17%)</title><rect x="94.1274%" y="260" width="0.1654%" height="15" fill="rgb(240,92,26)" fg:x="1138" fg:w="2"/><text x="94.3774%" y="270.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:650) (4 samples, 0.33%)</title><rect x="94.1274%" y="244" width="0.3309%" height="15" fill="rgb(207,40,23)" fg:x="1138" fg:w="4"/><text x="94.3774%" y="254.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:459) (2 samples, 0.17%)</title><rect x="94.2928%" y="260" width="0.1654%" height="15" fill="rgb(223,111,35)" fg:x="1140" fg:w="2"/><text x="94.5428%" y="270.50"></text></g><g><title>mat2pose (omnigibson/utils/transform_utils.py:378) (4 samples, 0.33%)</title><rect x="94.5409%" y="260" width="0.3309%" height="15" fill="rgb(229,147,28)" fg:x="1143" fg:w="4"/><text x="94.7909%" y="270.50"></text></g><g><title>mat2quat (omnigibson/utils/transform_utils.py:392) (4 samples, 0.33%)</title><rect x="94.5409%" y="276" width="0.3309%" height="15" fill="rgb(211,29,28)" fg:x="1143" fg:w="4"/><text x="94.7909%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:492) (40 samples, 3.31%)</title><rect x="91.6460%" y="196" width="3.3085%" height="15" fill="rgb(228,72,33)" fg:x="1108" fg:w="40"/><text x="91.8960%" y="206.50">_ge..</text></g><g><title>get_relative_eef_position (omnigibson/robots/manipulation_robot.py:808) (39 samples, 3.23%)</title><rect x="91.7287%" y="212" width="3.2258%" height="15" fill="rgb(205,214,31)" fg:x="1109" fg:w="39"/><text x="91.9787%" y="222.50">get..</text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:794) (11 samples, 0.91%)</title><rect x="94.0447%" y="228" width="0.9098%" height="15" fill="rgb(224,111,15)" fg:x="1137" fg:w="11"/><text x="94.2947%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:654) (6 samples, 0.50%)</title><rect x="94.4582%" y="244" width="0.4963%" height="15" fill="rgb(253,21,26)" fg:x="1142" fg:w="6"/><text x="94.7082%" y="254.50"></text></g><g><title>roll (numpy/core/numeric.py:1245) (2 samples, 0.17%)</title><rect x="95.3681%" y="308" width="0.1654%" height="15" fill="rgb(245,139,43)" fg:x="1153" fg:w="2"/><text x="95.6181%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (6 samples, 0.50%)</title><rect x="95.1199%" y="244" width="0.4963%" height="15" fill="rgb(252,170,7)" fg:x="1150" fg:w="6"/><text x="95.3699%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (4 samples, 0.33%)</title><rect x="95.2854%" y="260" width="0.3309%" height="15" fill="rgb(231,118,14)" fg:x="1152" fg:w="4"/><text x="95.5354%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (4 samples, 0.33%)</title><rect x="95.2854%" y="276" width="0.3309%" height="15" fill="rgb(238,83,0)" fg:x="1152" fg:w="4"/><text x="95.5354%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (4 samples, 0.33%)</title><rect x="95.2854%" y="292" width="0.3309%" height="15" fill="rgb(221,39,39)" fg:x="1152" fg:w="4"/><text x="95.5354%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (4 samples, 0.33%)</title><rect x="95.6162%" y="244" width="0.3309%" height="15" fill="rgb(222,119,46)" fg:x="1156" fg:w="4"/><text x="95.8662%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (4 samples, 0.33%)</title><rect x="95.6162%" y="260" width="0.3309%" height="15" fill="rgb(222,165,49)" fg:x="1156" fg:w="4"/><text x="95.8662%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2375) (3 samples, 0.25%)</title><rect x="95.6989%" y="276" width="0.2481%" height="15" fill="rgb(219,113,52)" fg:x="1157" fg:w="3"/><text x="95.9489%" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2355) (3 samples, 0.25%)</title><rect x="95.6989%" y="292" width="0.2481%" height="15" fill="rgb(214,7,15)" fg:x="1157" fg:w="3"/><text x="95.9489%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:326) (3 samples, 0.25%)</title><rect x="95.9471%" y="244" width="0.2481%" height="15" fill="rgb(235,32,4)" fg:x="1160" fg:w="3"/><text x="96.1971%" y="254.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="96.0298%" y="260" width="0.1654%" height="15" fill="rgb(238,90,54)" fg:x="1161" fg:w="2"/><text x="96.2798%" y="270.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:792) (17 samples, 1.41%)</title><rect x="95.1199%" y="228" width="1.4061%" height="15" fill="rgb(213,208,19)" fg:x="1150" fg:w="17"/><text x="95.3699%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:331) (4 samples, 0.33%)</title><rect x="96.1952%" y="244" width="0.3309%" height="15" fill="rgb(233,156,4)" fg:x="1163" fg:w="4"/><text x="96.4452%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (4 samples, 0.33%)</title><rect x="96.1952%" y="260" width="0.3309%" height="15" fill="rgb(207,194,5)" fg:x="1163" fg:w="4"/><text x="96.4452%" y="270.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (4 samples, 0.33%)</title><rect x="96.1952%" y="276" width="0.3309%" height="15" fill="rgb(206,111,30)" fg:x="1163" fg:w="4"/><text x="96.4452%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (5 samples, 0.41%)</title><rect x="96.5261%" y="244" width="0.4136%" height="15" fill="rgb(243,70,54)" fg:x="1167" fg:w="5"/><text x="96.7761%" y="254.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (2 samples, 0.17%)</title><rect x="96.7742%" y="260" width="0.1654%" height="15" fill="rgb(242,28,8)" fg:x="1170" fg:w="2"/><text x="97.0242%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (2 samples, 0.17%)</title><rect x="96.7742%" y="276" width="0.1654%" height="15" fill="rgb(219,106,18)" fg:x="1170" fg:w="2"/><text x="97.0242%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="96.7742%" y="292" width="0.1654%" height="15" fill="rgb(244,222,10)" fg:x="1170" fg:w="2"/><text x="97.0242%" y="302.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:793) (6 samples, 0.50%)</title><rect x="96.5261%" y="228" width="0.4963%" height="15" fill="rgb(236,179,52)" fg:x="1167" fg:w="6"/><text x="96.7761%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:650) (3 samples, 0.25%)</title><rect x="97.0223%" y="244" width="0.2481%" height="15" fill="rgb(213,23,39)" fg:x="1173" fg:w="3"/><text x="97.2723%" y="254.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:459) (2 samples, 0.17%)</title><rect x="97.1050%" y="260" width="0.1654%" height="15" fill="rgb(238,48,10)" fg:x="1174" fg:w="2"/><text x="97.3550%" y="270.50"></text></g><g><title>quat2mat (omnigibson/utils/transform_utils.py:475) (2 samples, 0.17%)</title><rect x="97.1050%" y="276" width="0.1654%" height="15" fill="rgb(251,196,23)" fg:x="1174" fg:w="2"/><text x="97.3550%" y="286.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:651) (3 samples, 0.25%)</title><rect x="97.2705%" y="244" width="0.2481%" height="15" fill="rgb(250,152,24)" fg:x="1176" fg:w="3"/><text x="97.5205%" y="254.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:459) (3 samples, 0.25%)</title><rect x="97.2705%" y="260" width="0.2481%" height="15" fill="rgb(209,150,17)" fg:x="1176" fg:w="3"/><text x="97.5205%" y="270.50"></text></g><g><title>quat2mat (omnigibson/utils/transform_utils.py:475) (3 samples, 0.25%)</title><rect x="97.2705%" y="276" width="0.2481%" height="15" fill="rgb(234,202,34)" fg:x="1176" fg:w="3"/><text x="97.5205%" y="286.50"></text></g><g><title>mat2pose (omnigibson/utils/transform_utils.py:378) (5 samples, 0.41%)</title><rect x="97.5186%" y="260" width="0.4136%" height="15" fill="rgb(253,148,53)" fg:x="1179" fg:w="5"/><text x="97.7686%" y="270.50"></text></g><g><title>mat2quat (omnigibson/utils/transform_utils.py:392) (5 samples, 0.41%)</title><rect x="97.5186%" y="276" width="0.4136%" height="15" fill="rgb(218,129,16)" fg:x="1179" fg:w="5"/><text x="97.7686%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:493) (38 samples, 3.14%)</title><rect x="94.9545%" y="196" width="3.1431%" height="15" fill="rgb(216,85,19)" fg:x="1148" fg:w="38"/><text x="95.2045%" y="206.50">_ge..</text></g><g><title>get_relative_eef_orientation (omnigibson/robots/manipulation_robot.py:820) (36 samples, 2.98%)</title><rect x="95.1199%" y="212" width="2.9777%" height="15" fill="rgb(235,228,7)" fg:x="1150" fg:w="36"/><text x="95.3699%" y="222.50">get..</text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:794) (13 samples, 1.08%)</title><rect x="97.0223%" y="228" width="1.0753%" height="15" fill="rgb(245,175,0)" fg:x="1173" fg:w="13"/><text x="97.2723%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:654) (7 samples, 0.58%)</title><rect x="97.5186%" y="244" width="0.5790%" height="15" fill="rgb(208,168,36)" fg:x="1179" fg:w="7"/><text x="97.7686%" y="254.50"></text></g><g><title>pose_inv (omnigibson/utils/transform_utils.py:582) (2 samples, 0.17%)</title><rect x="97.9322%" y="260" width="0.1654%" height="15" fill="rgb(246,171,24)" fg:x="1184" fg:w="2"/><text x="98.1822%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:494) (2 samples, 0.17%)</title><rect x="98.0976%" y="196" width="0.1654%" height="15" fill="rgb(215,142,24)" fg:x="1186" fg:w="2"/><text x="98.3476%" y="206.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:285) (266 samples, 22.00%)</title><rect x="76.5095%" y="180" width="22.0017%" height="15" fill="rgb(250,187,7)" fg:x="925" fg:w="266"/><text x="76.7595%" y="190.50">_get_proprioception_dict (omnigibso..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:495) (3 samples, 0.25%)</title><rect x="98.2630%" y="196" width="0.2481%" height="15" fill="rgb(228,66,33)" fg:x="1188" fg:w="3"/><text x="98.5130%" y="206.50"></text></g><g><title>gripper_control_idx (omnigibson/robots/fetch.py:407) (2 samples, 0.17%)</title><rect x="98.3457%" y="212" width="0.1654%" height="15" fill="rgb(234,215,21)" fg:x="1189" fg:w="2"/><text x="98.5957%" y="222.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1445) (2 samples, 0.17%)</title><rect x="98.5939%" y="212" width="0.1654%" height="15" fill="rgb(222,191,20)" fg:x="1192" fg:w="2"/><text x="98.8439%" y="222.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:288) (4 samples, 0.33%)</title><rect x="98.5112%" y="180" width="0.3309%" height="15" fill="rgb(245,79,54)" fg:x="1191" fg:w="4"/><text x="98.7612%" y="190.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (4 samples, 0.33%)</title><rect x="98.5112%" y="196" width="0.3309%" height="15" fill="rgb(240,10,37)" fg:x="1191" fg:w="4"/><text x="98.7612%" y="206.50"></text></g><g><title>get_proprioception (omnigibson/robots/robot_base.py:346) (272 samples, 22.50%)</title><rect x="76.5095%" y="164" width="22.4979%" height="15" fill="rgb(214,192,32)" fg:x="925" fg:w="272"/><text x="76.7595%" y="174.50">get_proprioception (omnigibson/robot..</text></g><g><title>get_obs (omnigibson/robots/robot_base.py:336) (275 samples, 22.75%)</title><rect x="76.5095%" y="148" width="22.7461%" height="15" fill="rgb(209,36,54)" fg:x="925" fg:w="275"/><text x="76.7595%" y="158.50">get_obs (omnigibson/robots/robot_bas..</text></g><g><title>get_proprioception (omnigibson/robots/robot_base.py:347) (3 samples, 0.25%)</title><rect x="99.0074%" y="164" width="0.2481%" height="15" fill="rgb(220,10,11)" fg:x="1197" fg:w="3"/><text x="99.2574%" y="174.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (2 samples, 0.17%)</title><rect x="99.0902%" y="180" width="0.1654%" height="15" fill="rgb(221,106,17)" fg:x="1198" fg:w="2"/><text x="99.3402%" y="190.50"></text></g><g><title>get_obs (omnigibson/envs/env_base.py:485) (277 samples, 22.91%)</title><rect x="76.4268%" y="132" width="22.9115%" height="15" fill="rgb(251,142,44)" fg:x="924" fg:w="277"/><text x="76.6768%" y="142.50">get_obs (omnigibson/envs/env_base.py..</text></g><g><title>get_obs (omnigibson/envs/env_base.py:489) (3 samples, 0.25%)</title><rect x="99.3383%" y="132" width="0.2481%" height="15" fill="rgb(238,13,15)" fg:x="1201" fg:w="3"/><text x="99.5883%" y="142.50"></text></g><g><title>wrapper (functools.py:889) (3 samples, 0.25%)</title><rect x="99.3383%" y="148" width="0.2481%" height="15" fill="rgb(208,107,27)" fg:x="1201" fg:w="3"/><text x="99.5883%" y="158.50"></text></g><g><title>_post_step (omnigibson/envs/env_base.py:554) (286 samples, 23.66%)</title><rect x="76.0959%" y="116" width="23.6559%" height="15" fill="rgb(205,136,37)" fg:x="920" fg:w="286"/><text x="76.3459%" y="126.50">_post_step (omnigibson/envs/env_base.p..</text></g><g><title>get_obs (omnigibson/envs/env_base.py:506) (2 samples, 0.17%)</title><rect x="99.5864%" y="132" width="0.1654%" height="15" fill="rgb(250,205,27)" fg:x="1204" fg:w="2"/><text x="99.8364%" y="142.50"></text></g><g><title>step (omnigibson/tasks/task_base.py:322) (2 samples, 0.17%)</title><rect x="99.7519%" y="132" width="0.1654%" height="15" fill="rgb(210,80,43)" fg:x="1206" fg:w="2"/><text x="100.0019%" y="142.50"></text></g><g><title>all (1,209 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(247,160,36)" fg:x="0" fg:w="1209"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test_multiple_envs.py:80) (1,209 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(234,13,49)" fg:x="0" fg:w="1209"/><text x="0.2500%" y="78.50">&lt;module&gt; (test_multiple_envs.py:80)</text></g><g><title>main (test_multiple_envs.py:59) (1,199 samples, 99.17%)</title><rect x="0.8271%" y="84" width="99.1729%" height="15" fill="rgb(234,122,0)" fg:x="10" fg:w="1199"/><text x="1.0771%" y="94.50">main (test_multiple_envs.py:59)</text></g><g><title>step (omnigibson/envs/vec_env_base.py:18) (289 samples, 23.90%)</title><rect x="76.0959%" y="100" width="23.9041%" height="15" fill="rgb(207,146,38)" fg:x="920" fg:w="289"/><text x="76.3459%" y="110.50">step (omnigibson/envs/vec_env_base.py:..</text></g><g><title>_post_step (omnigibson/envs/env_base.py:561) (3 samples, 0.25%)</title><rect x="99.7519%" y="116" width="0.2481%" height="15" fill="rgb(207,177,25)" fg:x="1206" fg:w="3"/><text x="100.0019%" y="126.50"></text></g></svg></svg>