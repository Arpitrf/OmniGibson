<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="442" onload="init(evt)" viewBox="0 0 1200 442" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="442" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile_10_d.svg --pid 47976</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="431.00"> </text><svg id="frames" x="10" width="1180" total_samples="1647"><g><title>main (test_multiple_envs.py:58) (3 samples, 0.18%)</title><rect x="0.0000%" y="84" width="0.1821%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="94.50"></text></g><g><title>sample (gymnasium/spaces/box.py:218) (2 samples, 0.12%)</title><rect x="0.0607%" y="100" width="0.1214%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.3107%" y="110.50"></text></g><g><title>_preprocess_command (omnigibson/controllers/multi_finger_gripper_controller.py:152) (2 samples, 0.12%)</title><rect x="0.5464%" y="164" width="0.1214%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="2"/><text x="0.7964%" y="174.50"></text></g><g><title>_preprocess_command (omnigibson/controllers/controller_base.py:171) (2 samples, 0.12%)</title><rect x="0.5464%" y="180" width="0.1214%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="2"/><text x="0.7964%" y="190.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1450) (2 samples, 0.12%)</title><rect x="0.9715%" y="244" width="0.1214%" height="15" fill="rgb(208,68,35)" fg:x="16" fg:w="2"/><text x="1.2215%" y="254.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:539) (7 samples, 0.43%)</title><rect x="0.7893%" y="212" width="0.4250%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="7"/><text x="1.0393%" y="222.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (6 samples, 0.36%)</title><rect x="0.8500%" y="228" width="0.3643%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="6"/><text x="1.1000%" y="238.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (2 samples, 0.12%)</title><rect x="1.0929%" y="244" width="0.1214%" height="15" fill="rgb(228,23,34)" fg:x="18" fg:w="2"/><text x="1.3429%" y="254.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (2 samples, 0.12%)</title><rect x="1.0929%" y="260" width="0.1214%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="2"/><text x="1.3429%" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="1.0929%" y="276" width="0.1214%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="2"/><text x="1.3429%" y="286.50"></text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:119) (11 samples, 0.67%)</title><rect x="0.7286%" y="164" width="0.6679%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="11"/><text x="0.9786%" y="174.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (11 samples, 0.67%)</title><rect x="0.7286%" y="180" width="0.6679%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="11"/><text x="0.9786%" y="190.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:755) (10 samples, 0.61%)</title><rect x="0.7893%" y="196" width="0.6072%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="10"/><text x="1.0393%" y="206.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:540) (3 samples, 0.18%)</title><rect x="1.2143%" y="212" width="0.1821%" height="15" fill="rgb(206,188,39)" fg:x="20" fg:w="3"/><text x="1.4643%" y="222.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (3 samples, 0.18%)</title><rect x="1.2143%" y="228" width="0.1821%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="3"/><text x="1.4643%" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:135) (2 samples, 0.12%)</title><rect x="1.3965%" y="180" width="0.1214%" height="15" fill="rgb(231,73,38)" fg:x="23" fg:w="2"/><text x="1.6465%" y="190.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:94) (2 samples, 0.12%)</title><rect x="1.3965%" y="196" width="0.1214%" height="15" fill="rgb(225,20,46)" fg:x="23" fg:w="2"/><text x="1.6465%" y="206.50"></text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:149) (3 samples, 0.18%)</title><rect x="1.3965%" y="164" width="0.1821%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="3"/><text x="1.6465%" y="174.50"></text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:323) (23 samples, 1.40%)</title><rect x="0.3643%" y="132" width="1.3965%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="23"/><text x="0.6143%" y="142.50"></text></g><g><title>update_goal (omnigibson/controllers/controller_base.py:207) (21 samples, 1.28%)</title><rect x="0.4857%" y="148" width="1.2750%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="21"/><text x="0.7357%" y="158.50"></text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:150) (3 samples, 0.18%)</title><rect x="1.5786%" y="164" width="0.1821%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="3"/><text x="1.8286%" y="174.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:383) (4 samples, 0.24%)</title><rect x="1.8215%" y="148" width="0.2429%" height="15" fill="rgb(235,183,28)" fg:x="30" fg:w="4"/><text x="2.0715%" y="158.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:541) (2 samples, 0.12%)</title><rect x="1.9429%" y="164" width="0.1214%" height="15" fill="rgb(221,5,38)" fg:x="32" fg:w="2"/><text x="2.1929%" y="174.50"></text></g><g><title>__setitem__ (omnigibson/utils/python_utils.py:739) (2 samples, 0.12%)</title><rect x="1.9429%" y="180" width="0.1214%" height="15" fill="rgb(247,18,42)" fg:x="32" fg:w="2"/><text x="2.1929%" y="190.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:407) (2 samples, 0.12%)</title><rect x="2.1858%" y="164" width="0.1214%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="2"/><text x="2.4358%" y="174.50"></text></g><g><title>eef_links (omnigibson/robots/manipulation_robot.py:619) (2 samples, 0.12%)</title><rect x="2.1858%" y="180" width="0.1214%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="2"/><text x="2.4358%" y="190.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:14) (37 samples, 2.25%)</title><rect x="0.1821%" y="100" width="2.2465%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="37"/><text x="0.4321%" y="110.50">s..</text></g><g><title>_pre_step (omnigibson/envs/env_base.py:550) (35 samples, 2.13%)</title><rect x="0.3036%" y="116" width="2.1251%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="35"/><text x="0.5536%" y="126.50">_..</text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:324) (11 samples, 0.67%)</title><rect x="1.7608%" y="132" width="0.6679%" height="15" fill="rgb(214,148,48)" fg:x="29" fg:w="11"/><text x="2.0108%" y="142.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:386) (6 samples, 0.36%)</title><rect x="2.0644%" y="148" width="0.3643%" height="15" fill="rgb(232,36,49)" fg:x="34" fg:w="6"/><text x="2.3144%" y="158.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:408) (2 samples, 0.12%)</title><rect x="2.3072%" y="164" width="0.1214%" height="15" fill="rgb(209,103,24)" fg:x="38" fg:w="2"/><text x="2.5572%" y="174.50"></text></g><g><title>step (omnigibson/simulator.py:834) (2 samples, 0.12%)</title><rect x="2.4287%" y="116" width="0.1214%" height="15" fill="rgb(229,88,8)" fg:x="40" fg:w="2"/><text x="2.6787%" y="126.50"></text></g><g><title>n_physics_timesteps_per_render (omnigibson/simulator.py:815) (2 samples, 0.12%)</title><rect x="2.4287%" y="132" width="0.1214%" height="15" fill="rgb(213,181,19)" fg:x="40" fg:w="2"/><text x="2.6787%" y="142.50"></text></g><g><title>step (core/simulation_context/simulation_context.py:689) (3 samples, 0.18%)</title><rect x="2.5501%" y="132" width="0.1821%" height="15" fill="rgb(254,191,54)" fg:x="42" fg:w="3"/><text x="2.8001%" y="142.50"></text></g><g><title>stage (core/simulation_context/simulation_context.py:291) (3 samples, 0.18%)</title><rect x="2.5501%" y="148" width="0.1821%" height="15" fill="rgb(241,83,37)" fg:x="42" fg:w="3"/><text x="2.8001%" y="158.50"></text></g><g><title>get_current_stage (core/utils/stage.py:52) (3 samples, 0.18%)</title><rect x="2.5501%" y="164" width="0.1821%" height="15" fill="rgb(233,36,39)" fg:x="42" fg:w="3"/><text x="2.8001%" y="174.50"></text></g><g><title>_get_stage (usd/_impl/__init__.py:102) (2 samples, 0.12%)</title><rect x="2.6108%" y="180" width="0.1214%" height="15" fill="rgb(226,3,54)" fg:x="43" fg:w="2"/><text x="2.8608%" y="190.50"></text></g><g><title>_step (core/physics_context/physics_context.py:573) (8 samples, 0.49%)</title><rect x="2.7322%" y="148" width="0.4857%" height="15" fill="rgb(245,192,40)" fg:x="45" fg:w="8"/><text x="2.9822%" y="158.50"></text></g><g><title>get_physics_dt (core/physics_context/physics_context.py:310) (3 samples, 0.18%)</title><rect x="3.0358%" y="164" width="0.1821%" height="15" fill="rgb(238,167,29)" fg:x="50" fg:w="3"/><text x="3.2858%" y="174.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:284) (3 samples, 0.18%)</title><rect x="22.2829%" y="180" width="0.1821%" height="15" fill="rgb(232,182,51)" fg:x="367" fg:w="3"/><text x="22.5329%" y="190.50"></text></g><g><title>initialized (core/articulations/articulation_view.py:299) (2 samples, 0.12%)</title><rect x="22.3437%" y="196" width="0.1214%" height="15" fill="rgb(231,60,39)" fg:x="368" fg:w="2"/><text x="22.5937%" y="206.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1444) (2 samples, 0.12%)</title><rect x="22.7687%" y="212" width="0.1214%" height="15" fill="rgb(208,69,12)" fg:x="375" fg:w="2"/><text x="23.0187%" y="222.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1445) (5 samples, 0.30%)</title><rect x="22.8901%" y="212" width="0.3036%" height="15" fill="rgb(235,93,37)" fg:x="377" fg:w="5"/><text x="23.1401%" y="222.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (3 samples, 0.18%)</title><rect x="23.0115%" y="228" width="0.1821%" height="15" fill="rgb(213,116,39)" fg:x="379" fg:w="3"/><text x="23.2615%" y="238.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1449) (3 samples, 0.18%)</title><rect x="23.1937%" y="212" width="0.1821%" height="15" fill="rgb(222,207,29)" fg:x="382" fg:w="3"/><text x="23.4437%" y="222.50"></text></g><g><title>clone_tensor (core/utils/numpy/tensor.py:43) (3 samples, 0.18%)</title><rect x="23.1937%" y="228" width="0.1821%" height="15" fill="rgb(206,96,30)" fg:x="382" fg:w="3"/><text x="23.4437%" y="238.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="23.2544%" y="244" width="0.1214%" height="15" fill="rgb(218,138,4)" fg:x="383" fg:w="2"/><text x="23.5044%" y="254.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (2 samples, 0.12%)</title><rect x="23.2544%" y="260" width="0.1214%" height="15" fill="rgb(250,191,14)" fg:x="383" fg:w="2"/><text x="23.5044%" y="270.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1450) (5 samples, 0.30%)</title><rect x="23.3758%" y="212" width="0.3036%" height="15" fill="rgb(239,60,40)" fg:x="385" fg:w="5"/><text x="23.6258%" y="222.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:596) (2 samples, 0.12%)</title><rect x="23.7401%" y="260" width="0.1214%" height="15" fill="rgb(206,27,48)" fg:x="391" fg:w="2"/><text x="23.9901%" y="270.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (24 samples, 1.46%)</title><rect x="22.4651%" y="196" width="1.4572%" height="15" fill="rgb(225,35,8)" fg:x="370" fg:w="24"/><text x="22.7151%" y="206.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (4 samples, 0.24%)</title><rect x="23.6794%" y="212" width="0.2429%" height="15" fill="rgb(250,213,24)" fg:x="390" fg:w="4"/><text x="23.9294%" y="222.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.24%)</title><rect x="23.6794%" y="228" width="0.2429%" height="15" fill="rgb(247,123,22)" fg:x="390" fg:w="4"/><text x="23.9294%" y="238.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="23.6794%" y="244" width="0.2429%" height="15" fill="rgb(231,138,38)" fg:x="390" fg:w="4"/><text x="23.9294%" y="254.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (4 samples, 0.24%)</title><rect x="24.1044%" y="212" width="0.2429%" height="15" fill="rgb(231,145,46)" fg:x="397" fg:w="4"/><text x="24.3544%" y="222.50"></text></g><g><title>check (tensors/impl/api.py:828) (3 samples, 0.18%)</title><rect x="24.1651%" y="228" width="0.1821%" height="15" fill="rgb(251,118,11)" fg:x="398" fg:w="3"/><text x="24.4151%" y="238.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:446) (2 samples, 0.12%)</title><rect x="24.4080%" y="212" width="0.1214%" height="15" fill="rgb(217,147,25)" fg:x="402" fg:w="2"/><text x="24.6580%" y="222.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:448) (3 samples, 0.18%)</title><rect x="24.5294%" y="212" width="0.1821%" height="15" fill="rgb(247,81,37)" fg:x="404" fg:w="3"/><text x="24.7794%" y="222.50"></text></g><g><title>get_dof_positions (tensors/impl/api.py:426) (2 samples, 0.12%)</title><rect x="24.5902%" y="228" width="0.1214%" height="15" fill="rgb(209,12,38)" fg:x="405" fg:w="2"/><text x="24.8402%" y="238.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:452) (3 samples, 0.18%)</title><rect x="24.7116%" y="212" width="0.1821%" height="15" fill="rgb(227,1,9)" fg:x="407" fg:w="3"/><text x="24.9616%" y="222.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (3 samples, 0.18%)</title><rect x="24.7116%" y="228" width="0.1821%" height="15" fill="rgb(248,47,43)" fg:x="407" fg:w="3"/><text x="24.9616%" y="238.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="24.7723%" y="244" width="0.1214%" height="15" fill="rgb(221,10,30)" fg:x="408" fg:w="2"/><text x="25.0223%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:58) (3 samples, 0.18%)</title><rect x="25.1366%" y="244" width="0.1821%" height="15" fill="rgb(210,229,1)" fg:x="414" fg:w="3"/><text x="25.3866%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:60) (2 samples, 0.12%)</title><rect x="25.3188%" y="244" width="0.1214%" height="15" fill="rgb(222,148,37)" fg:x="417" fg:w="2"/><text x="25.5688%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (5 samples, 0.30%)</title><rect x="25.4402%" y="244" width="0.3036%" height="15" fill="rgb(234,67,33)" fg:x="419" fg:w="5"/><text x="25.6902%" y="254.50"></text></g><g><title>set_dof_positions (tensors/impl/api.py:445) (11 samples, 0.67%)</title><rect x="25.1366%" y="228" width="0.6679%" height="15" fill="rgb(247,98,35)" fg:x="414" fg:w="11"/><text x="25.3866%" y="238.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (2 samples, 0.12%)</title><rect x="25.8652%" y="244" width="0.1214%" height="15" fill="rgb(247,138,52)" fg:x="426" fg:w="2"/><text x="26.1152%" y="254.50"></text></g><g><title>set_dof_positions (tensors/impl/api.py:446) (5 samples, 0.30%)</title><rect x="25.8045%" y="228" width="0.3036%" height="15" fill="rgb(213,79,30)" fg:x="425" fg:w="5"/><text x="26.0545%" y="238.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:63) (2 samples, 0.12%)</title><rect x="25.9866%" y="244" width="0.1214%" height="15" fill="rgb(246,177,23)" fg:x="428" fg:w="2"/><text x="26.2366%" y="254.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:454) (25 samples, 1.52%)</title><rect x="24.8937%" y="212" width="1.5179%" height="15" fill="rgb(230,62,27)" fg:x="410" fg:w="25"/><text x="25.1437%" y="222.50"></text></g><g><title>set_dof_positions (tensors/impl/api.py:448) (5 samples, 0.30%)</title><rect x="26.1081%" y="228" width="0.3036%" height="15" fill="rgb(216,154,8)" fg:x="430" fg:w="5"/><text x="26.3581%" y="238.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:899) (2 samples, 0.12%)</title><rect x="26.4117%" y="228" width="0.1214%" height="15" fill="rgb(244,35,45)" fg:x="435" fg:w="2"/><text x="26.6617%" y="238.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (2 samples, 0.12%)</title><rect x="26.4117%" y="244" width="0.1214%" height="15" fill="rgb(251,115,12)" fg:x="435" fg:w="2"/><text x="26.6617%" y="254.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:902) (2 samples, 0.12%)</title><rect x="26.5331%" y="228" width="0.1214%" height="15" fill="rgb(240,54,50)" fg:x="437" fg:w="2"/><text x="26.7831%" y="238.50"></text></g><g><title>get_dof_position_targets (tensors/impl/api.py:493) (2 samples, 0.12%)</title><rect x="26.5331%" y="244" width="0.1214%" height="15" fill="rgb(233,84,52)" fg:x="437" fg:w="2"/><text x="26.7831%" y="254.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:903) (3 samples, 0.18%)</title><rect x="26.6545%" y="228" width="0.1821%" height="15" fill="rgb(207,117,47)" fg:x="439" fg:w="3"/><text x="26.9045%" y="238.50"></text></g><g><title>assign (core/utils/numpy/tensor.py:91) (2 samples, 0.12%)</title><rect x="26.7152%" y="244" width="0.1214%" height="15" fill="rgb(249,43,39)" fg:x="440" fg:w="2"/><text x="26.9652%" y="254.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:906) (3 samples, 0.18%)</title><rect x="26.8367%" y="228" width="0.1821%" height="15" fill="rgb(209,38,44)" fg:x="442" fg:w="3"/><text x="27.0867%" y="238.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (3 samples, 0.18%)</title><rect x="26.8367%" y="244" width="0.1821%" height="15" fill="rgb(236,212,23)" fg:x="442" fg:w="3"/><text x="27.0867%" y="254.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="26.8367%" y="260" width="0.1821%" height="15" fill="rgb(242,79,21)" fg:x="442" fg:w="3"/><text x="27.0867%" y="270.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:473) (3 samples, 0.18%)</title><rect x="27.1403%" y="244" width="0.1821%" height="15" fill="rgb(211,96,35)" fg:x="447" fg:w="3"/><text x="27.3903%" y="254.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:292) (84 samples, 5.10%)</title><rect x="22.4651%" y="180" width="5.1002%" height="15" fill="rgb(253,215,40)" fg:x="370" fg:w="84"/><text x="22.7151%" y="190.50">step (..</text></g><g><title>set_joint_positions (omnigibson/prims/entity_prim.py:686) (58 samples, 3.52%)</title><rect x="24.0437%" y="196" width="3.5216%" height="15" fill="rgb(211,81,21)" fg:x="396" fg:w="58"/><text x="24.2937%" y="206.50">set..</text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:458) (19 samples, 1.15%)</title><rect x="26.4117%" y="212" width="1.1536%" height="15" fill="rgb(208,190,38)" fg:x="435" fg:w="19"/><text x="26.6617%" y="222.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:908) (9 samples, 0.55%)</title><rect x="27.0188%" y="228" width="0.5464%" height="15" fill="rgb(235,213,38)" fg:x="445" fg:w="9"/><text x="27.2688%" y="238.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:475) (4 samples, 0.24%)</title><rect x="27.3224%" y="244" width="0.2429%" height="15" fill="rgb(237,122,38)" fg:x="450" fg:w="4"/><text x="27.5724%" y="254.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:904) (2 samples, 0.12%)</title><rect x="27.5653%" y="196" width="0.1214%" height="15" fill="rgb(244,218,35)" fg:x="454" fg:w="2"/><text x="27.8153%" y="206.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1508) (2 samples, 0.12%)</title><rect x="27.8689%" y="212" width="0.1214%" height="15" fill="rgb(240,68,47)" fg:x="459" fg:w="2"/><text x="28.1189%" y="222.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1513) (7 samples, 0.43%)</title><rect x="28.0510%" y="212" width="0.4250%" height="15" fill="rgb(210,16,53)" fg:x="462" fg:w="7"/><text x="28.3010%" y="222.50"></text></g><g><title>clone_tensor (core/utils/numpy/tensor.py:43) (5 samples, 0.30%)</title><rect x="28.1724%" y="228" width="0.3036%" height="15" fill="rgb(235,124,12)" fg:x="464" fg:w="5"/><text x="28.4224%" y="238.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="28.2332%" y="244" width="0.2429%" height="15" fill="rgb(224,169,11)" fg:x="465" fg:w="4"/><text x="28.4832%" y="254.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (4 samples, 0.24%)</title><rect x="28.2332%" y="260" width="0.2429%" height="15" fill="rgb(250,166,2)" fg:x="465" fg:w="4"/><text x="28.4832%" y="270.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (15 samples, 0.91%)</title><rect x="27.6867%" y="196" width="0.9107%" height="15" fill="rgb(242,216,29)" fg:x="456" fg:w="15"/><text x="27.9367%" y="206.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1516) (2 samples, 0.12%)</title><rect x="28.4760%" y="212" width="0.1214%" height="15" fill="rgb(230,116,27)" fg:x="469" fg:w="2"/><text x="28.7260%" y="222.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:511) (4 samples, 0.24%)</title><rect x="28.7796%" y="212" width="0.2429%" height="15" fill="rgb(228,99,48)" fg:x="474" fg:w="4"/><text x="29.0296%" y="222.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (2 samples, 0.12%)</title><rect x="28.9010%" y="228" width="0.1214%" height="15" fill="rgb(253,11,6)" fg:x="476" fg:w="2"/><text x="29.1510%" y="238.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:512) (2 samples, 0.12%)</title><rect x="29.0225%" y="212" width="0.1214%" height="15" fill="rgb(247,143,39)" fg:x="478" fg:w="2"/><text x="29.2725%" y="222.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:515) (2 samples, 0.12%)</title><rect x="29.2653%" y="212" width="0.1214%" height="15" fill="rgb(236,97,10)" fg:x="482" fg:w="2"/><text x="29.5153%" y="222.50"></text></g><g><title>assign (core/utils/numpy/tensor.py:91) (2 samples, 0.12%)</title><rect x="29.2653%" y="228" width="0.1214%" height="15" fill="rgb(233,208,19)" fg:x="482" fg:w="2"/><text x="29.5153%" y="238.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:452) (2 samples, 0.12%)</title><rect x="29.3868%" y="228" width="0.1214%" height="15" fill="rgb(216,164,2)" fg:x="484" fg:w="2"/><text x="29.6368%" y="238.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:453) (2 samples, 0.12%)</title><rect x="29.5082%" y="228" width="0.1214%" height="15" fill="rgb(220,129,5)" fg:x="486" fg:w="2"/><text x="29.7582%" y="238.50"></text></g><g><title>as_contiguous_uint32 (tensors/impl/frontend_np.py:70) (2 samples, 0.12%)</title><rect x="29.5082%" y="244" width="0.1214%" height="15" fill="rgb(242,17,10)" fg:x="486" fg:w="2"/><text x="29.7582%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:58) (2 samples, 0.12%)</title><rect x="29.6296%" y="244" width="0.1214%" height="15" fill="rgb(242,107,0)" fg:x="488" fg:w="2"/><text x="29.8796%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:59) (2 samples, 0.12%)</title><rect x="29.7511%" y="244" width="0.1214%" height="15" fill="rgb(251,28,31)" fg:x="490" fg:w="2"/><text x="30.0011%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (2 samples, 0.12%)</title><rect x="29.8725%" y="244" width="0.1214%" height="15" fill="rgb(233,223,10)" fg:x="492" fg:w="2"/><text x="30.1225%" y="254.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:454) (7 samples, 0.43%)</title><rect x="29.6296%" y="228" width="0.4250%" height="15" fill="rgb(215,21,27)" fg:x="488" fg:w="7"/><text x="29.8796%" y="238.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:455) (2 samples, 0.12%)</title><rect x="30.0546%" y="228" width="0.1214%" height="15" fill="rgb(232,23,21)" fg:x="495" fg:w="2"/><text x="30.3046%" y="238.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:520) (15 samples, 0.91%)</title><rect x="29.3868%" y="212" width="0.9107%" height="15" fill="rgb(244,5,23)" fg:x="484" fg:w="15"/><text x="29.6368%" y="222.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:457) (2 samples, 0.12%)</title><rect x="30.1761%" y="228" width="0.1214%" height="15" fill="rgb(226,81,46)" fg:x="497" fg:w="2"/><text x="30.4261%" y="238.50"></text></g><g><title>get_dof_velocity_targets (tensors/impl/api.py:504) (3 samples, 0.18%)</title><rect x="30.2975%" y="244" width="0.1821%" height="15" fill="rgb(247,70,30)" fg:x="499" fg:w="3"/><text x="30.5475%" y="254.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1027) (4 samples, 0.24%)</title><rect x="30.2975%" y="228" width="0.2429%" height="15" fill="rgb(212,68,19)" fg:x="499" fg:w="4"/><text x="30.5475%" y="238.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:599) (2 samples, 0.12%)</title><rect x="30.7225%" y="276" width="0.1214%" height="15" fill="rgb(240,187,13)" fg:x="506" fg:w="2"/><text x="30.9725%" y="286.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1031) (5 samples, 0.30%)</title><rect x="30.6011%" y="228" width="0.3036%" height="15" fill="rgb(223,113,26)" fg:x="504" fg:w="5"/><text x="30.8511%" y="238.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.24%)</title><rect x="30.6618%" y="244" width="0.2429%" height="15" fill="rgb(206,192,2)" fg:x="505" fg:w="4"/><text x="30.9118%" y="254.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="30.6618%" y="260" width="0.2429%" height="15" fill="rgb(241,108,4)" fg:x="505" fg:w="4"/><text x="30.9118%" y="270.50"></text></g><g><title>set_dof_velocity_targets (tensors/impl/api.py:480) (2 samples, 0.12%)</title><rect x="30.9654%" y="244" width="0.1214%" height="15" fill="rgb(247,173,49)" fg:x="510" fg:w="2"/><text x="31.2154%" y="254.50"></text></g><g><title>as_contiguous_uint32 (tensors/impl/frontend_np.py:70) (2 samples, 0.12%)</title><rect x="30.9654%" y="260" width="0.1214%" height="15" fill="rgb(224,114,35)" fg:x="510" fg:w="2"/><text x="31.2154%" y="270.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:58) (2 samples, 0.12%)</title><rect x="31.0868%" y="260" width="0.1214%" height="15" fill="rgb(245,159,27)" fg:x="512" fg:w="2"/><text x="31.3368%" y="270.50"></text></g><g><title>set_dof_velocity_targets (tensors/impl/api.py:481) (3 samples, 0.18%)</title><rect x="31.0868%" y="244" width="0.1821%" height="15" fill="rgb(245,172,44)" fg:x="512" fg:w="3"/><text x="31.3368%" y="254.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:293) (63 samples, 3.83%)</title><rect x="27.5653%" y="180" width="3.8251%" height="15" fill="rgb(236,23,11)" fg:x="454" fg:w="63"/><text x="27.8153%" y="190.50">step..</text></g><g><title>set_joint_velocities (omnigibson/prims/entity_prim.py:717) (45 samples, 2.73%)</title><rect x="28.6582%" y="196" width="2.7322%" height="15" fill="rgb(205,117,38)" fg:x="472" fg:w="45"/><text x="28.9082%" y="206.50">se..</text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:524) (18 samples, 1.09%)</title><rect x="30.2975%" y="212" width="1.0929%" height="15" fill="rgb(237,72,25)" fg:x="499" fg:w="18"/><text x="30.5475%" y="222.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1033) (8 samples, 0.49%)</title><rect x="30.9047%" y="228" width="0.4857%" height="15" fill="rgb(244,70,9)" fg:x="509" fg:w="8"/><text x="31.1547%" y="238.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (2 samples, 0.12%)</title><rect x="31.4511%" y="212" width="0.1214%" height="15" fill="rgb(217,125,39)" fg:x="518" fg:w="2"/><text x="31.7011%" y="222.50"></text></g><g><title>is_playing (core/simulation_context/simulation_context.py:836) (2 samples, 0.12%)</title><rect x="31.4511%" y="228" width="0.1214%" height="15" fill="rgb(235,36,10)" fg:x="518" fg:w="2"/><text x="31.7011%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1002) (3 samples, 0.18%)</title><rect x="31.4511%" y="196" width="0.1821%" height="15" fill="rgb(251,123,47)" fg:x="518" fg:w="3"/><text x="31.7011%" y="206.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1797) (2 samples, 0.12%)</title><rect x="31.6940%" y="212" width="0.1214%" height="15" fill="rgb(221,13,13)" fg:x="522" fg:w="2"/><text x="31.9440%" y="222.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (2 samples, 0.12%)</title><rect x="31.6940%" y="228" width="0.1214%" height="15" fill="rgb(238,131,9)" fg:x="522" fg:w="2"/><text x="31.9440%" y="238.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1799) (2 samples, 0.12%)</title><rect x="31.8154%" y="212" width="0.1214%" height="15" fill="rgb(211,50,8)" fg:x="524" fg:w="2"/><text x="32.0654%" y="222.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1801) (3 samples, 0.18%)</title><rect x="31.9369%" y="212" width="0.1821%" height="15" fill="rgb(245,182,24)" fg:x="526" fg:w="3"/><text x="32.1869%" y="222.50"></text></g><g><title>clone_tensor (core/utils/numpy/tensor.py:43) (3 samples, 0.18%)</title><rect x="31.9369%" y="228" width="0.1821%" height="15" fill="rgb(242,14,37)" fg:x="526" fg:w="3"/><text x="32.1869%" y="238.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="31.9369%" y="244" width="0.1821%" height="15" fill="rgb(246,228,12)" fg:x="526" fg:w="3"/><text x="32.1869%" y="254.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (3 samples, 0.18%)</title><rect x="31.9369%" y="260" width="0.1821%" height="15" fill="rgb(213,55,15)" fg:x="526" fg:w="3"/><text x="32.1869%" y="270.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1802) (3 samples, 0.18%)</title><rect x="32.1190%" y="212" width="0.1821%" height="15" fill="rgb(209,9,3)" fg:x="529" fg:w="3"/><text x="32.3690%" y="222.50"></text></g><g><title>roll (numpy/core/numeric.py:1229) (2 samples, 0.12%)</title><rect x="32.5440%" y="260" width="0.1214%" height="15" fill="rgb(230,59,30)" fg:x="536" fg:w="2"/><text x="32.7940%" y="270.50"></text></g><g><title>roll (numpy/core/numeric.py:1238) (2 samples, 0.12%)</title><rect x="32.9083%" y="260" width="0.1214%" height="15" fill="rgb(209,121,21)" fg:x="542" fg:w="2"/><text x="33.1583%" y="270.50"></text></g><g><title>roll (numpy/core/numeric.py:1245) (2 samples, 0.12%)</title><rect x="33.0298%" y="260" width="0.1214%" height="15" fill="rgb(220,109,13)" fg:x="544" fg:w="2"/><text x="33.2798%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (30 samples, 1.82%)</title><rect x="31.6333%" y="196" width="1.8215%" height="15" fill="rgb(232,18,1)" fg:x="521" fg:w="30"/><text x="31.8833%" y="206.50">g..</text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (19 samples, 1.15%)</title><rect x="32.3012%" y="212" width="1.1536%" height="15" fill="rgb(215,41,42)" fg:x="532" fg:w="19"/><text x="32.5512%" y="222.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (18 samples, 1.09%)</title><rect x="32.3619%" y="228" width="1.0929%" height="15" fill="rgb(224,123,36)" fg:x="533" fg:w="18"/><text x="32.6119%" y="238.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (17 samples, 1.03%)</title><rect x="32.4226%" y="244" width="1.0322%" height="15" fill="rgb(240,125,3)" fg:x="534" fg:w="17"/><text x="32.6726%" y="254.50"></text></g><g><title>roll (numpy/core/numeric.py:1248) (3 samples, 0.18%)</title><rect x="33.2726%" y="260" width="0.1821%" height="15" fill="rgb(205,98,50)" fg:x="548" fg:w="3"/><text x="33.5226%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1007) (2 samples, 0.12%)</title><rect x="33.4548%" y="196" width="0.1214%" height="15" fill="rgb(205,185,37)" fg:x="551" fg:w="2"/><text x="33.7048%" y="206.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:999) (2 samples, 0.12%)</title><rect x="33.5762%" y="196" width="0.1214%" height="15" fill="rgb(238,207,15)" fg:x="553" fg:w="2"/><text x="33.8262%" y="206.50"></text></g><g><title>set_position_orientation (omnigibson/prims/entity_prim.py:980) (21 samples, 1.28%)</title><rect x="33.6976%" y="196" width="1.2750%" height="15" fill="rgb(213,199,42)" fg:x="555" fg:w="21"/><text x="33.9476%" y="206.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1342) (21 samples, 1.28%)</title><rect x="33.6976%" y="212" width="1.2750%" height="15" fill="rgb(235,201,11)" fg:x="555" fg:w="21"/><text x="33.9476%" y="222.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (19 samples, 1.15%)</title><rect x="33.8191%" y="228" width="1.1536%" height="15" fill="rgb(207,46,11)" fg:x="557" fg:w="19"/><text x="34.0691%" y="238.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (18 samples, 1.09%)</title><rect x="33.8798%" y="244" width="1.0929%" height="15" fill="rgb(241,35,35)" fg:x="558" fg:w="18"/><text x="34.1298%" y="254.50"></text></g><g><title>set_position_orientation (omnigibson/prims/entity_prim.py:993) (3 samples, 0.18%)</title><rect x="35.1548%" y="196" width="0.1821%" height="15" fill="rgb(243,32,47)" fg:x="579" fg:w="3"/><text x="35.4048%" y="206.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (2 samples, 0.12%)</title><rect x="35.3370%" y="212" width="0.1214%" height="15" fill="rgb(247,202,23)" fg:x="582" fg:w="2"/><text x="35.5870%" y="222.50"></text></g><g><title>check (tensors/impl/api.py:828) (2 samples, 0.12%)</title><rect x="35.3370%" y="228" width="0.1214%" height="15" fill="rgb(219,102,11)" fg:x="582" fg:w="2"/><text x="35.5870%" y="238.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1726) (2 samples, 0.12%)</title><rect x="35.4584%" y="212" width="0.1214%" height="15" fill="rgb(243,110,44)" fg:x="584" fg:w="2"/><text x="35.7084%" y="222.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1727) (3 samples, 0.18%)</title><rect x="35.5798%" y="212" width="0.1821%" height="15" fill="rgb(222,74,54)" fg:x="586" fg:w="3"/><text x="35.8298%" y="222.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (2 samples, 0.12%)</title><rect x="35.6406%" y="228" width="0.1214%" height="15" fill="rgb(216,99,12)" fg:x="587" fg:w="2"/><text x="35.8906%" y="238.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1797) (2 samples, 0.12%)</title><rect x="35.8834%" y="228" width="0.1214%" height="15" fill="rgb(226,22,26)" fg:x="591" fg:w="2"/><text x="36.1334%" y="238.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (2 samples, 0.12%)</title><rect x="35.8834%" y="244" width="0.1214%" height="15" fill="rgb(217,163,10)" fg:x="591" fg:w="2"/><text x="36.1334%" y="254.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1802) (2 samples, 0.12%)</title><rect x="36.1263%" y="228" width="0.1214%" height="15" fill="rgb(213,25,53)" fg:x="595" fg:w="2"/><text x="36.3763%" y="238.50"></text></g><g><title>roll (numpy/core/numeric.py:1228) (2 samples, 0.12%)</title><rect x="36.3692%" y="276" width="0.1214%" height="15" fill="rgb(252,105,26)" fg:x="599" fg:w="2"/><text x="36.6192%" y="286.50"></text></g><g><title>roll (numpy/core/numeric.py:1238) (2 samples, 0.12%)</title><rect x="36.5513%" y="276" width="0.1214%" height="15" fill="rgb(220,39,43)" fg:x="602" fg:w="2"/><text x="36.8013%" y="286.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1728) (20 samples, 1.21%)</title><rect x="35.7620%" y="212" width="1.2143%" height="15" fill="rgb(229,68,48)" fg:x="589" fg:w="20"/><text x="36.0120%" y="222.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (12 samples, 0.73%)</title><rect x="36.2477%" y="228" width="0.7286%" height="15" fill="rgb(252,8,32)" fg:x="597" fg:w="12"/><text x="36.4977%" y="238.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (12 samples, 0.73%)</title><rect x="36.2477%" y="244" width="0.7286%" height="15" fill="rgb(223,20,43)" fg:x="597" fg:w="12"/><text x="36.4977%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (11 samples, 0.67%)</title><rect x="36.3084%" y="260" width="0.6679%" height="15" fill="rgb(229,81,49)" fg:x="598" fg:w="11"/><text x="36.5584%" y="270.50"></text></g><g><title>roll (numpy/core/numeric.py:1248) (2 samples, 0.12%)</title><rect x="36.8549%" y="276" width="0.1214%" height="15" fill="rgb(236,28,36)" fg:x="607" fg:w="2"/><text x="37.1049%" y="286.50"></text></g><g><title>roll (numpy/core/numeric.py:1238) (2 samples, 0.12%)</title><rect x="37.4013%" y="276" width="0.1214%" height="15" fill="rgb(249,185,26)" fg:x="616" fg:w="2"/><text x="37.6513%" y="286.50"></text></g><g><title>assign_pose (core/utils/numpy/transformations.py:73) (10 samples, 0.61%)</title><rect x="37.0370%" y="228" width="0.6072%" height="15" fill="rgb(249,174,33)" fg:x="610" fg:w="10"/><text x="37.2870%" y="238.50"></text></g><g><title>wxyz2xyzw (core/utils/numpy/rotations.py:195) (9 samples, 0.55%)</title><rect x="37.0978%" y="244" width="0.5464%" height="15" fill="rgb(233,201,37)" fg:x="611" fg:w="9"/><text x="37.3478%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (8 samples, 0.49%)</title><rect x="37.1585%" y="260" width="0.4857%" height="15" fill="rgb(221,78,26)" fg:x="612" fg:w="8"/><text x="37.4085%" y="270.50"></text></g><g><title>roll (numpy/core/numeric.py:1239) (2 samples, 0.12%)</title><rect x="37.9478%" y="276" width="0.1214%" height="15" fill="rgb(250,127,30)" fg:x="625" fg:w="2"/><text x="38.1978%" y="286.50"></text></g><g><title>assign_pose (core/utils/numpy/transformations.py:74) (13 samples, 0.79%)</title><rect x="37.6442%" y="228" width="0.7893%" height="15" fill="rgb(230,49,44)" fg:x="620" fg:w="13"/><text x="37.8942%" y="238.50"></text></g><g><title>wxyz2xyzw (core/utils/numpy/rotations.py:195) (12 samples, 0.73%)</title><rect x="37.7049%" y="244" width="0.7286%" height="15" fill="rgb(229,67,23)" fg:x="621" fg:w="12"/><text x="37.9549%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (11 samples, 0.67%)</title><rect x="37.7656%" y="260" width="0.6679%" height="15" fill="rgb(249,83,47)" fg:x="622" fg:w="11"/><text x="38.0156%" y="270.50"></text></g><g><title>roll (numpy/core/numeric.py:1248) (2 samples, 0.12%)</title><rect x="38.3121%" y="276" width="0.1214%" height="15" fill="rgb(215,43,3)" fg:x="631" fg:w="2"/><text x="38.5621%" y="286.50"></text></g><g><title>assign_pose (core/utils/numpy/transformations.py:75) (4 samples, 0.24%)</title><rect x="38.4335%" y="228" width="0.2429%" height="15" fill="rgb(238,154,13)" fg:x="633" fg:w="4"/><text x="38.6835%" y="238.50"></text></g><g><title>get_pose (core/utils/numpy/transformations.py:64) (4 samples, 0.24%)</title><rect x="38.4335%" y="244" width="0.2429%" height="15" fill="rgb(219,56,2)" fg:x="633" fg:w="4"/><text x="38.6835%" y="254.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="38.4335%" y="260" width="0.2429%" height="15" fill="rgb(233,0,4)" fg:x="633" fg:w="4"/><text x="38.6835%" y="270.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1737) (32 samples, 1.94%)</title><rect x="36.9763%" y="212" width="1.9429%" height="15" fill="rgb(235,30,7)" fg:x="609" fg:w="32"/><text x="37.2263%" y="222.50">s..</text></g><g><title>assign_pose (core/utils/numpy/transformations.py:77) (3 samples, 0.18%)</title><rect x="38.7371%" y="228" width="0.1821%" height="15" fill="rgb(250,79,13)" fg:x="638" fg:w="3"/><text x="38.9871%" y="238.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (7 samples, 0.43%)</title><rect x="39.1621%" y="244" width="0.4250%" height="15" fill="rgb(211,146,34)" fg:x="645" fg:w="7"/><text x="39.4121%" y="254.50"></text></g><g><title>set_root_transforms (tensors/impl/api.py:405) (10 samples, 0.61%)</title><rect x="39.0407%" y="228" width="0.6072%" height="15" fill="rgb(228,22,38)" fg:x="643" fg:w="10"/><text x="39.2907%" y="238.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:60) (2 samples, 0.12%)</title><rect x="39.6478%" y="244" width="0.1214%" height="15" fill="rgb(235,168,5)" fg:x="653" fg:w="2"/><text x="39.8978%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (3 samples, 0.18%)</title><rect x="39.7693%" y="244" width="0.1821%" height="15" fill="rgb(221,155,16)" fg:x="655" fg:w="3"/><text x="40.0193%" y="254.50"></text></g><g><title>set_root_transforms (tensors/impl/api.py:406) (6 samples, 0.36%)</title><rect x="39.6478%" y="228" width="0.3643%" height="15" fill="rgb(215,215,53)" fg:x="653" fg:w="6"/><text x="39.8978%" y="238.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:294) (147 samples, 8.93%)</title><rect x="31.3904%" y="180" width="8.9253%" height="15" fill="rgb(223,4,10)" fg:x="517" fg:w="147"/><text x="31.6404%" y="190.50">step (omnigib..</text></g><g><title>set_position_orientation (omnigibson/prims/entity_prim.py:994) (82 samples, 4.98%)</title><rect x="35.3370%" y="196" width="4.9787%" height="15" fill="rgb(234,103,6)" fg:x="582" fg:w="82"/><text x="35.5870%" y="206.50">set_po..</text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1740) (23 samples, 1.40%)</title><rect x="38.9192%" y="212" width="1.3965%" height="15" fill="rgb(227,97,0)" fg:x="641" fg:w="23"/><text x="39.1692%" y="222.50"></text></g><g><title>set_root_transforms (tensors/impl/api.py:408) (5 samples, 0.30%)</title><rect x="40.0121%" y="228" width="0.3036%" height="15" fill="rgb(234,150,53)" fg:x="659" fg:w="5"/><text x="40.2621%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:531) (2 samples, 0.12%)</title><rect x="40.8015%" y="228" width="0.1214%" height="15" fill="rgb(228,201,54)" fg:x="672" fg:w="2"/><text x="41.0515%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:542) (2 samples, 0.12%)</title><rect x="41.1050%" y="228" width="0.1214%" height="15" fill="rgb(222,22,37)" fg:x="677" fg:w="2"/><text x="41.3550%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:383) (12 samples, 0.73%)</title><rect x="40.6800%" y="212" width="0.7286%" height="15" fill="rgb(237,53,32)" fg:x="670" fg:w="12"/><text x="40.9300%" y="222.50"></text></g><g><title>get_control_dict (omnigibson/objects/controllable_object.py:544) (2 samples, 0.12%)</title><rect x="41.2872%" y="228" width="0.1214%" height="15" fill="rgb(233,25,53)" fg:x="680" fg:w="2"/><text x="41.5372%" y="238.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:385) (3 samples, 0.18%)</title><rect x="41.4086%" y="212" width="0.1821%" height="15" fill="rgb(210,40,34)" fg:x="682" fg:w="3"/><text x="41.6586%" y="222.50"></text></g><g><title>arm_names (omnigibson/robots/manipulation_robot.py:497) (3 samples, 0.18%)</title><rect x="41.4086%" y="228" width="0.1821%" height="15" fill="rgb(241,220,44)" fg:x="682" fg:w="3"/><text x="41.6586%" y="238.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (2 samples, 0.12%)</title><rect x="41.6515%" y="244" width="0.1214%" height="15" fill="rgb(235,28,35)" fg:x="686" fg:w="2"/><text x="41.9015%" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (omnigibson/robots/manipulation_robot.py:619) (4 samples, 0.24%)</title><rect x="41.8336%" y="260" width="0.2429%" height="15" fill="rgb(210,56,17)" fg:x="689" fg:w="4"/><text x="42.0836%" y="270.50"></text></g><g><title>eef_link_names (omnigibson/robots/fetch.py:481) (3 samples, 0.18%)</title><rect x="41.8944%" y="276" width="0.1821%" height="15" fill="rgb(224,130,29)" fg:x="690" fg:w="3"/><text x="42.1444%" y="286.50"></text></g><g><title>default_arm (omnigibson/robots/manipulation_robot.py:505) (3 samples, 0.18%)</title><rect x="41.8944%" y="292" width="0.1821%" height="15" fill="rgb(235,212,8)" fg:x="690" fg:w="3"/><text x="42.1444%" y="302.50"></text></g><g><title>arm_names (omnigibson/robots/manipulation_robot.py:497) (2 samples, 0.12%)</title><rect x="41.9551%" y="308" width="0.1214%" height="15" fill="rgb(223,33,50)" fg:x="691" fg:w="2"/><text x="42.2051%" y="318.50"></text></g><g><title>eef_links (omnigibson/robots/manipulation_robot.py:619) (5 samples, 0.30%)</title><rect x="41.8336%" y="244" width="0.3036%" height="15" fill="rgb(219,149,13)" fg:x="689" fg:w="5"/><text x="42.0836%" y="254.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:407) (9 samples, 0.55%)</title><rect x="41.6515%" y="228" width="0.5464%" height="15" fill="rgb(250,156,29)" fg:x="686" fg:w="9"/><text x="41.9015%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:354) (30 samples, 1.82%)</title><rect x="40.6193%" y="196" width="1.8215%" height="15" fill="rgb(216,193,19)" fg:x="669" fg:w="30"/><text x="40.8693%" y="206.50">s..</text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:386) (14 samples, 0.85%)</title><rect x="41.5908%" y="212" width="0.8500%" height="15" fill="rgb(216,135,14)" fg:x="685" fg:w="14"/><text x="41.8408%" y="222.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:408) (4 samples, 0.24%)</title><rect x="42.1979%" y="228" width="0.2429%" height="15" fill="rgb(241,47,5)" fg:x="695" fg:w="4"/><text x="42.4479%" y="238.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (2 samples, 0.12%)</title><rect x="43.0480%" y="308" width="0.1214%" height="15" fill="rgb(233,42,35)" fg:x="709" fg:w="2"/><text x="43.2980%" y="318.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1444) (4 samples, 0.24%)</title><rect x="43.1694%" y="308" width="0.2429%" height="15" fill="rgb(231,13,6)" fg:x="711" fg:w="4"/><text x="43.4194%" y="318.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (3 samples, 0.18%)</title><rect x="43.2301%" y="324" width="0.1821%" height="15" fill="rgb(207,181,40)" fg:x="712" fg:w="3"/><text x="43.4801%" y="334.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1445) (3 samples, 0.18%)</title><rect x="43.4123%" y="308" width="0.1821%" height="15" fill="rgb(254,173,49)" fg:x="715" fg:w="3"/><text x="43.6623%" y="318.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1446) (2 samples, 0.12%)</title><rect x="43.5944%" y="308" width="0.1214%" height="15" fill="rgb(221,1,38)" fg:x="718" fg:w="2"/><text x="43.8444%" y="318.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (2 samples, 0.12%)</title><rect x="43.5944%" y="324" width="0.1214%" height="15" fill="rgb(206,124,46)" fg:x="718" fg:w="2"/><text x="43.8444%" y="334.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1447) (2 samples, 0.12%)</title><rect x="43.7158%" y="308" width="0.1214%" height="15" fill="rgb(249,21,11)" fg:x="720" fg:w="2"/><text x="43.9658%" y="318.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1450) (2 samples, 0.12%)</title><rect x="43.8980%" y="308" width="0.1214%" height="15" fill="rgb(222,201,40)" fg:x="723" fg:w="2"/><text x="44.1480%" y="318.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (23 samples, 1.40%)</title><rect x="42.9872%" y="292" width="1.3965%" height="15" fill="rgb(235,61,29)" fg:x="708" fg:w="23"/><text x="43.2372%" y="302.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (6 samples, 0.36%)</title><rect x="44.0194%" y="308" width="0.3643%" height="15" fill="rgb(219,207,3)" fg:x="725" fg:w="6"/><text x="44.2694%" y="318.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (5 samples, 0.30%)</title><rect x="44.0801%" y="324" width="0.3036%" height="15" fill="rgb(222,56,46)" fg:x="726" fg:w="5"/><text x="44.3301%" y="334.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (5 samples, 0.30%)</title><rect x="44.0801%" y="340" width="0.3036%" height="15" fill="rgb(239,76,54)" fg:x="726" fg:w="5"/><text x="44.3301%" y="350.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:539) (24 samples, 1.46%)</title><rect x="42.9872%" y="276" width="1.4572%" height="15" fill="rgb(231,124,27)" fg:x="708" fg:w="24"/><text x="43.2372%" y="286.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (2 samples, 0.12%)</title><rect x="44.5659%" y="308" width="0.1214%" height="15" fill="rgb(249,195,6)" fg:x="734" fg:w="2"/><text x="44.8159%" y="318.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1508) (3 samples, 0.18%)</title><rect x="44.6873%" y="308" width="0.1821%" height="15" fill="rgb(237,174,47)" fg:x="736" fg:w="3"/><text x="44.9373%" y="318.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1513) (7 samples, 0.43%)</title><rect x="45.0516%" y="308" width="0.4250%" height="15" fill="rgb(206,201,31)" fg:x="742" fg:w="7"/><text x="45.3016%" y="318.50"></text></g><g><title>clone_tensor (core/utils/numpy/tensor.py:43) (7 samples, 0.43%)</title><rect x="45.0516%" y="324" width="0.4250%" height="15" fill="rgb(231,57,52)" fg:x="742" fg:w="7"/><text x="45.3016%" y="334.50"></text></g><g><title>copy (&lt;__array_function__ internals&gt;:180) (6 samples, 0.36%)</title><rect x="45.1123%" y="340" width="0.3643%" height="15" fill="rgb(248,177,22)" fg:x="743" fg:w="6"/><text x="45.3623%" y="350.50"></text></g><g><title>copy (numpy/lib/function_base.py:959) (4 samples, 0.24%)</title><rect x="45.2338%" y="356" width="0.2429%" height="15" fill="rgb(215,211,37)" fg:x="745" fg:w="4"/><text x="45.4838%" y="366.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1516) (5 samples, 0.30%)</title><rect x="45.4766%" y="308" width="0.3036%" height="15" fill="rgb(241,128,51)" fg:x="749" fg:w="5"/><text x="45.7266%" y="318.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:597) (3 samples, 0.18%)</title><rect x="45.9016%" y="356" width="0.1821%" height="15" fill="rgb(227,165,31)" fg:x="756" fg:w="3"/><text x="46.1516%" y="366.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1517) (7 samples, 0.43%)</title><rect x="45.7802%" y="308" width="0.4250%" height="15" fill="rgb(228,167,24)" fg:x="754" fg:w="7"/><text x="46.0302%" y="318.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (7 samples, 0.43%)</title><rect x="45.7802%" y="324" width="0.4250%" height="15" fill="rgb(228,143,12)" fg:x="754" fg:w="7"/><text x="46.0302%" y="334.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (7 samples, 0.43%)</title><rect x="45.7802%" y="340" width="0.4250%" height="15" fill="rgb(249,149,8)" fg:x="754" fg:w="7"/><text x="46.0302%" y="350.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:600) (2 samples, 0.12%)</title><rect x="46.0838%" y="356" width="0.1214%" height="15" fill="rgb(243,35,44)" fg:x="759" fg:w="2"/><text x="46.3338%" y="366.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (30 samples, 1.82%)</title><rect x="44.4444%" y="292" width="1.8215%" height="15" fill="rgb(246,89,9)" fg:x="732" fg:w="30"/><text x="44.6944%" y="302.50">g..</text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (57 samples, 3.46%)</title><rect x="42.8658%" y="244" width="3.4608%" height="15" fill="rgb(233,213,13)" fg:x="706" fg:w="57"/><text x="43.1158%" y="254.50">__g..</text></g><g><title>get (omnigibson/utils/python_utils.py:755) (55 samples, 3.34%)</title><rect x="42.9872%" y="260" width="3.3394%" height="15" fill="rgb(233,141,41)" fg:x="708" fg:w="55"/><text x="43.2372%" y="270.50">get..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:540) (31 samples, 1.88%)</title><rect x="44.4444%" y="276" width="1.8822%" height="15" fill="rgb(239,167,4)" fg:x="732" fg:w="31"/><text x="44.6944%" y="286.50">&lt;..</text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:173) (62 samples, 3.76%)</title><rect x="42.6837%" y="228" width="3.7644%" height="15" fill="rgb(209,217,16)" fg:x="703" fg:w="62"/><text x="42.9337%" y="238.50">comp..</text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.12%)</title><rect x="46.3267%" y="244" width="0.1214%" height="15" fill="rgb(219,88,35)" fg:x="763" fg:w="2"/><text x="46.5767%" y="254.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:182) (16 samples, 0.97%)</title><rect x="46.5088%" y="228" width="0.9715%" height="15" fill="rgb(220,193,23)" fg:x="766" fg:w="16"/><text x="46.7588%" y="238.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:538) (2 samples, 0.12%)</title><rect x="48.0874%" y="292" width="0.1214%" height="15" fill="rgb(230,90,52)" fg:x="792" fg:w="2"/><text x="48.3374%" y="302.50"></text></g><g><title>_broadcast_shape (numpy/lib/stride_tricks.py:422) (2 samples, 0.12%)</title><rect x="48.2089%" y="308" width="0.1214%" height="15" fill="rgb(252,106,19)" fg:x="794" fg:w="2"/><text x="48.4589%" y="318.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:540) (3 samples, 0.18%)</title><rect x="48.2089%" y="292" width="0.1821%" height="15" fill="rgb(206,74,20)" fg:x="794" fg:w="3"/><text x="48.4589%" y="302.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:542) (2 samples, 0.12%)</title><rect x="48.3910%" y="292" width="0.1214%" height="15" fill="rgb(230,138,44)" fg:x="797" fg:w="2"/><text x="48.6410%" y="302.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:341) (2 samples, 0.12%)</title><rect x="48.6339%" y="324" width="0.1214%" height="15" fill="rgb(235,182,43)" fg:x="801" fg:w="2"/><text x="48.8839%" y="334.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:345) (2 samples, 0.12%)</title><rect x="48.7553%" y="324" width="0.1214%" height="15" fill="rgb(242,16,51)" fg:x="803" fg:w="2"/><text x="49.0053%" y="334.50"></text></g><g><title>&lt;genexpr&gt; (numpy/lib/stride_tricks.py:345) (2 samples, 0.12%)</title><rect x="48.7553%" y="340" width="0.1214%" height="15" fill="rgb(248,9,4)" fg:x="803" fg:w="2"/><text x="49.0053%" y="350.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:349) (7 samples, 0.43%)</title><rect x="48.8767%" y="324" width="0.4250%" height="15" fill="rgb(210,31,22)" fg:x="805" fg:w="7"/><text x="49.1267%" y="334.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4987) (25 samples, 1.52%)</title><rect x="47.9053%" y="260" width="1.5179%" height="15" fill="rgb(239,54,39)" fg:x="789" fg:w="25"/><text x="48.1553%" y="270.50"></text></g><g><title>broadcast_arrays (&lt;__array_function__ internals&gt;:180) (25 samples, 1.52%)</title><rect x="47.9053%" y="276" width="1.5179%" height="15" fill="rgb(230,99,41)" fg:x="789" fg:w="25"/><text x="48.1553%" y="286.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:546) (15 samples, 0.91%)</title><rect x="48.5124%" y="292" width="0.9107%" height="15" fill="rgb(253,106,12)" fg:x="799" fg:w="15"/><text x="48.7624%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/stride_tricks.py:546) (14 samples, 0.85%)</title><rect x="48.5732%" y="308" width="0.8500%" height="15" fill="rgb(213,46,41)" fg:x="800" fg:w="14"/><text x="48.8232%" y="318.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:358) (2 samples, 0.12%)</title><rect x="49.3018%" y="324" width="0.1214%" height="15" fill="rgb(215,133,35)" fg:x="812" fg:w="2"/><text x="49.5518%" y="334.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:190) (34 samples, 2.06%)</title><rect x="47.4803%" y="228" width="2.0644%" height="15" fill="rgb(213,28,5)" fg:x="782" fg:w="34"/><text x="47.7303%" y="238.50">c..</text></g><g><title>meshgrid (&lt;__array_function__ internals&gt;:180) (32 samples, 1.94%)</title><rect x="47.6017%" y="244" width="1.9429%" height="15" fill="rgb(215,77,49)" fg:x="784" fg:w="32"/><text x="47.8517%" y="254.50">m..</text></g><g><title>meshgrid (numpy/lib/function_base.py:4990) (2 samples, 0.12%)</title><rect x="49.4232%" y="260" width="0.1214%" height="15" fill="rgb(248,100,22)" fg:x="814" fg:w="2"/><text x="49.6732%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/function_base.py:4990) (2 samples, 0.12%)</title><rect x="49.4232%" y="276" width="0.1214%" height="15" fill="rgb(208,67,9)" fg:x="814" fg:w="2"/><text x="49.6732%" y="286.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (5 samples, 0.30%)</title><rect x="50.3339%" y="308" width="0.3036%" height="15" fill="rgb(219,133,21)" fg:x="829" fg:w="5"/><text x="50.5839%" y="318.50"></text></g><g><title>is_playing (core/simulation_context/simulation_context.py:836) (3 samples, 0.18%)</title><rect x="50.4554%" y="324" width="0.1821%" height="15" fill="rgb(246,46,29)" fg:x="831" fg:w="3"/><text x="50.7054%" y="334.50"></text></g><g><title>get_mass_matrices (core/articulations/articulation_view.py:3654) (4 samples, 0.24%)</title><rect x="50.7590%" y="308" width="0.2429%" height="15" fill="rgb(246,185,52)" fg:x="836" fg:w="4"/><text x="51.0090%" y="318.50"></text></g><g><title>get_mass_matrices (tensors/impl/api.py:587) (7 samples, 0.43%)</title><rect x="51.1233%" y="324" width="0.4250%" height="15" fill="rgb(252,136,11)" fg:x="842" fg:w="7"/><text x="51.3733%" y="334.50"></text></g><g><title>get_mass_matrices (core/articulations/articulation_view.py:3656) (9 samples, 0.55%)</title><rect x="51.0625%" y="308" width="0.5464%" height="15" fill="rgb(219,138,53)" fg:x="841" fg:w="9"/><text x="51.3125%" y="318.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:191) (40 samples, 2.43%)</title><rect x="49.5446%" y="228" width="2.4287%" height="15" fill="rgb(211,51,23)" fg:x="816" fg:w="40"/><text x="49.7946%" y="238.50">co..</text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (36 samples, 2.19%)</title><rect x="49.7875%" y="244" width="2.1858%" height="15" fill="rgb(247,221,28)" fg:x="820" fg:w="36"/><text x="50.0375%" y="254.50">_..</text></g><g><title>get (omnigibson/utils/python_utils.py:755) (32 samples, 1.94%)</title><rect x="50.0304%" y="260" width="1.9429%" height="15" fill="rgb(251,222,45)" fg:x="824" fg:w="32"/><text x="50.2804%" y="270.50">g..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:542) (32 samples, 1.94%)</title><rect x="50.0304%" y="276" width="1.9429%" height="15" fill="rgb(217,162,53)" fg:x="824" fg:w="32"/><text x="50.2804%" y="286.50">&lt;..</text></g><g><title>get_mass_matrix (omnigibson/prims/entity_prim.py:1415) (30 samples, 1.82%)</title><rect x="50.1518%" y="292" width="1.8215%" height="15" fill="rgb(229,93,14)" fg:x="826" fg:w="30"/><text x="50.4018%" y="302.50">g..</text></g><g><title>get_mass_matrices (core/articulations/articulation_view.py:3659) (6 samples, 0.36%)</title><rect x="51.6090%" y="308" width="0.3643%" height="15" fill="rgb(209,67,49)" fg:x="850" fg:w="6"/><text x="51.8590%" y="318.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:192) (7 samples, 0.43%)</title><rect x="51.9733%" y="228" width="0.4250%" height="15" fill="rgb(213,87,29)" fg:x="856" fg:w="7"/><text x="52.2233%" y="238.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:180) (7 samples, 0.43%)</title><rect x="51.9733%" y="244" width="0.4250%" height="15" fill="rgb(205,151,52)" fg:x="856" fg:w="7"/><text x="52.2233%" y="254.50"></text></g><g><title>get_generalized_gravity_forces (core/articulations/articulation_view.py:3789) (4 samples, 0.24%)</title><rect x="53.1876%" y="324" width="0.2429%" height="15" fill="rgb(253,215,39)" fg:x="876" fg:w="4"/><text x="53.4376%" y="334.50"></text></g><g><title>get_timeline_interface (timeline/__init__.py:9) (3 samples, 0.18%)</title><rect x="53.2483%" y="340" width="0.1821%" height="15" fill="rgb(221,220,41)" fg:x="877" fg:w="3"/><text x="53.4983%" y="350.50"></text></g><g><title>get_generalized_gravity_forces (tensors/impl/api.py:606) (2 samples, 0.12%)</title><rect x="53.5519%" y="340" width="0.1214%" height="15" fill="rgb(218,133,21)" fg:x="882" fg:w="2"/><text x="53.8019%" y="350.50"></text></g><g><title>get_generalized_gravity_forces (core/articulations/articulation_view.py:3792) (4 samples, 0.24%)</title><rect x="53.5519%" y="324" width="0.2429%" height="15" fill="rgb(221,193,43)" fg:x="882" fg:w="4"/><text x="53.8019%" y="334.50"></text></g><g><title>get_generalized_gravity_forces (tensors/impl/api.py:613) (2 samples, 0.12%)</title><rect x="53.6733%" y="340" width="0.1214%" height="15" fill="rgb(240,128,52)" fg:x="884" fg:w="2"/><text x="53.9233%" y="350.50"></text></g><g><title>get_generalized_gravity_forces (core/articulations/articulation_view.py:3795) (3 samples, 0.18%)</title><rect x="53.7948%" y="324" width="0.1821%" height="15" fill="rgb(253,114,12)" fg:x="886" fg:w="3"/><text x="54.0448%" y="334.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:597) (2 samples, 0.12%)</title><rect x="54.0376%" y="372" width="0.1214%" height="15" fill="rgb(215,223,47)" fg:x="890" fg:w="2"/><text x="54.2876%" y="382.50"></text></g><g><title>get_generalized_gravity_forces (core/articulations/articulation_view.py:3796) (4 samples, 0.24%)</title><rect x="53.9769%" y="324" width="0.2429%" height="15" fill="rgb(248,225,23)" fg:x="889" fg:w="4"/><text x="54.2269%" y="334.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.24%)</title><rect x="53.9769%" y="340" width="0.2429%" height="15" fill="rgb(250,108,0)" fg:x="889" fg:w="4"/><text x="54.2269%" y="350.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="53.9769%" y="356" width="0.2429%" height="15" fill="rgb(228,208,7)" fg:x="889" fg:w="4"/><text x="54.2269%" y="366.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:543) (23 samples, 1.40%)</title><rect x="52.8840%" y="276" width="1.3965%" height="15" fill="rgb(244,45,10)" fg:x="871" fg:w="23"/><text x="53.1340%" y="286.50"></text></g><g><title>get_generalized_gravity_forces (omnigibson/robots/robot_base.py:508) (22 samples, 1.34%)</title><rect x="52.9447%" y="292" width="1.3358%" height="15" fill="rgb(207,125,25)" fg:x="872" fg:w="22"/><text x="53.1947%" y="302.50"></text></g><g><title>get_generalized_gravity_forces (omnigibson/prims/entity_prim.py:1404) (20 samples, 1.21%)</title><rect x="53.0662%" y="308" width="1.2143%" height="15" fill="rgb(210,195,18)" fg:x="874" fg:w="20"/><text x="53.3162%" y="318.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (core/articulations/articulation_view.py:3718) (2 samples, 0.12%)</title><rect x="54.3412%" y="308" width="0.1214%" height="15" fill="rgb(249,80,12)" fg:x="895" fg:w="2"/><text x="54.5912%" y="318.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (core/articulations/articulation_view.py:3721) (7 samples, 0.43%)</title><rect x="54.5841%" y="308" width="0.4250%" height="15" fill="rgb(221,65,9)" fg:x="899" fg:w="7"/><text x="54.8341%" y="318.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (tensors/impl/api.py:600) (7 samples, 0.43%)</title><rect x="54.5841%" y="324" width="0.4250%" height="15" fill="rgb(235,49,36)" fg:x="899" fg:w="7"/><text x="54.8341%" y="334.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:597) (3 samples, 0.18%)</title><rect x="55.1305%" y="356" width="0.1821%" height="15" fill="rgb(225,32,20)" fg:x="908" fg:w="3"/><text x="55.3805%" y="366.50"></text></g><g><title>normalize_axis_tuple (numpy/core/numeric.py:1397) (3 samples, 0.18%)</title><rect x="55.1305%" y="372" width="0.1821%" height="15" fill="rgb(215,141,46)" fg:x="908" fg:w="3"/><text x="55.3805%" y="382.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:736) (44 samples, 2.67%)</title><rect x="52.7019%" y="244" width="2.6715%" height="15" fill="rgb(250,160,47)" fg:x="868" fg:w="44"/><text x="52.9519%" y="254.50">__..</text></g><g><title>get (omnigibson/utils/python_utils.py:755) (41 samples, 2.49%)</title><rect x="52.8840%" y="260" width="2.4894%" height="15" fill="rgb(216,222,40)" fg:x="871" fg:w="41"/><text x="53.1340%" y="270.50">ge..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:544) (18 samples, 1.09%)</title><rect x="54.2805%" y="276" width="1.0929%" height="15" fill="rgb(234,217,39)" fg:x="894" fg:w="18"/><text x="54.5305%" y="286.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (omnigibson/prims/entity_prim.py:1393) (18 samples, 1.09%)</title><rect x="54.2805%" y="292" width="1.0929%" height="15" fill="rgb(207,178,40)" fg:x="894" fg:w="18"/><text x="54.5305%" y="302.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (core/articulations/articulation_view.py:3725) (6 samples, 0.36%)</title><rect x="55.0091%" y="308" width="0.3643%" height="15" fill="rgb(221,136,13)" fg:x="906" fg:w="6"/><text x="55.2591%" y="318.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (6 samples, 0.36%)</title><rect x="55.0091%" y="324" width="0.3643%" height="15" fill="rgb(249,199,10)" fg:x="906" fg:w="6"/><text x="55.2591%" y="334.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (6 samples, 0.36%)</title><rect x="55.0091%" y="340" width="0.3643%" height="15" fill="rgb(249,222,13)" fg:x="906" fg:w="6"/><text x="55.2591%" y="350.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:195) (50 samples, 3.04%)</title><rect x="52.3983%" y="228" width="3.0358%" height="15" fill="rgb(244,185,38)" fg:x="863" fg:w="50"/><text x="52.6483%" y="238.50">com..</text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:236) (2 samples, 0.12%)</title><rect x="55.6770%" y="244" width="0.1214%" height="15" fill="rgb(236,202,9)" fg:x="917" fg:w="2"/><text x="55.9270%" y="254.50"></text></g><g><title>__getattr__ (addict/addict.py:67) (2 samples, 0.12%)</title><rect x="55.6770%" y="260" width="0.1214%" height="15" fill="rgb(250,229,37)" fg:x="917" fg:w="2"/><text x="55.9270%" y="270.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py:76) (2 samples, 0.12%)</title><rect x="55.9806%" y="308" width="0.1214%" height="15" fill="rgb(206,174,23)" fg:x="922" fg:w="2"/><text x="56.2306%" y="318.50"></text></g><g><title>_mean (numpy/core/_methods.py:168) (3 samples, 0.18%)</title><rect x="55.9806%" y="292" width="0.1821%" height="15" fill="rgb(211,33,43)" fg:x="922" fg:w="3"/><text x="56.2306%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (6 samples, 0.36%)</title><rect x="56.1627%" y="292" width="0.3643%" height="15" fill="rgb(245,58,50)" fg:x="925" fg:w="6"/><text x="56.4127%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:186) (2 samples, 0.12%)</title><rect x="56.5270%" y="292" width="0.1214%" height="15" fill="rgb(244,68,36)" fg:x="931" fg:w="2"/><text x="56.7770%" y="302.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:244) (15 samples, 0.91%)</title><rect x="55.7984%" y="244" width="0.9107%" height="15" fill="rgb(232,229,15)" fg:x="919" fg:w="15"/><text x="56.0484%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (14 samples, 0.85%)</title><rect x="55.8591%" y="260" width="0.8500%" height="15" fill="rgb(254,30,23)" fg:x="920" fg:w="14"/><text x="56.1091%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (12 samples, 0.73%)</title><rect x="55.9806%" y="276" width="0.7286%" height="15" fill="rgb(235,160,14)" fg:x="922" fg:w="12"/><text x="56.2306%" y="286.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:258) (6 samples, 0.36%)</title><rect x="56.7699%" y="244" width="0.3643%" height="15" fill="rgb(212,155,44)" fg:x="935" fg:w="6"/><text x="57.0199%" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (5 samples, 0.30%)</title><rect x="56.8306%" y="260" width="0.3036%" height="15" fill="rgb(226,2,50)" fg:x="936" fg:w="5"/><text x="57.0806%" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (5 samples, 0.30%)</title><rect x="56.8306%" y="276" width="0.3036%" height="15" fill="rgb(234,177,6)" fg:x="936" fg:w="5"/><text x="57.0806%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (3 samples, 0.18%)</title><rect x="56.9520%" y="292" width="0.1821%" height="15" fill="rgb(217,24,9)" fg:x="938" fg:w="3"/><text x="57.2020%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:174) (2 samples, 0.12%)</title><rect x="57.3163%" y="292" width="0.1214%" height="15" fill="rgb(220,13,46)" fg:x="944" fg:w="2"/><text x="57.5663%" y="302.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:269) (6 samples, 0.36%)</title><rect x="57.1342%" y="244" width="0.3643%" height="15" fill="rgb(239,221,27)" fg:x="941" fg:w="6"/><text x="57.3842%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="57.2556%" y="260" width="0.2429%" height="15" fill="rgb(222,198,25)" fg:x="943" fg:w="4"/><text x="57.5056%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (4 samples, 0.24%)</title><rect x="57.2556%" y="276" width="0.2429%" height="15" fill="rgb(211,99,13)" fg:x="943" fg:w="4"/><text x="57.5056%" y="286.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:270) (4 samples, 0.24%)</title><rect x="57.4985%" y="244" width="0.2429%" height="15" fill="rgb(232,111,31)" fg:x="947" fg:w="4"/><text x="57.7485%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="57.5592%" y="260" width="0.1821%" height="15" fill="rgb(245,82,37)" fg:x="948" fg:w="3"/><text x="57.8092%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (2 samples, 0.12%)</title><rect x="57.6199%" y="276" width="0.1214%" height="15" fill="rgb(227,149,46)" fg:x="949" fg:w="2"/><text x="57.8699%" y="286.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:274) (6 samples, 0.36%)</title><rect x="57.7413%" y="244" width="0.3643%" height="15" fill="rgb(218,36,50)" fg:x="951" fg:w="6"/><text x="57.9913%" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="57.8628%" y="260" width="0.2429%" height="15" fill="rgb(226,80,48)" fg:x="953" fg:w="4"/><text x="58.1128%" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (4 samples, 0.24%)</title><rect x="57.8628%" y="276" width="0.2429%" height="15" fill="rgb(238,224,15)" fg:x="953" fg:w="4"/><text x="58.1128%" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (4 samples, 0.24%)</title><rect x="57.8628%" y="292" width="0.2429%" height="15" fill="rgb(241,136,10)" fg:x="953" fg:w="4"/><text x="58.1128%" y="302.50"></text></g><g><title>step (omnigibson/controllers/controller_base.py:277) (256 samples, 15.54%)</title><rect x="42.6230%" y="212" width="15.5434%" height="15" fill="rgb(208,32,45)" fg:x="702" fg:w="256"/><text x="42.8730%" y="222.50">step (omnigibson/control..</text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:209) (42 samples, 2.55%)</title><rect x="55.6163%" y="228" width="2.5501%" height="15" fill="rgb(207,135,9)" fg:x="916" fg:w="42"/><text x="55.8663%" y="238.50">co..</text></g><g><title>_clip (numpy/core/_methods.py:127) (2 samples, 0.12%)</title><rect x="58.7735%" y="244" width="0.1214%" height="15" fill="rgb(206,86,44)" fg:x="968" fg:w="2"/><text x="59.0235%" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:133) (6 samples, 0.36%)</title><rect x="58.8950%" y="244" width="0.3643%" height="15" fill="rgb(245,177,15)" fg:x="970" fg:w="6"/><text x="59.1450%" y="254.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:103) (4 samples, 0.24%)</title><rect x="59.0164%" y="260" width="0.2429%" height="15" fill="rgb(206,64,50)" fg:x="972" fg:w="4"/><text x="59.2664%" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:94) (8 samples, 0.49%)</title><rect x="59.2593%" y="260" width="0.4857%" height="15" fill="rgb(234,36,40)" fg:x="976" fg:w="8"/><text x="59.5093%" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:95) (2 samples, 0.12%)</title><rect x="59.7450%" y="260" width="0.1214%" height="15" fill="rgb(213,64,8)" fg:x="984" fg:w="2"/><text x="59.9950%" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:135) (11 samples, 0.67%)</title><rect x="59.2593%" y="244" width="0.6679%" height="15" fill="rgb(210,75,36)" fg:x="976" fg:w="11"/><text x="59.5093%" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:138) (4 samples, 0.24%)</title><rect x="59.9271%" y="244" width="0.2429%" height="15" fill="rgb(229,88,21)" fg:x="987" fg:w="4"/><text x="60.1771%" y="254.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:95) (3 samples, 0.18%)</title><rect x="59.9879%" y="260" width="0.1821%" height="15" fill="rgb(252,204,47)" fg:x="988" fg:w="3"/><text x="60.2379%" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:160) (9 samples, 0.55%)</title><rect x="60.2307%" y="244" width="0.5464%" height="15" fill="rgb(208,77,27)" fg:x="992" fg:w="9"/><text x="60.4807%" y="254.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:114) (7 samples, 0.43%)</title><rect x="60.3522%" y="260" width="0.4250%" height="15" fill="rgb(221,76,26)" fg:x="994" fg:w="7"/><text x="60.6022%" y="270.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:249) (40 samples, 2.43%)</title><rect x="58.4699%" y="228" width="2.4287%" height="15" fill="rgb(225,139,18)" fg:x="963" fg:w="40"/><text x="58.7199%" y="238.50">cl..</text></g><g><title>_clip (numpy/core/_methods.py:161) (2 samples, 0.12%)</title><rect x="60.7772%" y="244" width="0.1214%" height="15" fill="rgb(230,137,11)" fg:x="1001" fg:w="2"/><text x="61.0272%" y="254.50"></text></g><g><title>control_type (omnigibson/controllers/joint_controller.py:240) (4 samples, 0.24%)</title><rect x="61.0808%" y="244" width="0.2429%" height="15" fill="rgb(212,28,1)" fg:x="1006" fg:w="4"/><text x="61.3308%" y="254.50"></text></g><g><title>control_type (omnigibson/controllers/multi_finger_gripper_controller.py:295) (2 samples, 0.12%)</title><rect x="61.3236%" y="244" width="0.1214%" height="15" fill="rgb(248,164,17)" fg:x="1010" fg:w="2"/><text x="61.5736%" y="254.50"></text></g><g><title>get_type (omnigibson/controllers/controller_base.py:61) (2 samples, 0.12%)</title><rect x="61.3236%" y="260" width="0.1214%" height="15" fill="rgb(222,171,42)" fg:x="1010" fg:w="2"/><text x="61.5736%" y="270.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:250) (12 samples, 0.73%)</title><rect x="60.8986%" y="228" width="0.7286%" height="15" fill="rgb(243,84,45)" fg:x="1003" fg:w="12"/><text x="61.1486%" y="238.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (3 samples, 0.18%)</title><rect x="61.4451%" y="244" width="0.1821%" height="15" fill="rgb(252,49,23)" fg:x="1012" fg:w="3"/><text x="61.6951%" y="254.50"></text></g><g><title>control_type (omnigibson/controllers/joint_controller.py:240) (2 samples, 0.12%)</title><rect x="61.7486%" y="244" width="0.1214%" height="15" fill="rgb(215,19,7)" fg:x="1017" fg:w="2"/><text x="61.9986%" y="254.50"></text></g><g><title>get_type (omnigibson/controllers/controller_base.py:62) (2 samples, 0.12%)</title><rect x="61.7486%" y="260" width="0.1214%" height="15" fill="rgb(238,81,41)" fg:x="1017" fg:w="2"/><text x="61.9986%" y="270.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:251) (7 samples, 0.43%)</title><rect x="61.6272%" y="228" width="0.4250%" height="15" fill="rgb(210,199,37)" fg:x="1015" fg:w="7"/><text x="61.8772%" y="238.50"></text></g><g><title>dof_idx (omnigibson/controllers/controller_base.py:464) (2 samples, 0.12%)</title><rect x="61.9308%" y="244" width="0.1214%" height="15" fill="rgb(244,192,49)" fg:x="1020" fg:w="2"/><text x="62.1808%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:254) (4 samples, 0.24%)</title><rect x="62.0522%" y="228" width="0.2429%" height="15" fill="rgb(226,211,11)" fg:x="1022" fg:w="4"/><text x="62.3022%" y="238.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:256) (2 samples, 0.12%)</title><rect x="62.3558%" y="228" width="0.1214%" height="15" fill="rgb(236,162,54)" fg:x="1027" fg:w="2"/><text x="62.6058%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:358) (335 samples, 20.34%)</title><rect x="42.5622%" y="196" width="20.3400%" height="15" fill="rgb(220,229,9)" fg:x="701" fg:w="335"/><text x="42.8122%" y="206.50">step (omnigibson/objects/control..</text></g><g><title>step (omnigibson/controllers/controller_base.py:278) (78 samples, 4.74%)</title><rect x="58.1664%" y="212" width="4.7359%" height="15" fill="rgb(250,87,22)" fg:x="958" fg:w="78"/><text x="58.4164%" y="222.50">step (..</text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:258) (7 samples, 0.43%)</title><rect x="62.4772%" y="228" width="0.4250%" height="15" fill="rgb(239,43,17)" fg:x="1029" fg:w="7"/><text x="62.7272%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:359) (3 samples, 0.18%)</title><rect x="62.9022%" y="196" width="0.1821%" height="15" fill="rgb(231,177,25)" fg:x="1036" fg:w="3"/><text x="63.1522%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:362) (2 samples, 0.12%)</title><rect x="63.0844%" y="196" width="0.1214%" height="15" fill="rgb(219,179,1)" fg:x="1039" fg:w="2"/><text x="63.3344%" y="206.50"></text></g><g><title>command_dim (omnigibson/controllers/joint_controller.py:244) (2 samples, 0.12%)</title><rect x="63.0844%" y="212" width="0.1214%" height="15" fill="rgb(238,219,53)" fg:x="1039" fg:w="2"/><text x="63.3344%" y="222.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:365) (2 samples, 0.12%)</title><rect x="63.2058%" y="196" width="0.1214%" height="15" fill="rgb(232,167,36)" fg:x="1041" fg:w="2"/><text x="63.4558%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:367) (2 samples, 0.12%)</title><rect x="63.3273%" y="196" width="0.1214%" height="15" fill="rgb(244,19,51)" fg:x="1043" fg:w="2"/><text x="63.5773%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:369) (2 samples, 0.12%)</title><rect x="63.5094%" y="196" width="0.1214%" height="15" fill="rgb(224,6,22)" fg:x="1046" fg:w="2"/><text x="63.7594%" y="206.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:371) (2 samples, 0.12%)</title><rect x="63.6308%" y="196" width="0.1214%" height="15" fill="rgb(224,145,5)" fg:x="1048" fg:w="2"/><text x="63.8808%" y="206.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:431) (3 samples, 0.18%)</title><rect x="63.9951%" y="228" width="0.1821%" height="15" fill="rgb(234,130,49)" fg:x="1054" fg:w="3"/><text x="64.2451%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:450) (6 samples, 0.36%)</title><rect x="64.2380%" y="228" width="0.3643%" height="15" fill="rgb(254,6,2)" fg:x="1058" fg:w="6"/><text x="64.4880%" y="238.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:452) (4 samples, 0.24%)</title><rect x="64.6630%" y="228" width="0.2429%" height="15" fill="rgb(208,96,46)" fg:x="1065" fg:w="4"/><text x="64.9130%" y="238.50"></text></g><g><title>n_dof (omnigibson/prims/joint_prim.py:569) (4 samples, 0.24%)</title><rect x="64.6630%" y="244" width="0.2429%" height="15" fill="rgb(239,3,39)" fg:x="1065" fg:w="4"/><text x="64.9130%" y="254.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:375) (3 samples, 0.18%)</title><rect x="65.2702%" y="276" width="0.1821%" height="15" fill="rgb(233,210,1)" fg:x="1075" fg:w="3"/><text x="65.5202%" y="286.50"></text></g><g><title>is_playing (core/simulation_context/simulation_context.py:836) (2 samples, 0.12%)</title><rect x="65.3309%" y="292" width="0.1214%" height="15" fill="rgb(244,137,37)" fg:x="1076" fg:w="2"/><text x="65.5809%" y="302.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:377) (2 samples, 0.12%)</title><rect x="65.4523%" y="276" width="0.1214%" height="15" fill="rgb(240,136,2)" fg:x="1078" fg:w="2"/><text x="65.7023%" y="286.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:900) (2 samples, 0.12%)</title><rect x="65.7559%" y="276" width="0.1214%" height="15" fill="rgb(239,18,37)" fg:x="1083" fg:w="2"/><text x="66.0059%" y="286.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (2 samples, 0.12%)</title><rect x="65.7559%" y="292" width="0.1214%" height="15" fill="rgb(218,185,22)" fg:x="1083" fg:w="2"/><text x="66.0059%" y="302.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:902) (4 samples, 0.24%)</title><rect x="65.8774%" y="276" width="0.2429%" height="15" fill="rgb(225,218,4)" fg:x="1085" fg:w="4"/><text x="66.1274%" y="286.50"></text></g><g><title>get_dof_position_targets (tensors/impl/api.py:493) (4 samples, 0.24%)</title><rect x="65.8774%" y="292" width="0.2429%" height="15" fill="rgb(230,182,32)" fg:x="1085" fg:w="4"/><text x="66.1274%" y="302.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:903) (2 samples, 0.12%)</title><rect x="66.1202%" y="276" width="0.1214%" height="15" fill="rgb(242,56,43)" fg:x="1089" fg:w="2"/><text x="66.3702%" y="286.50"></text></g><g><title>assign (core/utils/numpy/tensor.py:91) (2 samples, 0.12%)</title><rect x="66.1202%" y="292" width="0.1214%" height="15" fill="rgb(233,99,24)" fg:x="1089" fg:w="2"/><text x="66.3702%" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:597) (2 samples, 0.12%)</title><rect x="66.3631%" y="324" width="0.1214%" height="15" fill="rgb(234,209,42)" fg:x="1093" fg:w="2"/><text x="66.6131%" y="334.50"></text></g><g><title>normalize_axis_tuple (numpy/core/numeric.py:1397) (2 samples, 0.12%)</title><rect x="66.3631%" y="340" width="0.1214%" height="15" fill="rgb(227,7,12)" fg:x="1093" fg:w="2"/><text x="66.6131%" y="350.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:906) (7 samples, 0.43%)</title><rect x="66.2417%" y="276" width="0.4250%" height="15" fill="rgb(245,203,43)" fg:x="1091" fg:w="7"/><text x="66.4917%" y="286.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (6 samples, 0.36%)</title><rect x="66.3024%" y="292" width="0.3643%" height="15" fill="rgb(238,205,33)" fg:x="1092" fg:w="6"/><text x="66.5524%" y="302.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (6 samples, 0.36%)</title><rect x="66.3024%" y="308" width="0.3643%" height="15" fill="rgb(231,56,7)" fg:x="1092" fg:w="6"/><text x="66.5524%" y="318.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:600) (3 samples, 0.18%)</title><rect x="66.4845%" y="324" width="0.1821%" height="15" fill="rgb(244,186,29)" fg:x="1095" fg:w="3"/><text x="66.7345%" y="334.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (3 samples, 0.18%)</title><rect x="66.9095%" y="308" width="0.1821%" height="15" fill="rgb(234,111,31)" fg:x="1102" fg:w="3"/><text x="67.1595%" y="318.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:472) (7 samples, 0.43%)</title><rect x="66.7274%" y="292" width="0.4250%" height="15" fill="rgb(241,149,10)" fg:x="1099" fg:w="7"/><text x="66.9774%" y="302.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:473) (4 samples, 0.24%)</title><rect x="67.1524%" y="292" width="0.2429%" height="15" fill="rgb(249,206,44)" fg:x="1106" fg:w="4"/><text x="67.4024%" y="302.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:503) (43 samples, 2.61%)</title><rect x="65.1488%" y="228" width="2.6108%" height="15" fill="rgb(251,153,30)" fg:x="1073" fg:w="43"/><text x="65.3988%" y="238.50">de..</text></g><g><title>set_joint_positions (omnigibson/objects/controllable_object.py:556) (43 samples, 2.61%)</title><rect x="65.1488%" y="244" width="2.6108%" height="15" fill="rgb(239,152,38)" fg:x="1073" fg:w="43"/><text x="65.3988%" y="254.50">se..</text></g><g><title>set_joint_positions (omnigibson/prims/entity_prim.py:684) (41 samples, 2.49%)</title><rect x="65.2702%" y="260" width="2.4894%" height="15" fill="rgb(249,139,47)" fg:x="1075" fg:w="41"/><text x="65.5202%" y="270.50">se..</text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:908) (18 samples, 1.09%)</title><rect x="66.6667%" y="276" width="1.0929%" height="15" fill="rgb(244,64,35)" fg:x="1098" fg:w="18"/><text x="66.9167%" y="286.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:475) (6 samples, 0.36%)</title><rect x="67.3953%" y="292" width="0.3643%" height="15" fill="rgb(216,46,15)" fg:x="1110" fg:w="6"/><text x="67.6453%" y="302.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (2 samples, 0.12%)</title><rect x="67.8810%" y="260" width="0.1214%" height="15" fill="rgb(250,74,19)" fg:x="1118" fg:w="2"/><text x="68.1310%" y="270.50"></text></g><g><title>check (tensors/impl/api.py:828) (2 samples, 0.12%)</title><rect x="67.8810%" y="276" width="0.1214%" height="15" fill="rgb(249,42,33)" fg:x="1118" fg:w="2"/><text x="68.1310%" y="286.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1025) (3 samples, 0.18%)</title><rect x="68.0024%" y="260" width="0.1821%" height="15" fill="rgb(242,149,17)" fg:x="1120" fg:w="3"/><text x="68.2524%" y="270.50"></text></g><g><title>resolve_indices (core/utils/numpy/tensor.py:51) (2 samples, 0.12%)</title><rect x="68.0631%" y="276" width="0.1214%" height="15" fill="rgb(244,29,21)" fg:x="1121" fg:w="2"/><text x="68.3131%" y="286.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1031) (5 samples, 0.30%)</title><rect x="68.1846%" y="260" width="0.3036%" height="15" fill="rgb(220,130,37)" fg:x="1123" fg:w="5"/><text x="68.4346%" y="270.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (5 samples, 0.30%)</title><rect x="68.1846%" y="276" width="0.3036%" height="15" fill="rgb(211,67,2)" fg:x="1123" fg:w="5"/><text x="68.4346%" y="286.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (5 samples, 0.30%)</title><rect x="68.1846%" y="292" width="0.3036%" height="15" fill="rgb(235,68,52)" fg:x="1123" fg:w="5"/><text x="68.4346%" y="302.50"></text></g><g><title>set_dof_velocity_targets (tensors/impl/api.py:481) (4 samples, 0.24%)</title><rect x="68.6703%" y="276" width="0.2429%" height="15" fill="rgb(246,142,3)" fg:x="1131" fg:w="4"/><text x="68.9203%" y="286.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (4 samples, 0.24%)</title><rect x="68.6703%" y="292" width="0.2429%" height="15" fill="rgb(241,25,7)" fg:x="1131" fg:w="4"/><text x="68.9203%" y="302.50"></text></g><g><title>set_dof_velocity_targets (tensors/impl/api.py:482) (4 samples, 0.24%)</title><rect x="68.9132%" y="276" width="0.2429%" height="15" fill="rgb(242,119,39)" fg:x="1135" fg:w="4"/><text x="69.1632%" y="286.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (2 samples, 0.12%)</title><rect x="69.0346%" y="292" width="0.1214%" height="15" fill="rgb(241,98,45)" fg:x="1137" fg:w="2"/><text x="69.2846%" y="302.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:507) (25 samples, 1.52%)</title><rect x="67.7596%" y="228" width="1.5179%" height="15" fill="rgb(254,28,30)" fg:x="1116" fg:w="25"/><text x="68.0096%" y="238.50"></text></g><g><title>set_joint_velocities (omnigibson/prims/entity_prim.py:715) (24 samples, 1.46%)</title><rect x="67.8203%" y="244" width="1.4572%" height="15" fill="rgb(241,142,54)" fg:x="1117" fg:w="24"/><text x="68.0703%" y="254.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1033) (13 samples, 0.79%)</title><rect x="68.4882%" y="260" width="0.7893%" height="15" fill="rgb(222,85,15)" fg:x="1128" fg:w="13"/><text x="68.7382%" y="270.50"></text></g><g><title>set_dof_velocity_targets (tensors/impl/api.py:484) (2 samples, 0.12%)</title><rect x="69.1560%" y="276" width="0.1214%" height="15" fill="rgb(210,85,47)" fg:x="1139" fg:w="2"/><text x="69.4060%" y="286.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:378) (2 samples, 0.12%)</title><rect x="69.5811%" y="260" width="0.1214%" height="15" fill="rgb(224,206,25)" fg:x="1146" fg:w="2"/><text x="69.8311%" y="270.50"></text></g><g><title>check (tensors/impl/api.py:828) (2 samples, 0.12%)</title><rect x="69.5811%" y="276" width="0.1214%" height="15" fill="rgb(243,201,19)" fg:x="1146" fg:w="2"/><text x="69.8311%" y="286.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:581) (3 samples, 0.18%)</title><rect x="69.7025%" y="260" width="0.1821%" height="15" fill="rgb(236,59,4)" fg:x="1148" fg:w="3"/><text x="69.9525%" y="270.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:588) (2 samples, 0.12%)</title><rect x="69.8846%" y="260" width="0.1214%" height="15" fill="rgb(254,179,45)" fg:x="1151" fg:w="2"/><text x="70.1346%" y="270.50"></text></g><g><title>assign (core/utils/numpy/tensor.py:91) (2 samples, 0.12%)</title><rect x="69.8846%" y="276" width="0.1214%" height="15" fill="rgb(226,14,10)" fg:x="1151" fg:w="2"/><text x="70.1346%" y="286.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:588) (2 samples, 0.12%)</title><rect x="70.0061%" y="308" width="0.1214%" height="15" fill="rgb(244,27,41)" fg:x="1153" fg:w="2"/><text x="70.2561%" y="318.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:591) (3 samples, 0.18%)</title><rect x="70.0061%" y="260" width="0.1821%" height="15" fill="rgb(235,35,32)" fg:x="1153" fg:w="3"/><text x="70.2561%" y="270.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (3 samples, 0.18%)</title><rect x="70.0061%" y="276" width="0.1821%" height="15" fill="rgb(218,68,31)" fg:x="1153" fg:w="3"/><text x="70.2561%" y="286.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="70.0061%" y="292" width="0.1821%" height="15" fill="rgb(207,120,37)" fg:x="1153" fg:w="3"/><text x="70.2561%" y="302.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:59) (2 samples, 0.12%)</title><rect x="70.2489%" y="292" width="0.1214%" height="15" fill="rgb(227,98,0)" fg:x="1157" fg:w="2"/><text x="70.4989%" y="302.50"></text></g><g><title>set_dof_actuation_forces (tensors/impl/api.py:463) (4 samples, 0.24%)</title><rect x="70.1882%" y="276" width="0.2429%" height="15" fill="rgb(207,7,3)" fg:x="1156" fg:w="4"/><text x="70.4382%" y="286.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:58) (2 samples, 0.12%)</title><rect x="70.4311%" y="292" width="0.1214%" height="15" fill="rgb(206,98,19)" fg:x="1160" fg:w="2"/><text x="70.6811%" y="302.50"></text></g><g><title>set_dof_actuation_forces (tensors/impl/api.py:464) (5 samples, 0.30%)</title><rect x="70.4311%" y="276" width="0.3036%" height="15" fill="rgb(217,5,26)" fg:x="1160" fg:w="5"/><text x="70.6811%" y="286.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (2 samples, 0.12%)</title><rect x="70.6132%" y="292" width="0.1214%" height="15" fill="rgb(235,190,38)" fg:x="1163" fg:w="2"/><text x="70.8632%" y="302.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:338) (117 samples, 7.10%)</title><rect x="63.8130%" y="212" width="7.1038%" height="15" fill="rgb(247,86,24)" fg:x="1051" fg:w="117"/><text x="64.0630%" y="222.50">deploy_con..</text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:511) (26 samples, 1.58%)</title><rect x="69.3382%" y="228" width="1.5786%" height="15" fill="rgb(205,101,16)" fg:x="1142" fg:w="26"/><text x="69.5882%" y="238.50"></text></g><g><title>set_joint_efforts (omnigibson/prims/entity_prim.py:741) (24 samples, 1.46%)</title><rect x="69.4596%" y="244" width="1.4572%" height="15" fill="rgb(246,168,33)" fg:x="1144" fg:w="24"/><text x="69.7096%" y="254.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:593) (12 samples, 0.73%)</title><rect x="70.1882%" y="260" width="0.7286%" height="15" fill="rgb(231,114,1)" fg:x="1156" fg:w="12"/><text x="70.4382%" y="270.50"></text></g><g><title>set_dof_actuation_forces (tensors/impl/api.py:466) (3 samples, 0.18%)</title><rect x="70.7347%" y="276" width="0.1821%" height="15" fill="rgb(207,184,53)" fg:x="1165" fg:w="3"/><text x="70.9847%" y="286.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3426) (2 samples, 0.12%)</title><rect x="71.1597%" y="260" width="0.1214%" height="15" fill="rgb(224,95,51)" fg:x="1172" fg:w="2"/><text x="71.4097%" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:164) (3 samples, 0.18%)</title><rect x="71.4026%" y="276" width="0.1821%" height="15" fill="rgb(212,188,45)" fg:x="1176" fg:w="3"/><text x="71.6526%" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py:168) (3 samples, 0.18%)</title><rect x="71.5847%" y="276" width="0.1821%" height="15" fill="rgb(223,154,38)" fg:x="1179" fg:w="3"/><text x="71.8347%" y="286.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py:77) (3 samples, 0.18%)</title><rect x="71.5847%" y="292" width="0.1821%" height="15" fill="rgb(251,22,52)" fg:x="1179" fg:w="3"/><text x="71.8347%" y="302.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (6 samples, 0.36%)</title><rect x="71.7668%" y="276" width="0.3643%" height="15" fill="rgb(229,209,22)" fg:x="1182" fg:w="6"/><text x="72.0168%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1260) (23 samples, 1.40%)</title><rect x="71.0383%" y="228" width="1.3965%" height="15" fill="rgb(234,138,34)" fg:x="1170" fg:w="23"/><text x="71.2883%" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (23 samples, 1.40%)</title><rect x="71.0383%" y="244" width="1.3965%" height="15" fill="rgb(212,95,11)" fg:x="1170" fg:w="23"/><text x="71.2883%" y="254.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (19 samples, 1.15%)</title><rect x="71.2811%" y="260" width="1.1536%" height="15" fill="rgb(240,179,47)" fg:x="1174" fg:w="19"/><text x="71.5311%" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:182) (5 samples, 0.30%)</title><rect x="72.1311%" y="276" width="0.3036%" height="15" fill="rgb(240,163,11)" fg:x="1188" fg:w="5"/><text x="72.3811%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1266) (9 samples, 0.55%)</title><rect x="72.5562%" y="228" width="0.5464%" height="15" fill="rgb(236,37,12)" fg:x="1195" fg:w="9"/><text x="72.8062%" y="238.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="72.8597%" y="244" width="0.2429%" height="15" fill="rgb(232,164,16)" fg:x="1200" fg:w="4"/><text x="73.1097%" y="254.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2397) (3 samples, 0.18%)</title><rect x="72.9205%" y="260" width="0.1821%" height="15" fill="rgb(244,205,15)" fg:x="1201" fg:w="3"/><text x="73.1705%" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (3 samples, 0.18%)</title><rect x="72.9205%" y="276" width="0.1821%" height="15" fill="rgb(223,117,47)" fg:x="1201" fg:w="3"/><text x="73.1705%" y="286.50"></text></g><g><title>_calculate_in_hand_object (omnigibson/robots/manipulation_robot.py:1300) (2 samples, 0.12%)</title><rect x="73.1026%" y="244" width="0.1214%" height="15" fill="rgb(244,107,35)" fg:x="1204" fg:w="2"/><text x="73.3526%" y="254.50"></text></g><g><title>contact_list (omnigibson/prims/rigid_prim.py:262) (32 samples, 1.94%)</title><rect x="73.5276%" y="308" width="1.9429%" height="15" fill="rgb(205,140,8)" fg:x="1211" fg:w="32"/><text x="73.7776%" y="318.50">c..</text></g><g><title>contact_reporting_enabled (omnigibson/prims/rigid_prim.py:622) (32 samples, 1.94%)</title><rect x="73.5276%" y="324" width="1.9429%" height="15" fill="rgb(228,84,46)" fg:x="1211" fg:w="32"/><text x="73.7776%" y="334.50">c..</text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:667) (2 samples, 0.12%)</title><rect x="77.8385%" y="340" width="0.1214%" height="15" fill="rgb(254,188,9)" fg:x="1282" fg:w="2"/><text x="78.0885%" y="350.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:671) (2 samples, 0.12%)</title><rect x="78.4457%" y="356" width="0.1214%" height="15" fill="rgb(206,112,54)" fg:x="1292" fg:w="2"/><text x="78.6957%" y="366.50"></text></g><g><title>consume_until (numpy/core/_internal.py:633) (2 samples, 0.12%)</title><rect x="78.8100%" y="372" width="0.1214%" height="15" fill="rgb(216,84,49)" fg:x="1298" fg:w="2"/><text x="79.0600%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:696) (6 samples, 0.36%)</title><rect x="78.6885%" y="356" width="0.3643%" height="15" fill="rgb(214,194,35)" fg:x="1296" fg:w="6"/><text x="78.9385%" y="366.50"></text></g><g><title>consume_until (numpy/core/_internal.py:635) (2 samples, 0.12%)</title><rect x="78.9314%" y="372" width="0.1214%" height="15" fill="rgb(249,28,3)" fg:x="1300" fg:w="2"/><text x="79.1814%" y="382.50"></text></g><g><title>consume (numpy/core/_internal.py:625) (4 samples, 0.24%)</title><rect x="79.1743%" y="372" width="0.2429%" height="15" fill="rgb(222,56,52)" fg:x="1304" fg:w="4"/><text x="79.4243%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:705) (6 samples, 0.36%)</title><rect x="79.1135%" y="356" width="0.3643%" height="15" fill="rgb(245,217,50)" fg:x="1303" fg:w="6"/><text x="79.3635%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:671) (4 samples, 0.24%)</title><rect x="79.4778%" y="372" width="0.2429%" height="15" fill="rgb(213,201,24)" fg:x="1309" fg:w="4"/><text x="79.7278%" y="382.50"></text></g><g><title>consume (numpy/core/_internal.py:626) (3 samples, 0.18%)</title><rect x="79.5386%" y="388" width="0.1821%" height="15" fill="rgb(248,116,28)" fg:x="1310" fg:w="3"/><text x="79.7886%" y="398.50"></text></g><g><title>consume_until (numpy/core/_internal.py:633) (2 samples, 0.12%)</title><rect x="80.0850%" y="388" width="0.1214%" height="15" fill="rgb(219,72,43)" fg:x="1319" fg:w="2"/><text x="80.3350%" y="398.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:696) (6 samples, 0.36%)</title><rect x="79.9029%" y="372" width="0.3643%" height="15" fill="rgb(209,138,14)" fg:x="1316" fg:w="6"/><text x="80.1529%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:705) (3 samples, 0.18%)</title><rect x="80.3279%" y="372" width="0.1821%" height="15" fill="rgb(222,18,33)" fg:x="1323" fg:w="3"/><text x="80.5779%" y="382.50"></text></g><g><title>consume (numpy/core/_internal.py:625) (3 samples, 0.18%)</title><rect x="80.3279%" y="388" width="0.1821%" height="15" fill="rgb(213,199,7)" fg:x="1323" fg:w="3"/><text x="80.5779%" y="398.50"></text></g><g><title>advance (numpy/core/_internal.py:620) (3 samples, 0.18%)</title><rect x="80.6315%" y="404" width="0.1821%" height="15" fill="rgb(250,110,10)" fg:x="1328" fg:w="3"/><text x="80.8815%" y="414.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:765) (5 samples, 0.30%)</title><rect x="80.6315%" y="372" width="0.3036%" height="15" fill="rgb(248,123,6)" fg:x="1328" fg:w="5"/><text x="80.8815%" y="382.50"></text></g><g><title>consume (numpy/core/_internal.py:626) (5 samples, 0.30%)</title><rect x="80.6315%" y="388" width="0.3036%" height="15" fill="rgb(206,91,31)" fg:x="1328" fg:w="5"/><text x="80.8815%" y="398.50"></text></g><g><title>advance (numpy/core/_internal.py:621) (2 samples, 0.12%)</title><rect x="80.8136%" y="404" width="0.1214%" height="15" fill="rgb(211,154,13)" fg:x="1331" fg:w="2"/><text x="81.0636%" y="414.50"></text></g><g><title>consume_until (numpy/core/_internal.py:638) (2 samples, 0.12%)</title><rect x="80.9350%" y="388" width="0.1214%" height="15" fill="rgb(225,148,7)" fg:x="1333" fg:w="2"/><text x="81.1850%" y="398.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:766) (3 samples, 0.18%)</title><rect x="80.9350%" y="372" width="0.1821%" height="15" fill="rgb(220,160,43)" fg:x="1333" fg:w="3"/><text x="81.1850%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:706) (38 samples, 2.31%)</title><rect x="79.4778%" y="356" width="2.3072%" height="15" fill="rgb(213,52,39)" fg:x="1309" fg:w="38"/><text x="79.7278%" y="366.50">_..</text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:794) (10 samples, 0.61%)</title><rect x="81.1779%" y="372" width="0.6072%" height="15" fill="rgb(243,137,7)" fg:x="1337" fg:w="10"/><text x="81.4279%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:721) (2 samples, 0.12%)</title><rect x="82.0279%" y="356" width="0.1214%" height="15" fill="rgb(230,79,13)" fg:x="1351" fg:w="2"/><text x="82.2779%" y="366.50"></text></g><g><title>consume (numpy/core/_internal.py:626) (2 samples, 0.12%)</title><rect x="82.2708%" y="372" width="0.1214%" height="15" fill="rgb(247,105,23)" fg:x="1355" fg:w="2"/><text x="82.5208%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:765) (4 samples, 0.24%)</title><rect x="82.2101%" y="356" width="0.2429%" height="15" fill="rgb(223,179,41)" fg:x="1354" fg:w="4"/><text x="82.4601%" y="366.50"></text></g><g><title>consume_until (numpy/core/_internal.py:638) (4 samples, 0.24%)</title><rect x="82.5744%" y="372" width="0.2429%" height="15" fill="rgb(218,9,34)" fg:x="1360" fg:w="4"/><text x="82.8244%" y="382.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:766) (7 samples, 0.43%)</title><rect x="82.4529%" y="356" width="0.4250%" height="15" fill="rgb(222,106,8)" fg:x="1358" fg:w="7"/><text x="82.7029%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:773) (3 samples, 0.18%)</title><rect x="82.8780%" y="356" width="0.1821%" height="15" fill="rgb(211,220,0)" fg:x="1365" fg:w="3"/><text x="83.1280%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:774) (3 samples, 0.18%)</title><rect x="83.0601%" y="356" width="0.1821%" height="15" fill="rgb(229,52,16)" fg:x="1368" fg:w="3"/><text x="83.3101%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:780) (2 samples, 0.12%)</title><rect x="83.3030%" y="356" width="0.1214%" height="15" fill="rgb(212,155,18)" fg:x="1372" fg:w="2"/><text x="83.5530%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:706) (87 samples, 5.28%)</title><rect x="78.2028%" y="340" width="5.2823%" height="15" fill="rgb(242,21,14)" fg:x="1288" fg:w="87"/><text x="78.4528%" y="350.50">__dtyp..</text></g><g><title>contact_list (omnigibson/prims/rigid_prim.py:263) (133 samples, 8.08%)</title><rect x="75.4706%" y="308" width="8.0753%" height="15" fill="rgb(222,19,48)" fg:x="1243" fg:w="133"/><text x="75.7206%" y="318.50">contact_lis..</text></g><g><title>_dtype_from_pep3118 (numpy/core/_internal.py:652) (95 samples, 5.77%)</title><rect x="77.7778%" y="324" width="5.7681%" height="15" fill="rgb(232,45,27)" fg:x="1281" fg:w="95"/><text x="78.0278%" y="334.50">_dtype_..</text></g><g><title>&lt;listcomp&gt; (omnigibson/robots/manipulation_robot.py:282) (171 samples, 10.38%)</title><rect x="73.4062%" y="292" width="10.3825%" height="15" fill="rgb(249,103,42)" fg:x="1209" fg:w="171"/><text x="73.6562%" y="302.50">&lt;listcomp&gt; (omn..</text></g><g><title>contact_list (omnigibson/prims/rigid_prim.py:264) (4 samples, 0.24%)</title><rect x="83.5458%" y="308" width="0.2429%" height="15" fill="rgb(246,81,33)" fg:x="1376" fg:w="4"/><text x="83.7958%" y="318.50"></text></g><g><title>_find_gripper_contacts (omnigibson/robots/manipulation_robot.py:282) (174 samples, 10.56%)</title><rect x="73.3455%" y="276" width="10.5647%" height="15" fill="rgb(252,33,42)" fg:x="1208" fg:w="174"/><text x="73.5955%" y="286.50">_find_gripper_c..</text></g><g><title>finger_links (omnigibson/robots/manipulation_robot.py:628) (2 samples, 0.12%)</title><rect x="83.7887%" y="292" width="0.1214%" height="15" fill="rgb(209,212,41)" fg:x="1380" fg:w="2"/><text x="84.0387%" y="302.50"></text></g><g><title>_calculate_in_hand_object_rigid (omnigibson/robots/manipulation_robot.py:803) (182 samples, 11.05%)</title><rect x="73.2240%" y="260" width="11.0504%" height="15" fill="rgb(207,154,6)" fg:x="1206" fg:w="182"/><text x="73.4740%" y="270.50">_calculate_in_ha..</text></g><g><title>_find_gripper_contacts (omnigibson/robots/manipulation_robot.py:285) (6 samples, 0.36%)</title><rect x="83.9101%" y="276" width="0.3643%" height="15" fill="rgb(223,64,47)" fg:x="1382" fg:w="6"/><text x="84.1601%" y="286.50"></text></g><g><title>link_prim_paths (omnigibson/objects/object_base.py:295) (4 samples, 0.24%)</title><rect x="84.0316%" y="292" width="0.2429%" height="15" fill="rgb(211,161,38)" fg:x="1384" fg:w="4"/><text x="84.2816%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/objects/object_base.py:295) (3 samples, 0.18%)</title><rect x="84.0923%" y="308" width="0.1821%" height="15" fill="rgb(219,138,40)" fg:x="1385" fg:w="3"/><text x="84.3423%" y="318.50"></text></g><g><title>prim_path (omnigibson/prims/prim_base.py:148) (3 samples, 0.18%)</title><rect x="84.0923%" y="324" width="0.1821%" height="15" fill="rgb(241,228,46)" fg:x="1385" fg:w="3"/><text x="84.3423%" y="334.50"></text></g><g><title>_calculate_in_hand_object (omnigibson/robots/manipulation_robot.py:1303) (184 samples, 11.17%)</title><rect x="73.2240%" y="244" width="11.1718%" height="15" fill="rgb(223,209,38)" fg:x="1206" fg:w="184"/><text x="73.4740%" y="254.50">_calculate_in_ha..</text></g><g><title>_calculate_in_hand_object_rigid (omnigibson/robots/manipulation_robot.py:812) (2 samples, 0.12%)</title><rect x="84.2744%" y="260" width="0.1214%" height="15" fill="rgb(236,164,45)" fg:x="1388" fg:w="2"/><text x="84.5244%" y="270.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:342) (223 samples, 13.54%)</title><rect x="70.9168%" y="212" width="13.5398%" height="15" fill="rgb(231,15,5)" fg:x="1168" fg:w="223"/><text x="71.1668%" y="222.50">deploy_control (omni..</text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1280) (187 samples, 11.35%)</title><rect x="73.1026%" y="228" width="11.3540%" height="15" fill="rgb(252,35,15)" fg:x="1204" fg:w="187"/><text x="73.3526%" y="238.50">_handle_assisted_..</text></g><g><title>step (omnigibson/simulator.py:835) (1,351 samples, 82.03%)</title><rect x="2.5501%" y="116" width="82.0279%" height="15" fill="rgb(248,181,18)" fg:x="42" fg:w="1351"/><text x="2.8001%" y="126.50">step (omnigibson/simulator.py:835)</text></g><g><title>step (core/simulation_context/simulation_context.py:704) (1,348 samples, 81.85%)</title><rect x="2.7322%" y="132" width="81.8458%" height="15" fill="rgb(233,39,42)" fg:x="45" fg:w="1348"/><text x="2.9822%" y="142.50">step (core/simulation_context/simulation_context.py:704)</text></g><g><title>_step (core/physics_context/physics_context.py:574) (1,340 samples, 81.36%)</title><rect x="3.2180%" y="148" width="81.3600%" height="15" fill="rgb(238,110,33)" fg:x="53" fg:w="1340"/><text x="3.4680%" y="158.50">_step (core/physics_context/physics_context.py:574)</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:144) (1,027 samples, 62.36%)</title><rect x="22.2222%" y="164" width="62.3558%" height="15" fill="rgb(233,195,10)" fg:x="366" fg:w="1027"/><text x="22.4722%" y="174.50">&lt;lambda&gt; (omnigibson/objects/controllable_object.py:144)</text></g><g><title>step (omnigibson/robots/robot_base.py:296) (729 samples, 44.26%)</title><rect x="40.3157%" y="180" width="44.2623%" height="15" fill="rgb(254,105,3)" fg:x="664" fg:w="729"/><text x="40.5657%" y="190.50">step (omnigibson/robots/robot_base.py:296)</text></g><g><title>step (omnigibson/objects/controllable_object.py:376) (343 samples, 20.83%)</title><rect x="63.7523%" y="196" width="20.8257%" height="15" fill="rgb(221,225,9)" fg:x="1050" fg:w="343"/><text x="64.0023%" y="206.50">step (omnigibson/objects/controll..</text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:345) (2 samples, 0.12%)</title><rect x="84.4566%" y="212" width="0.1214%" height="15" fill="rgb(224,227,45)" fg:x="1391" fg:w="2"/><text x="84.7066%" y="222.50"></text></g><g><title>_non_physics_step (omnigibson/simulator.py:718) (2 samples, 0.12%)</title><rect x="84.5780%" y="132" width="0.1214%" height="15" fill="rgb(229,198,43)" fg:x="1393" fg:w="2"/><text x="84.8280%" y="142.50"></text></g><g><title>update_visuals (omnigibson/objects/stateful_object.py:451) (3 samples, 0.18%)</title><rect x="85.0030%" y="148" width="0.1821%" height="15" fill="rgb(206,209,35)" fg:x="1400" fg:w="3"/><text x="85.2530%" y="158.50"></text></g><g><title>get_value (omnigibson/object_states/object_state_base.py:325) (2 samples, 0.12%)</title><rect x="85.0638%" y="164" width="0.1214%" height="15" fill="rgb(245,195,53)" fg:x="1401" fg:w="2"/><text x="85.3138%" y="174.50"></text></g><g><title>update_cache (omnigibson/object_states/object_state_base.py:195) (2 samples, 0.12%)</title><rect x="85.0638%" y="180" width="0.1214%" height="15" fill="rgb(240,92,26)" fg:x="1401" fg:w="2"/><text x="85.3138%" y="190.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:16) (1,364 samples, 82.82%)</title><rect x="2.4287%" y="100" width="82.8172%" height="15" fill="rgb(207,40,23)" fg:x="40" fg:w="1364"/><text x="2.6787%" y="110.50">step (omnigibson/envs/vec_env_base.py:16)</text></g><g><title>step (omnigibson/simulator.py:838) (11 samples, 0.67%)</title><rect x="84.5780%" y="116" width="0.6679%" height="15" fill="rgb(223,111,35)" fg:x="1393" fg:w="11"/><text x="84.8280%" y="126.50"></text></g><g><title>_non_physics_step (omnigibson/simulator.py:732) (7 samples, 0.43%)</title><rect x="84.8209%" y="132" width="0.4250%" height="15" fill="rgb(229,147,28)" fg:x="1397" fg:w="7"/><text x="85.0709%" y="142.50"></text></g><g><title>get_obs (omnigibson/envs/env_base.py:484) (3 samples, 0.18%)</title><rect x="85.3066%" y="132" width="0.1821%" height="15" fill="rgb(211,29,28)" fg:x="1405" fg:w="3"/><text x="85.5566%" y="142.50"></text></g><g><title>wrapper (functools.py:889) (2 samples, 0.12%)</title><rect x="85.3673%" y="148" width="0.1214%" height="15" fill="rgb(228,72,33)" fg:x="1406" fg:w="2"/><text x="85.6173%" y="158.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:338) (5 samples, 0.30%)</title><rect x="85.4888%" y="260" width="0.3036%" height="15" fill="rgb(205,214,31)" fg:x="1408" fg:w="5"/><text x="85.7388%" y="270.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (5 samples, 0.30%)</title><rect x="85.4888%" y="276" width="0.3036%" height="15" fill="rgb(224,111,15)" fg:x="1408" fg:w="5"/><text x="85.7388%" y="286.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (5 samples, 0.30%)</title><rect x="85.7923%" y="276" width="0.3036%" height="15" fill="rgb(253,21,26)" fg:x="1413" fg:w="5"/><text x="86.0423%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:339) (6 samples, 0.36%)</title><rect x="85.7923%" y="260" width="0.3643%" height="15" fill="rgb(245,139,43)" fg:x="1413" fg:w="6"/><text x="86.0423%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:340) (5 samples, 0.30%)</title><rect x="86.1566%" y="260" width="0.3036%" height="15" fill="rgb(252,170,7)" fg:x="1419" fg:w="5"/><text x="86.4066%" y="270.50"></text></g><g><title>get_joint_efforts (omnigibson/prims/entity_prim.py:924) (5 samples, 0.30%)</title><rect x="86.1566%" y="276" width="0.3036%" height="15" fill="rgb(231,118,14)" fg:x="1419" fg:w="5"/><text x="86.4066%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (7 samples, 0.43%)</title><rect x="86.4602%" y="292" width="0.4250%" height="15" fill="rgb(238,83,0)" fg:x="1424" fg:w="7"/><text x="86.7102%" y="302.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (5 samples, 0.30%)</title><rect x="86.5817%" y="308" width="0.3036%" height="15" fill="rgb(221,39,39)" fg:x="1426" fg:w="5"/><text x="86.8317%" y="318.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (5 samples, 0.30%)</title><rect x="86.5817%" y="324" width="0.3036%" height="15" fill="rgb(222,119,46)" fg:x="1426" fg:w="5"/><text x="86.8317%" y="334.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (5 samples, 0.30%)</title><rect x="86.5817%" y="340" width="0.3036%" height="15" fill="rgb(222,165,49)" fg:x="1426" fg:w="5"/><text x="86.8317%" y="350.50"></text></g><g><title>get_position (omnigibson/prims/xform_prim.py:220) (8 samples, 0.49%)</title><rect x="86.4602%" y="276" width="0.4857%" height="15" fill="rgb(219,113,52)" fg:x="1424" fg:w="8"/><text x="86.7102%" y="286.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (2 samples, 0.12%)</title><rect x="86.9460%" y="292" width="0.1214%" height="15" fill="rgb(214,7,15)" fg:x="1432" fg:w="2"/><text x="87.1960%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (2 samples, 0.12%)</title><rect x="86.9460%" y="308" width="0.1214%" height="15" fill="rgb(235,32,4)" fg:x="1432" fg:w="2"/><text x="87.1960%" y="318.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:341) (49 samples, 2.98%)</title><rect x="86.4602%" y="260" width="2.9751%" height="15" fill="rgb(238,90,54)" fg:x="1424" fg:w="49"/><text x="86.7102%" y="270.50">_ge..</text></g><g><title>get_rpy (omnigibson/prims/xform_prim.py:247) (41 samples, 2.49%)</title><rect x="86.9460%" y="276" width="2.4894%" height="15" fill="rgb(213,208,19)" fg:x="1432" fg:w="41"/><text x="87.1960%" y="286.50">ge..</text></g><g><title>quat2euler (omnigibson/utils/transform_utils.py:534) (39 samples, 2.37%)</title><rect x="87.0674%" y="292" width="2.3679%" height="15" fill="rgb(233,156,4)" fg:x="1434" fg:w="39"/><text x="87.3174%" y="302.50">qu..</text></g><g><title>match (re.py:190) (2 samples, 0.12%)</title><rect x="89.3139%" y="308" width="0.1214%" height="15" fill="rgb(207,194,5)" fg:x="1471" fg:w="2"/><text x="89.5639%" y="318.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:254) (6 samples, 0.36%)</title><rect x="89.4353%" y="276" width="0.3643%" height="15" fill="rgb(206,111,30)" fg:x="1473" fg:w="6"/><text x="89.6853%" y="286.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (3 samples, 0.18%)</title><rect x="89.6175%" y="292" width="0.1821%" height="15" fill="rgb(243,70,54)" fg:x="1476" fg:w="3"/><text x="89.8675%" y="302.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:259) (3 samples, 0.18%)</title><rect x="89.7996%" y="276" width="0.1821%" height="15" fill="rgb(242,28,8)" fg:x="1479" fg:w="3"/><text x="90.0496%" y="286.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="89.8604%" y="292" width="0.1214%" height="15" fill="rgb(219,106,18)" fg:x="1480" fg:w="2"/><text x="90.1104%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:342) (13 samples, 0.79%)</title><rect x="89.4353%" y="260" width="0.7893%" height="15" fill="rgb(244,222,10)" fg:x="1473" fg:w="13"/><text x="89.6853%" y="270.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:262) (4 samples, 0.24%)</title><rect x="89.9818%" y="276" width="0.2429%" height="15" fill="rgb(236,179,52)" fg:x="1482" fg:w="4"/><text x="90.2318%" y="286.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="90.1032%" y="292" width="0.1214%" height="15" fill="rgb(213,23,39)" fg:x="1484" fg:w="2"/><text x="90.3532%" y="302.50"></text></g><g><title>norm (numpy/linalg/linalg.py:2527) (2 samples, 0.12%)</title><rect x="90.1032%" y="308" width="0.1214%" height="15" fill="rgb(238,48,10)" fg:x="1484" fg:w="2"/><text x="90.3532%" y="318.50"></text></g><g><title>_rigid_prim_view (omnigibson/prims/rigid_prim.py:364) (3 samples, 0.18%)</title><rect x="90.3461%" y="308" width="0.1821%" height="15" fill="rgb(251,196,23)" fg:x="1488" fg:w="3"/><text x="90.5961%" y="318.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (3 samples, 0.18%)</title><rect x="90.3461%" y="324" width="0.1821%" height="15" fill="rgb(250,152,24)" fg:x="1488" fg:w="3"/><text x="90.5961%" y="334.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (3 samples, 0.18%)</title><rect x="90.3461%" y="340" width="0.1821%" height="15" fill="rgb(209,150,17)" fg:x="1488" fg:w="3"/><text x="90.5961%" y="350.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:355) (9 samples, 0.55%)</title><rect x="90.2247%" y="260" width="0.5464%" height="15" fill="rgb(234,202,34)" fg:x="1486" fg:w="9"/><text x="90.4747%" y="270.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/entity_prim.py:945) (9 samples, 0.55%)</title><rect x="90.2247%" y="276" width="0.5464%" height="15" fill="rgb(253,148,53)" fg:x="1486" fg:w="9"/><text x="90.4747%" y="286.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/rigid_prim.py:286) (8 samples, 0.49%)</title><rect x="90.2854%" y="292" width="0.4857%" height="15" fill="rgb(218,129,16)" fg:x="1487" fg:w="8"/><text x="90.5354%" y="302.50"></text></g><g><title>get_angular_velocities (core/prims/rigid_prim_view.py:803) (2 samples, 0.12%)</title><rect x="90.7711%" y="308" width="0.1214%" height="15" fill="rgb(216,85,19)" fg:x="1495" fg:w="2"/><text x="91.0211%" y="318.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:35) (90 samples, 5.46%)</title><rect x="85.4888%" y="244" width="5.4645%" height="15" fill="rgb(235,228,7)" fg:x="1408" fg:w="90"/><text x="85.7388%" y="254.50">_get_pr..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:356) (3 samples, 0.18%)</title><rect x="90.7711%" y="260" width="0.1821%" height="15" fill="rgb(245,175,0)" fg:x="1495" fg:w="3"/><text x="91.0211%" y="270.50"></text></g><g><title>get_angular_velocity (omnigibson/prims/entity_prim.py:962) (3 samples, 0.18%)</title><rect x="90.7711%" y="276" width="0.1821%" height="15" fill="rgb(208,168,36)" fg:x="1495" fg:w="3"/><text x="91.0211%" y="286.50"></text></g><g><title>get_angular_velocity (omnigibson/prims/rigid_prim.py:302) (3 samples, 0.18%)</title><rect x="90.7711%" y="292" width="0.1821%" height="15" fill="rgb(246,171,24)" fg:x="1495" fg:w="3"/><text x="91.0211%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:38) (2 samples, 0.12%)</title><rect x="90.9532%" y="244" width="0.1214%" height="15" fill="rgb(215,142,24)" fg:x="1498" fg:w="2"/><text x="91.2032%" y="254.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (2 samples, 0.12%)</title><rect x="90.9532%" y="260" width="0.1214%" height="15" fill="rgb(250,187,7)" fg:x="1498" fg:w="2"/><text x="91.2032%" y="270.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1508) (2 samples, 0.12%)</title><rect x="91.0747%" y="276" width="0.1214%" height="15" fill="rgb(228,66,33)" fg:x="1500" fg:w="2"/><text x="91.3247%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:39) (4 samples, 0.24%)</title><rect x="91.0747%" y="244" width="0.2429%" height="15" fill="rgb(234,215,21)" fg:x="1500" fg:w="4"/><text x="91.3247%" y="254.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (4 samples, 0.24%)</title><rect x="91.0747%" y="260" width="0.2429%" height="15" fill="rgb(222,191,20)" fg:x="1500" fg:w="4"/><text x="91.3247%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:40) (97 samples, 5.89%)</title><rect x="85.4888%" y="228" width="5.8895%" height="15" fill="rgb(245,79,54)" fg:x="1408" fg:w="97"/><text x="85.7388%" y="238.50">_get_pr..</text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1444) (2 samples, 0.12%)</title><rect x="91.3783%" y="260" width="0.1214%" height="15" fill="rgb(240,10,37)" fg:x="1505" fg:w="2"/><text x="91.6283%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:42) (4 samples, 0.24%)</title><rect x="91.3783%" y="228" width="0.2429%" height="15" fill="rgb(214,192,32)" fg:x="1505" fg:w="4"/><text x="91.6283%" y="238.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (4 samples, 0.24%)</title><rect x="91.3783%" y="244" width="0.2429%" height="15" fill="rgb(209,36,54)" fg:x="1505" fg:w="4"/><text x="91.6283%" y="254.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (2 samples, 0.12%)</title><rect x="91.4997%" y="260" width="0.1214%" height="15" fill="rgb(220,10,11)" fg:x="1507" fg:w="2"/><text x="91.7497%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:67) (103 samples, 6.25%)</title><rect x="85.4888%" y="212" width="6.2538%" height="15" fill="rgb(221,106,17)" fg:x="1408" fg:w="103"/><text x="85.7388%" y="222.50">_get_pro..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:43) (2 samples, 0.12%)</title><rect x="91.6211%" y="228" width="0.1214%" height="15" fill="rgb(251,142,44)" fg:x="1509" fg:w="2"/><text x="91.8711%" y="238.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:906) (2 samples, 0.12%)</title><rect x="91.6211%" y="244" width="0.1214%" height="15" fill="rgb(238,13,15)" fg:x="1509" fg:w="2"/><text x="91.8711%" y="254.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:622) (3 samples, 0.18%)</title><rect x="91.8033%" y="244" width="0.1821%" height="15" fill="rgb(208,107,27)" fg:x="1512" fg:w="3"/><text x="92.0533%" y="254.50"></text></g><g><title>dof_indices (omnigibson/prims/joint_prim.py:577) (2 samples, 0.12%)</title><rect x="91.9854%" y="260" width="0.1214%" height="15" fill="rgb(205,136,37)" fg:x="1515" fg:w="2"/><text x="92.2354%" y="270.50"></text></g><g><title>articulated (omnigibson/prims/joint_prim.py:586) (2 samples, 0.12%)</title><rect x="91.9854%" y="276" width="0.1214%" height="15" fill="rgb(250,205,27)" fg:x="1515" fg:w="2"/><text x="92.2354%" y="286.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:623) (4 samples, 0.24%)</title><rect x="91.9854%" y="244" width="0.2429%" height="15" fill="rgb(210,80,43)" fg:x="1515" fg:w="4"/><text x="92.2354%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:72) (10 samples, 0.61%)</title><rect x="91.8033%" y="212" width="0.6072%" height="15" fill="rgb(247,160,36)" fg:x="1512" fg:w="10"/><text x="92.0533%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/robots/two_wheel_robot.py:72) (10 samples, 0.61%)</title><rect x="91.8033%" y="228" width="0.6072%" height="15" fill="rgb(234,13,49)" fg:x="1512" fg:w="10"/><text x="92.0533%" y="238.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:624) (3 samples, 0.18%)</title><rect x="92.2283%" y="244" width="0.1821%" height="15" fill="rgb(234,122,0)" fg:x="1519" fg:w="3"/><text x="92.4783%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:413) (117 samples, 7.10%)</title><rect x="85.4888%" y="196" width="7.1038%" height="15" fill="rgb(207,146,38)" fg:x="1408" fg:w="117"/><text x="85.7388%" y="206.50">_get_propr..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:75) (3 samples, 0.18%)</title><rect x="92.4104%" y="212" width="0.1821%" height="15" fill="rgb(207,177,25)" fg:x="1522" fg:w="3"/><text x="92.6604%" y="222.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:416) (2 samples, 0.12%)</title><rect x="92.5926%" y="196" width="0.1214%" height="15" fill="rgb(211,178,42)" fg:x="1525" fg:w="2"/><text x="92.8426%" y="206.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (2 samples, 0.12%)</title><rect x="92.5926%" y="212" width="0.1214%" height="15" fill="rgb(230,69,54)" fg:x="1525" fg:w="2"/><text x="92.8426%" y="222.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:421) (2 samples, 0.12%)</title><rect x="92.8355%" y="196" width="0.1214%" height="15" fill="rgb(214,135,41)" fg:x="1529" fg:w="2"/><text x="93.0855%" y="206.50"></text></g><g><title>_rigid_prim_view (omnigibson/prims/rigid_prim.py:364) (4 samples, 0.24%)</title><rect x="93.1390%" y="260" width="0.2429%" height="15" fill="rgb(237,67,25)" fg:x="1534" fg:w="4"/><text x="93.3890%" y="270.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (4 samples, 0.24%)</title><rect x="93.1390%" y="276" width="0.2429%" height="15" fill="rgb(222,189,50)" fg:x="1534" fg:w="4"/><text x="93.3890%" y="286.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (4 samples, 0.24%)</title><rect x="93.1390%" y="292" width="0.2429%" height="15" fill="rgb(245,148,34)" fg:x="1534" fg:w="4"/><text x="93.3890%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (11 samples, 0.67%)</title><rect x="93.1390%" y="244" width="0.6679%" height="15" fill="rgb(222,29,6)" fg:x="1534" fg:w="11"/><text x="93.3890%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (4 samples, 0.24%)</title><rect x="93.5641%" y="260" width="0.2429%" height="15" fill="rgb(221,189,43)" fg:x="1541" fg:w="4"/><text x="93.8141%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (4 samples, 0.24%)</title><rect x="93.5641%" y="276" width="0.2429%" height="15" fill="rgb(207,36,27)" fg:x="1541" fg:w="4"/><text x="93.8141%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="93.5641%" y="292" width="0.2429%" height="15" fill="rgb(217,90,24)" fg:x="1541" fg:w="4"/><text x="93.8141%" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (4 samples, 0.24%)</title><rect x="94.0498%" y="276" width="0.2429%" height="15" fill="rgb(224,66,35)" fg:x="1549" fg:w="4"/><text x="94.2998%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (4 samples, 0.24%)</title><rect x="94.0498%" y="292" width="0.2429%" height="15" fill="rgb(221,13,50)" fg:x="1549" fg:w="4"/><text x="94.2998%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (2 samples, 0.12%)</title><rect x="94.1712%" y="308" width="0.1214%" height="15" fill="rgb(236,68,49)" fg:x="1551" fg:w="2"/><text x="94.4212%" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:84) (2 samples, 0.12%)</title><rect x="94.1712%" y="324" width="0.1214%" height="15" fill="rgb(229,146,28)" fg:x="1551" fg:w="2"/><text x="94.4212%" y="334.50"></text></g><g><title>_all (numpy/core/_methods.py:63) (2 samples, 0.12%)</title><rect x="94.1712%" y="340" width="0.1214%" height="15" fill="rgb(225,31,38)" fg:x="1551" fg:w="2"/><text x="94.4212%" y="350.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2355) (3 samples, 0.18%)</title><rect x="94.2927%" y="292" width="0.1821%" height="15" fill="rgb(250,208,3)" fg:x="1553" fg:w="3"/><text x="94.5427%" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:430) (2 samples, 0.12%)</title><rect x="94.3534%" y="308" width="0.1214%" height="15" fill="rgb(246,54,23)" fg:x="1554" fg:w="2"/><text x="94.6034%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (15 samples, 0.91%)</title><rect x="93.8069%" y="244" width="0.9107%" height="15" fill="rgb(243,76,11)" fg:x="1545" fg:w="15"/><text x="94.0569%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (14 samples, 0.85%)</title><rect x="93.8676%" y="260" width="0.8500%" height="15" fill="rgb(245,21,50)" fg:x="1546" fg:w="14"/><text x="94.1176%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2375) (7 samples, 0.43%)</title><rect x="94.2927%" y="276" width="0.4250%" height="15" fill="rgb(228,9,43)" fg:x="1553" fg:w="7"/><text x="94.5427%" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2356) (4 samples, 0.24%)</title><rect x="94.4748%" y="292" width="0.2429%" height="15" fill="rgb(208,100,47)" fg:x="1556" fg:w="4"/><text x="94.7248%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:326) (2 samples, 0.12%)</title><rect x="94.7177%" y="244" width="0.1214%" height="15" fill="rgb(232,26,8)" fg:x="1560" fg:w="2"/><text x="94.9677%" y="254.50"></text></g><g><title>norm (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="94.7177%" y="260" width="0.1214%" height="15" fill="rgb(216,166,38)" fg:x="1560" fg:w="2"/><text x="94.9677%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:426) (31 samples, 1.88%)</title><rect x="93.0176%" y="196" width="1.8822%" height="15" fill="rgb(251,202,51)" fg:x="1532" fg:w="31"/><text x="93.2676%" y="206.50">_..</text></g><g><title>get_eef_position (omnigibson/robots/manipulation_robot.py:701) (31 samples, 1.88%)</title><rect x="93.0176%" y="212" width="1.8822%" height="15" fill="rgb(254,216,34)" fg:x="1532" fg:w="31"/><text x="93.2676%" y="222.50">g..</text></g><g><title>get_position (omnigibson/prims/xform_prim.py:220) (30 samples, 1.82%)</title><rect x="93.0783%" y="228" width="1.8215%" height="15" fill="rgb(251,32,27)" fg:x="1533" fg:w="30"/><text x="93.3283%" y="238.50">g..</text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (5 samples, 0.30%)</title><rect x="94.9605%" y="244" width="0.3036%" height="15" fill="rgb(208,127,28)" fg:x="1564" fg:w="5"/><text x="95.2105%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (4 samples, 0.24%)</title><rect x="95.0213%" y="260" width="0.2429%" height="15" fill="rgb(224,137,22)" fg:x="1565" fg:w="4"/><text x="95.2713%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (2 samples, 0.12%)</title><rect x="95.1427%" y="276" width="0.1214%" height="15" fill="rgb(254,70,32)" fg:x="1567" fg:w="2"/><text x="95.3927%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="95.1427%" y="292" width="0.1214%" height="15" fill="rgb(229,75,37)" fg:x="1567" fg:w="2"/><text x="95.3927%" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (3 samples, 0.18%)</title><rect x="95.4463%" y="276" width="0.1821%" height="15" fill="rgb(252,64,23)" fg:x="1572" fg:w="3"/><text x="95.6963%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="95.4463%" y="292" width="0.1821%" height="15" fill="rgb(232,162,48)" fg:x="1572" fg:w="3"/><text x="95.6963%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (3 samples, 0.18%)</title><rect x="95.4463%" y="308" width="0.1821%" height="15" fill="rgb(246,160,12)" fg:x="1572" fg:w="3"/><text x="95.6963%" y="318.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (7 samples, 0.43%)</title><rect x="95.2641%" y="244" width="0.4250%" height="15" fill="rgb(247,166,0)" fg:x="1569" fg:w="7"/><text x="95.5141%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (6 samples, 0.36%)</title><rect x="95.3248%" y="260" width="0.3643%" height="15" fill="rgb(249,219,21)" fg:x="1570" fg:w="6"/><text x="95.5748%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:427) (16 samples, 0.97%)</title><rect x="94.8998%" y="196" width="0.9715%" height="15" fill="rgb(205,209,3)" fg:x="1563" fg:w="16"/><text x="95.1498%" y="206.50"></text></g><g><title>get_eef_orientation (omnigibson/robots/manipulation_robot.py:714) (16 samples, 0.97%)</title><rect x="94.8998%" y="212" width="0.9715%" height="15" fill="rgb(243,44,1)" fg:x="1563" fg:w="16"/><text x="95.1498%" y="222.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:238) (16 samples, 0.97%)</title><rect x="94.8998%" y="228" width="0.9715%" height="15" fill="rgb(206,159,16)" fg:x="1563" fg:w="16"/><text x="95.1498%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:331) (2 samples, 0.12%)</title><rect x="95.7498%" y="244" width="0.1214%" height="15" fill="rgb(244,77,30)" fg:x="1577" fg:w="2"/><text x="95.9998%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (2 samples, 0.12%)</title><rect x="95.7498%" y="260" width="0.1214%" height="15" fill="rgb(218,69,12)" fg:x="1577" fg:w="2"/><text x="95.9998%" y="270.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (2 samples, 0.12%)</title><rect x="95.7498%" y="276" width="0.1214%" height="15" fill="rgb(212,87,7)" fg:x="1577" fg:w="2"/><text x="95.9998%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (6 samples, 0.36%)</title><rect x="95.8713%" y="244" width="0.3643%" height="15" fill="rgb(245,114,25)" fg:x="1579" fg:w="6"/><text x="96.1213%" y="254.50"></text></g><g><title>get_world_poses (core/prims/rigid_prim_view.py:423) (3 samples, 0.18%)</title><rect x="96.0534%" y="260" width="0.1821%" height="15" fill="rgb(210,61,42)" fg:x="1582" fg:w="3"/><text x="96.3034%" y="270.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (3 samples, 0.18%)</title><rect x="96.0534%" y="276" width="0.1821%" height="15" fill="rgb(211,52,33)" fg:x="1582" fg:w="3"/><text x="96.3034%" y="286.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (3 samples, 0.18%)</title><rect x="96.0534%" y="292" width="0.1821%" height="15" fill="rgb(234,58,33)" fg:x="1582" fg:w="3"/><text x="96.3034%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (2 samples, 0.12%)</title><rect x="96.2356%" y="244" width="0.1214%" height="15" fill="rgb(220,115,36)" fg:x="1585" fg:w="2"/><text x="96.4856%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="96.2356%" y="260" width="0.1214%" height="15" fill="rgb(243,153,54)" fg:x="1585" fg:w="2"/><text x="96.4856%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (2 samples, 0.12%)</title><rect x="96.2356%" y="276" width="0.1214%" height="15" fill="rgb(251,47,18)" fg:x="1585" fg:w="2"/><text x="96.4856%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="96.2356%" y="292" width="0.1214%" height="15" fill="rgb(242,102,42)" fg:x="1585" fg:w="2"/><text x="96.4856%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (2 samples, 0.12%)</title><rect x="96.2356%" y="308" width="0.1214%" height="15" fill="rgb(234,31,38)" fg:x="1585" fg:w="2"/><text x="96.4856%" y="318.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:728) (10 samples, 0.61%)</title><rect x="95.8713%" y="228" width="0.6072%" height="15" fill="rgb(221,117,51)" fg:x="1579" fg:w="10"/><text x="96.1213%" y="238.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:729) (2 samples, 0.12%)</title><rect x="96.4784%" y="228" width="0.1214%" height="15" fill="rgb(212,20,18)" fg:x="1589" fg:w="2"/><text x="96.7284%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:650) (4 samples, 0.24%)</title><rect x="96.6606%" y="244" width="0.2429%" height="15" fill="rgb(245,133,36)" fg:x="1592" fg:w="4"/><text x="96.9106%" y="254.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:459) (4 samples, 0.24%)</title><rect x="96.6606%" y="260" width="0.2429%" height="15" fill="rgb(212,6,19)" fg:x="1592" fg:w="4"/><text x="96.9106%" y="270.50"></text></g><g><title>quat2mat (omnigibson/utils/transform_utils.py:475) (4 samples, 0.24%)</title><rect x="96.6606%" y="276" width="0.2429%" height="15" fill="rgb(218,1,36)" fg:x="1592" fg:w="4"/><text x="96.9106%" y="286.50"></text></g><g><title>mat2pose (omnigibson/utils/transform_utils.py:378) (3 samples, 0.18%)</title><rect x="96.9642%" y="260" width="0.1821%" height="15" fill="rgb(246,84,54)" fg:x="1597" fg:w="3"/><text x="97.2142%" y="270.50"></text></g><g><title>mat2quat (omnigibson/utils/transform_utils.py:392) (3 samples, 0.18%)</title><rect x="96.9642%" y="276" width="0.1821%" height="15" fill="rgb(242,110,6)" fg:x="1597" fg:w="3"/><text x="97.2142%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:428) (22 samples, 1.34%)</title><rect x="95.8713%" y="196" width="1.3358%" height="15" fill="rgb(214,47,5)" fg:x="1579" fg:w="22"/><text x="96.1213%" y="206.50"></text></g><g><title>get_relative_eef_position (omnigibson/robots/manipulation_robot.py:744) (22 samples, 1.34%)</title><rect x="95.8713%" y="212" width="1.3358%" height="15" fill="rgb(218,159,25)" fg:x="1579" fg:w="22"/><text x="96.1213%" y="222.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:730) (10 samples, 0.61%)</title><rect x="96.5999%" y="228" width="0.6072%" height="15" fill="rgb(215,211,28)" fg:x="1591" fg:w="10"/><text x="96.8499%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:654) (5 samples, 0.30%)</title><rect x="96.9035%" y="244" width="0.3036%" height="15" fill="rgb(238,59,32)" fg:x="1596" fg:w="5"/><text x="97.1535%" y="254.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:320) (2 samples, 0.12%)</title><rect x="97.2678%" y="244" width="0.1214%" height="15" fill="rgb(226,82,3)" fg:x="1602" fg:w="2"/><text x="97.5178%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:513) (2 samples, 0.12%)</title><rect x="97.2678%" y="260" width="0.1214%" height="15" fill="rgb(240,164,32)" fg:x="1602" fg:w="2"/><text x="97.5178%" y="270.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:226) (2 samples, 0.12%)</title><rect x="97.2678%" y="276" width="0.1214%" height="15" fill="rgb(232,46,7)" fg:x="1602" fg:w="2"/><text x="97.5178%" y="286.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:323) (4 samples, 0.24%)</title><rect x="97.3892%" y="244" width="0.2429%" height="15" fill="rgb(229,129,53)" fg:x="1604" fg:w="4"/><text x="97.6392%" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2374) (2 samples, 0.12%)</title><rect x="97.8142%" y="276" width="0.1214%" height="15" fill="rgb(234,188,29)" fg:x="1611" fg:w="2"/><text x="98.0642%" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:180) (2 samples, 0.12%)</title><rect x="97.8142%" y="292" width="0.1214%" height="15" fill="rgb(246,141,4)" fg:x="1611" fg:w="2"/><text x="98.0642%" y="302.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2489) (2 samples, 0.12%)</title><rect x="97.8142%" y="308" width="0.1214%" height="15" fill="rgb(229,23,39)" fg:x="1611" fg:w="2"/><text x="98.0642%" y="318.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:84) (2 samples, 0.12%)</title><rect x="97.8142%" y="324" width="0.1214%" height="15" fill="rgb(206,12,3)" fg:x="1611" fg:w="2"/><text x="98.0642%" y="334.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:325) (8 samples, 0.49%)</title><rect x="97.6321%" y="244" width="0.4857%" height="15" fill="rgb(252,226,20)" fg:x="1608" fg:w="8"/><text x="97.8821%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (8 samples, 0.49%)</title><rect x="97.6321%" y="260" width="0.4857%" height="15" fill="rgb(216,123,35)" fg:x="1608" fg:w="8"/><text x="97.8821%" y="270.50"></text></g><g><title>isclose (numpy/core/numeric.py:2375) (3 samples, 0.18%)</title><rect x="97.9356%" y="276" width="0.1821%" height="15" fill="rgb(212,68,40)" fg:x="1613" fg:w="3"/><text x="98.1856%" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2355) (3 samples, 0.18%)</title><rect x="97.9356%" y="292" width="0.1821%" height="15" fill="rgb(254,125,32)" fg:x="1613" fg:w="3"/><text x="98.1856%" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:430) (2 samples, 0.12%)</title><rect x="97.9964%" y="308" width="0.1214%" height="15" fill="rgb(253,97,22)" fg:x="1614" fg:w="2"/><text x="98.2464%" y="318.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:728) (17 samples, 1.03%)</title><rect x="97.2070%" y="228" width="1.0322%" height="15" fill="rgb(241,101,14)" fg:x="1601" fg:w="17"/><text x="97.4570%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:1006) (2 samples, 0.12%)</title><rect x="98.2392%" y="244" width="0.1214%" height="15" fill="rgb(238,103,29)" fg:x="1618" fg:w="2"/><text x="98.4892%" y="254.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (2 samples, 0.12%)</title><rect x="98.2392%" y="260" width="0.1214%" height="15" fill="rgb(233,195,47)" fg:x="1618" fg:w="2"/><text x="98.4892%" y="270.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:729) (3 samples, 0.18%)</title><rect x="98.2392%" y="228" width="0.1821%" height="15" fill="rgb(246,218,30)" fg:x="1618" fg:w="3"/><text x="98.4892%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:650) (5 samples, 0.30%)</title><rect x="98.4214%" y="244" width="0.3036%" height="15" fill="rgb(219,145,47)" fg:x="1621" fg:w="5"/><text x="98.6714%" y="254.50"></text></g><g><title>pose2mat (omnigibson/utils/transform_utils.py:459) (4 samples, 0.24%)</title><rect x="98.4821%" y="260" width="0.2429%" height="15" fill="rgb(243,12,26)" fg:x="1622" fg:w="4"/><text x="98.7321%" y="270.50"></text></g><g><title>quat2mat (omnigibson/utils/transform_utils.py:475) (2 samples, 0.12%)</title><rect x="98.6035%" y="276" width="0.1214%" height="15" fill="rgb(214,87,16)" fg:x="1624" fg:w="2"/><text x="98.8535%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:429) (28 samples, 1.70%)</title><rect x="97.2070%" y="196" width="1.7001%" height="15" fill="rgb(208,99,42)" fg:x="1601" fg:w="28"/><text x="97.4570%" y="206.50"></text></g><g><title>get_relative_eef_orientation (omnigibson/robots/manipulation_robot.py:756) (28 samples, 1.70%)</title><rect x="97.2070%" y="212" width="1.7001%" height="15" fill="rgb(253,99,2)" fg:x="1601" fg:w="28"/><text x="97.4570%" y="222.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:730) (8 samples, 0.49%)</title><rect x="98.4214%" y="228" width="0.4857%" height="15" fill="rgb(220,168,23)" fg:x="1621" fg:w="8"/><text x="98.6714%" y="238.50"></text></g><g><title>relative_pose_transform (omnigibson/utils/transform_utils.py:654) (3 samples, 0.18%)</title><rect x="98.7250%" y="244" width="0.1821%" height="15" fill="rgb(242,38,24)" fg:x="1626" fg:w="3"/><text x="98.9750%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:285) (224 samples, 13.60%)</title><rect x="85.4888%" y="180" width="13.6005%" height="15" fill="rgb(225,182,9)" fg:x="1408" fg:w="224"/><text x="85.7388%" y="190.50">_get_proprioception_d..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:431) (2 samples, 0.12%)</title><rect x="98.9678%" y="196" width="0.1214%" height="15" fill="rgb(243,178,37)" fg:x="1630" fg:w="2"/><text x="99.2178%" y="206.50"></text></g><g><title>gripper_control_idx (omnigibson/robots/fetch.py:407) (2 samples, 0.12%)</title><rect x="98.9678%" y="212" width="0.1214%" height="15" fill="rgb(232,139,19)" fg:x="1630" fg:w="2"/><text x="99.2178%" y="222.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1444) (2 samples, 0.12%)</title><rect x="99.0893%" y="212" width="0.1214%" height="15" fill="rgb(225,201,24)" fg:x="1632" fg:w="2"/><text x="99.3393%" y="222.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1450) (2 samples, 0.12%)</title><rect x="99.2714%" y="212" width="0.1214%" height="15" fill="rgb(221,47,46)" fg:x="1635" fg:w="2"/><text x="99.5214%" y="222.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:288) (6 samples, 0.36%)</title><rect x="99.0893%" y="180" width="0.3643%" height="15" fill="rgb(249,23,13)" fg:x="1632" fg:w="6"/><text x="99.3393%" y="190.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:888) (6 samples, 0.36%)</title><rect x="99.0893%" y="196" width="0.3643%" height="15" fill="rgb(219,9,5)" fg:x="1632" fg:w="6"/><text x="99.3393%" y="206.50"></text></g><g><title>get_proprioception (omnigibson/robots/robot_base.py:329) (232 samples, 14.09%)</title><rect x="85.4888%" y="164" width="14.0862%" height="15" fill="rgb(254,171,16)" fg:x="1408" fg:w="232"/><text x="85.7388%" y="174.50">get_proprioception (o..</text></g><g><title>get_obs (omnigibson/envs/env_base.py:485) (233 samples, 14.15%)</title><rect x="85.4888%" y="132" width="14.1469%" height="15" fill="rgb(230,171,20)" fg:x="1408" fg:w="233"/><text x="85.7388%" y="142.50">get_obs (omnigibson/e..</text></g><g><title>get_obs (omnigibson/robots/robot_base.py:319) (233 samples, 14.15%)</title><rect x="85.4888%" y="148" width="14.1469%" height="15" fill="rgb(210,71,41)" fg:x="1408" fg:w="233"/><text x="85.7388%" y="158.50">get_obs (omnigibson/r..</text></g><g><title>_post_step (omnigibson/envs/env_base.py:554) (239 samples, 14.51%)</title><rect x="85.2459%" y="116" width="14.5112%" height="15" fill="rgb(206,173,20)" fg:x="1404" fg:w="239"/><text x="85.4959%" y="126.50">_post_step (omnigibson..</text></g><g><title>get_obs (omnigibson/envs/env_base.py:489) (2 samples, 0.12%)</title><rect x="99.6357%" y="132" width="0.1214%" height="15" fill="rgb(233,88,34)" fg:x="1641" fg:w="2"/><text x="99.8857%" y="142.50"></text></g><g><title>wrapper (functools.py:889) (2 samples, 0.12%)</title><rect x="99.6357%" y="148" width="0.1214%" height="15" fill="rgb(223,209,46)" fg:x="1641" fg:w="2"/><text x="99.8857%" y="158.50"></text></g><g><title>main (test_multiple_envs.py:59) (1,643 samples, 99.76%)</title><rect x="0.1821%" y="84" width="99.7571%" height="15" fill="rgb(250,43,18)" fg:x="3" fg:w="1643"/><text x="0.4321%" y="94.50">main (test_multiple_envs.py:59)</text></g><g><title>step (omnigibson/envs/vec_env_base.py:18) (242 samples, 14.69%)</title><rect x="85.2459%" y="100" width="14.6934%" height="15" fill="rgb(208,13,10)" fg:x="1404" fg:w="242"/><text x="85.4959%" y="110.50">step (omnigibson/envs/..</text></g><g><title>_post_step (omnigibson/envs/env_base.py:561) (3 samples, 0.18%)</title><rect x="99.7571%" y="116" width="0.1821%" height="15" fill="rgb(212,200,36)" fg:x="1643" fg:w="3"/><text x="100.0071%" y="126.50"></text></g><g><title>step (omnigibson/tasks/task_base.py:334) (2 samples, 0.12%)</title><rect x="99.8179%" y="132" width="0.1214%" height="15" fill="rgb(225,90,30)" fg:x="1644" fg:w="2"/><text x="100.0679%" y="142.50"></text></g><g><title>deepcopy (copy.py:146) (2 samples, 0.12%)</title><rect x="99.8179%" y="148" width="0.1214%" height="15" fill="rgb(236,182,39)" fg:x="1644" fg:w="2"/><text x="100.0679%" y="158.50"></text></g><g><title>_deepcopy_dict (copy.py:231) (2 samples, 0.12%)</title><rect x="99.8179%" y="164" width="0.1214%" height="15" fill="rgb(212,144,35)" fg:x="1644" fg:w="2"/><text x="100.0679%" y="174.50"></text></g><g><title>all (1,647 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(228,63,44)" fg:x="0" fg:w="1647"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test_multiple_envs.py:80) (1,647 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(228,109,6)" fg:x="0" fg:w="1647"/><text x="0.2500%" y="78.50">&lt;module&gt; (test_multiple_envs.py:80)</text></g></svg></svg>