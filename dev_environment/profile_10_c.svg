<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="394" onload="init(evt)" viewBox="0 0 1200 394" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="394" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile_10_c.svg --pid 10230</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="383.00"> </text><svg id="frames" x="10" width="1180" total_samples="3524"><g><title>main (test_multiple_envs.py:56) (8 samples, 0.23%)</title><rect x="0.0000%" y="84" width="0.2270%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8"/><text x="0.2500%" y="94.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:378) (4 samples, 0.11%)</title><rect x="0.3121%" y="148" width="0.1135%" height="15" fill="rgb(217,0,24)" fg:x="11" fg:w="4"/><text x="0.5621%" y="158.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:381) (44 samples, 1.25%)</title><rect x="0.4257%" y="148" width="1.2486%" height="15" fill="rgb(221,193,54)" fg:x="15" fg:w="44"/><text x="0.6757%" y="158.50"></text></g><g><title>_update_goal (omnigibson/controllers/joint_controller.py:113) (6 samples, 0.17%)</title><rect x="1.7594%" y="164" width="0.1703%" height="15" fill="rgb(248,212,6)" fg:x="62" fg:w="6"/><text x="2.0094%" y="174.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:728) (6 samples, 0.17%)</title><rect x="1.7594%" y="180" width="0.1703%" height="15" fill="rgb(208,68,35)" fg:x="62" fg:w="6"/><text x="2.0094%" y="190.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:747) (6 samples, 0.17%)</title><rect x="1.7594%" y="196" width="0.1703%" height="15" fill="rgb(232,128,0)" fg:x="62" fg:w="6"/><text x="2.0094%" y="206.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:14) (61 samples, 1.73%)</title><rect x="0.2554%" y="100" width="1.7310%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="61"/><text x="0.5054%" y="110.50"></text></g><g><title>_pre_step (omnigibson/envs/env_base.py:538) (59 samples, 1.67%)</title><rect x="0.3121%" y="116" width="1.6742%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="59"/><text x="0.5621%" y="126.50"></text></g><g><title>apply_action (omnigibson/objects/controllable_object.py:315) (59 samples, 1.67%)</title><rect x="0.3121%" y="132" width="1.6742%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="59"/><text x="0.5621%" y="142.50"></text></g><g><title>update_goal (omnigibson/controllers/controller_base.py:204) (11 samples, 0.31%)</title><rect x="1.6742%" y="148" width="0.3121%" height="15" fill="rgb(220,122,19)" fg:x="59" fg:w="11"/><text x="1.9242%" y="158.50"></text></g><g><title>_step (core/physics_context/physics_context.py:573) (16 samples, 0.45%)</title><rect x="2.0999%" y="148" width="0.4540%" height="15" fill="rgb(250,228,42)" fg:x="74" fg:w="16"/><text x="2.3499%" y="158.50"></text></g><g><title>_articulation_view (omnigibson/prims/entity_prim.py:360) (4 samples, 0.11%)</title><rect x="60.1022%" y="212" width="0.1135%" height="15" fill="rgb(240,193,28)" fg:x="2118" fg:w="4"/><text x="60.3522%" y="222.50"></text></g><g><title>check (tensors/impl/api.py:828) (4 samples, 0.11%)</title><rect x="60.1022%" y="228" width="0.1135%" height="15" fill="rgb(216,20,37)" fg:x="2118" fg:w="4"/><text x="60.3522%" y="238.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1449) (6 samples, 0.17%)</title><rect x="60.3575%" y="212" width="0.1703%" height="15" fill="rgb(206,188,39)" fg:x="2127" fg:w="6"/><text x="60.6075%" y="222.50"></text></g><g><title>clone_tensor (core/utils/numpy/tensor.py:43) (5 samples, 0.14%)</title><rect x="60.3859%" y="228" width="0.1419%" height="15" fill="rgb(217,207,13)" fg:x="2128" fg:w="5"/><text x="60.6359%" y="238.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (4 samples, 0.11%)</title><rect x="60.5562%" y="212" width="0.1135%" height="15" fill="rgb(231,73,38)" fg:x="2134" fg:w="4"/><text x="60.8062%" y="222.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.11%)</title><rect x="60.5562%" y="228" width="0.1135%" height="15" fill="rgb(225,20,46)" fg:x="2134" fg:w="4"/><text x="60.8062%" y="238.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:832) (23 samples, 0.65%)</title><rect x="60.0454%" y="196" width="0.6527%" height="15" fill="rgb(210,31,41)" fg:x="2116" fg:w="23"/><text x="60.2954%" y="206.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:479) (4 samples, 0.11%)</title><rect x="61.0386%" y="212" width="0.1135%" height="15" fill="rgb(221,200,47)" fg:x="2151" fg:w="4"/><text x="61.2886%" y="222.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.11%)</title><rect x="61.0386%" y="228" width="0.1135%" height="15" fill="rgb(226,26,5)" fg:x="2151" fg:w="4"/><text x="61.2886%" y="238.50"></text></g><g><title>set_dof_positions (tensors/impl/api.py:445) (10 samples, 0.28%)</title><rect x="61.2089%" y="228" width="0.2838%" height="15" fill="rgb(249,33,26)" fg:x="2157" fg:w="10"/><text x="61.4589%" y="238.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (4 samples, 0.11%)</title><rect x="61.3791%" y="244" width="0.1135%" height="15" fill="rgb(235,183,28)" fg:x="2163" fg:w="4"/><text x="61.6291%" y="254.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:481) (20 samples, 0.57%)</title><rect x="61.1521%" y="212" width="0.5675%" height="15" fill="rgb(221,5,38)" fg:x="2155" fg:w="20"/><text x="61.4021%" y="222.50"></text></g><g><title>set_dof_positions (tensors/impl/api.py:448) (5 samples, 0.14%)</title><rect x="61.5778%" y="228" width="0.1419%" height="15" fill="rgb(247,18,42)" fg:x="2170" fg:w="5"/><text x="61.8278%" y="238.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:472) (5 samples, 0.14%)</title><rect x="61.9750%" y="244" width="0.1419%" height="15" fill="rgb(241,131,45)" fg:x="2184" fg:w="5"/><text x="62.2250%" y="254.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (4 samples, 0.11%)</title><rect x="62.0034%" y="260" width="0.1135%" height="15" fill="rgb(249,31,29)" fg:x="2185" fg:w="4"/><text x="62.2534%" y="270.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:473) (5 samples, 0.14%)</title><rect x="62.1169%" y="244" width="0.1419%" height="15" fill="rgb(225,111,53)" fg:x="2189" fg:w="5"/><text x="62.3669%" y="254.50"></text></g><g><title>set_joint_positions (omnigibson/prims/entity_prim.py:636) (55 samples, 1.56%)</title><rect x="60.7548%" y="196" width="1.5607%" height="15" fill="rgb(238,160,17)" fg:x="2141" fg:w="55"/><text x="61.0048%" y="206.50"></text></g><g><title>set_joint_positions (omnigibson/utils/deprecated_utils.py:485) (21 samples, 0.60%)</title><rect x="61.7196%" y="212" width="0.5959%" height="15" fill="rgb(214,148,48)" fg:x="2175" fg:w="21"/><text x="61.9696%" y="222.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:908) (15 samples, 0.43%)</title><rect x="61.8899%" y="228" width="0.4257%" height="15" fill="rgb(232,36,49)" fg:x="2181" fg:w="15"/><text x="62.1399%" y="238.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:281) (86 samples, 2.44%)</title><rect x="59.9603%" y="180" width="2.4404%" height="15" fill="rgb(209,103,24)" fg:x="2113" fg:w="86"/><text x="60.2103%" y="190.50">st..</text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:850) (10 samples, 0.28%)</title><rect x="62.4291%" y="196" width="0.2838%" height="15" fill="rgb(229,88,8)" fg:x="2200" fg:w="10"/><text x="62.6791%" y="206.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:542) (4 samples, 0.11%)</title><rect x="62.7980%" y="212" width="0.1135%" height="15" fill="rgb(213,181,19)" fg:x="2213" fg:w="4"/><text x="63.0480%" y="222.50"></text></g><g><title>set_dof_velocities (tensors/impl/api.py:454) (5 samples, 0.14%)</title><rect x="62.9966%" y="228" width="0.1419%" height="15" fill="rgb(254,191,54)" fg:x="2220" fg:w="5"/><text x="63.2466%" y="238.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:547) (13 samples, 0.37%)</title><rect x="62.9398%" y="212" width="0.3689%" height="15" fill="rgb(241,83,37)" fg:x="2218" fg:w="13"/><text x="63.1898%" y="222.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:282) (45 samples, 1.28%)</title><rect x="62.4007%" y="180" width="1.2770%" height="15" fill="rgb(233,36,39)" fg:x="2199" fg:w="45"/><text x="62.6507%" y="190.50"></text></g><g><title>set_joint_velocities (omnigibson/prims/entity_prim.py:667) (34 samples, 0.96%)</title><rect x="62.7128%" y="196" width="0.9648%" height="15" fill="rgb(226,3,54)" fg:x="2210" fg:w="34"/><text x="62.9628%" y="206.50"></text></g><g><title>set_joint_velocities (omnigibson/utils/deprecated_utils.py:551) (13 samples, 0.37%)</title><rect x="63.3087%" y="212" width="0.3689%" height="15" fill="rgb(245,192,40)" fg:x="2231" fg:w="13"/><text x="63.5587%" y="222.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1033) (8 samples, 0.23%)</title><rect x="63.4506%" y="228" width="0.2270%" height="15" fill="rgb(238,167,29)" fg:x="2236" fg:w="8"/><text x="63.7006%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:950) (29 samples, 0.82%)</title><rect x="63.7344%" y="196" width="0.8229%" height="15" fill="rgb(232,182,51)" fg:x="2246" fg:w="29"/><text x="63.9844%" y="206.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (20 samples, 0.57%)</title><rect x="63.9898%" y="212" width="0.5675%" height="15" fill="rgb(231,60,39)" fg:x="2255" fg:w="20"/><text x="64.2398%" y="222.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (17 samples, 0.48%)</title><rect x="64.0749%" y="228" width="0.4824%" height="15" fill="rgb(208,69,12)" fg:x="2258" fg:w="17"/><text x="64.3249%" y="238.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (17 samples, 0.48%)</title><rect x="64.0749%" y="244" width="0.4824%" height="15" fill="rgb(235,93,37)" fg:x="2258" fg:w="17"/><text x="64.3249%" y="254.50"></text></g><g><title>kinematic_only (omnigibson/prims/rigid_prim.py:498) (11 samples, 0.31%)</title><rect x="64.5857%" y="228" width="0.3121%" height="15" fill="rgb(213,116,39)" fg:x="2276" fg:w="11"/><text x="64.8357%" y="238.50"></text></g><g><title>get_attribute (omnigibson/prims/prim_base.py:222) (11 samples, 0.31%)</title><rect x="64.5857%" y="244" width="0.3121%" height="15" fill="rgb(222,207,29)" fg:x="2276" fg:w="11"/><text x="64.8357%" y="254.50"></text></g><g><title>set_position_orientation (omnigibson/prims/entity_prim.py:924) (12 samples, 0.34%)</title><rect x="64.5857%" y="196" width="0.3405%" height="15" fill="rgb(206,96,30)" fg:x="2276" fg:w="12"/><text x="64.8357%" y="206.50"></text></g><g><title>kinematic_only (omnigibson/prims/entity_prim.py:1249) (12 samples, 0.34%)</title><rect x="64.5857%" y="212" width="0.3405%" height="15" fill="rgb(218,138,4)" fg:x="2276" fg:w="12"/><text x="64.8357%" y="222.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1728) (19 samples, 0.54%)</title><rect x="65.1532%" y="212" width="0.5392%" height="15" fill="rgb(250,191,14)" fg:x="2296" fg:w="19"/><text x="65.4032%" y="222.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (16 samples, 0.45%)</title><rect x="65.2384%" y="228" width="0.4540%" height="15" fill="rgb(239,60,40)" fg:x="2299" fg:w="16"/><text x="65.4884%" y="238.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (12 samples, 0.34%)</title><rect x="65.3519%" y="244" width="0.3405%" height="15" fill="rgb(206,27,48)" fg:x="2303" fg:w="12"/><text x="65.6019%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (11 samples, 0.31%)</title><rect x="65.3802%" y="260" width="0.3121%" height="15" fill="rgb(225,35,8)" fg:x="2304" fg:w="11"/><text x="65.6302%" y="270.50"></text></g><g><title>assign_pose (core/utils/numpy/transformations.py:73) (9 samples, 0.26%)</title><rect x="65.7208%" y="228" width="0.2554%" height="15" fill="rgb(250,213,24)" fg:x="2316" fg:w="9"/><text x="65.9708%" y="238.50"></text></g><g><title>wxyz2xyzw (core/utils/numpy/rotations.py:195) (9 samples, 0.26%)</title><rect x="65.7208%" y="244" width="0.2554%" height="15" fill="rgb(247,123,22)" fg:x="2316" fg:w="9"/><text x="65.9708%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (9 samples, 0.26%)</title><rect x="65.7208%" y="260" width="0.2554%" height="15" fill="rgb(231,138,38)" fg:x="2316" fg:w="9"/><text x="65.9708%" y="270.50"></text></g><g><title>assign_pose (core/utils/numpy/transformations.py:74) (6 samples, 0.17%)</title><rect x="65.9762%" y="228" width="0.1703%" height="15" fill="rgb(231,145,46)" fg:x="2325" fg:w="6"/><text x="66.2262%" y="238.50"></text></g><g><title>wxyz2xyzw (core/utils/numpy/rotations.py:195) (4 samples, 0.11%)</title><rect x="66.0329%" y="244" width="0.1135%" height="15" fill="rgb(251,118,11)" fg:x="2327" fg:w="4"/><text x="66.2829%" y="254.50"></text></g><g><title>roll (&lt;__array_function__ internals&gt;:180) (4 samples, 0.11%)</title><rect x="66.0329%" y="260" width="0.1135%" height="15" fill="rgb(217,147,25)" fg:x="2327" fg:w="4"/><text x="66.2829%" y="270.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1737) (20 samples, 0.57%)</title><rect x="65.7208%" y="212" width="0.5675%" height="15" fill="rgb(247,81,37)" fg:x="2316" fg:w="20"/><text x="65.9708%" y="222.50"></text></g><g><title>set_root_transforms (tensors/impl/api.py:403) (4 samples, 0.11%)</title><rect x="66.3167%" y="228" width="0.1135%" height="15" fill="rgb(209,12,38)" fg:x="2337" fg:w="4"/><text x="66.5667%" y="238.50"></text></g><g><title>set_root_transforms (tensors/impl/api.py:405) (8 samples, 0.23%)</title><rect x="66.4302%" y="228" width="0.2270%" height="15" fill="rgb(227,1,9)" fg:x="2341" fg:w="8"/><text x="66.6802%" y="238.50"></text></g><g><title>set_position_orientation (omnigibson/prims/entity_prim.py:938) (60 samples, 1.70%)</title><rect x="65.1249%" y="196" width="1.7026%" height="15" fill="rgb(248,47,43)" fg:x="2295" fg:w="60"/><text x="65.3749%" y="206.50"></text></g><g><title>set_world_poses (core/articulations/articulation_view.py:1740) (19 samples, 0.54%)</title><rect x="66.2883%" y="212" width="0.5392%" height="15" fill="rgb(221,10,30)" fg:x="2336" fg:w="19"/><text x="66.5383%" y="222.50"></text></g><g><title>step (omnigibson/robots/robot_base.py:283) (112 samples, 3.18%)</title><rect x="63.6776%" y="180" width="3.1782%" height="15" fill="rgb(210,229,1)" fg:x="2244" fg:w="112"/><text x="63.9276%" y="190.50">ste..</text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:378) (5 samples, 0.14%)</title><rect x="66.9126%" y="212" width="0.1419%" height="15" fill="rgb(222,148,37)" fg:x="2358" fg:w="5"/><text x="67.1626%" y="222.50"></text></g><g><title>eef_links (omnigibson/robots/manipulation_robot.py:604) (4 samples, 0.11%)</title><rect x="67.2815%" y="244" width="0.1135%" height="15" fill="rgb(234,67,33)" fg:x="2371" fg:w="4"/><text x="67.5315%" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (omnigibson/robots/manipulation_robot.py:604) (4 samples, 0.11%)</title><rect x="67.2815%" y="260" width="0.1135%" height="15" fill="rgb(247,98,35)" fg:x="2371" fg:w="4"/><text x="67.5315%" y="270.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:332) (19 samples, 0.54%)</title><rect x="66.8842%" y="196" width="0.5392%" height="15" fill="rgb(247,138,52)" fg:x="2357" fg:w="19"/><text x="67.1342%" y="206.50"></text></g><g><title>get_control_dict (omnigibson/robots/manipulation_robot.py:381) (13 samples, 0.37%)</title><rect x="67.0545%" y="212" width="0.3689%" height="15" fill="rgb(213,79,30)" fg:x="2363" fg:w="13"/><text x="67.3045%" y="222.50"></text></g><g><title>_add_arm_control_dict (omnigibson/robots/manipulation_robot.py:402) (8 samples, 0.23%)</title><rect x="67.1964%" y="228" width="0.2270%" height="15" fill="rgb(246,177,23)" fg:x="2368" fg:w="8"/><text x="67.4464%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:334) (4 samples, 0.11%)</title><rect x="67.4234%" y="196" width="0.1135%" height="15" fill="rgb(230,62,27)" fg:x="2376" fg:w="4"/><text x="67.6734%" y="206.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:509) (19 samples, 0.54%)</title><rect x="67.8490%" y="276" width="0.5392%" height="15" fill="rgb(216,154,8)" fg:x="2391" fg:w="19"/><text x="68.0990%" y="286.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:832) (18 samples, 0.51%)</title><rect x="67.8774%" y="292" width="0.5108%" height="15" fill="rgb(244,35,45)" fg:x="2392" fg:w="18"/><text x="68.1274%" y="302.50"></text></g><g><title>get_joint_positions (core/articulations/articulation_view.py:1451) (5 samples, 0.14%)</title><rect x="68.2463%" y="308" width="0.1419%" height="15" fill="rgb(251,115,12)" fg:x="2405" fg:w="5"/><text x="68.4963%" y="318.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.11%)</title><rect x="68.2747%" y="324" width="0.1135%" height="15" fill="rgb(240,54,50)" fg:x="2406" fg:w="4"/><text x="68.5247%" y="334.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (4 samples, 0.11%)</title><rect x="68.2747%" y="340" width="0.1135%" height="15" fill="rgb(233,84,52)" fg:x="2406" fg:w="4"/><text x="68.5247%" y="350.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:728) (36 samples, 1.02%)</title><rect x="67.7923%" y="244" width="1.0216%" height="15" fill="rgb(207,117,47)" fg:x="2389" fg:w="36"/><text x="68.0423%" y="254.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:747) (34 samples, 0.96%)</title><rect x="67.8490%" y="260" width="0.9648%" height="15" fill="rgb(249,43,39)" fg:x="2391" fg:w="34"/><text x="68.0990%" y="270.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:510) (15 samples, 0.43%)</title><rect x="68.3882%" y="276" width="0.4257%" height="15" fill="rgb(209,38,44)" fg:x="2410" fg:w="15"/><text x="68.6382%" y="286.50"></text></g><g><title>get_joint_velocities (omnigibson/prims/entity_prim.py:850) (15 samples, 0.43%)</title><rect x="68.3882%" y="292" width="0.4257%" height="15" fill="rgb(236,212,23)" fg:x="2410" fg:w="15"/><text x="68.6382%" y="302.50"></text></g><g><title>get_joint_velocities (core/articulations/articulation_view.py:1517) (6 samples, 0.17%)</title><rect x="68.6436%" y="308" width="0.1703%" height="15" fill="rgb(242,79,21)" fg:x="2419" fg:w="6"/><text x="68.8936%" y="318.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (6 samples, 0.17%)</title><rect x="68.6436%" y="324" width="0.1703%" height="15" fill="rgb(211,96,35)" fg:x="2419" fg:w="6"/><text x="68.8936%" y="334.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (6 samples, 0.17%)</title><rect x="68.6436%" y="340" width="0.1703%" height="15" fill="rgb(253,215,40)" fg:x="2419" fg:w="6"/><text x="68.8936%" y="350.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:166) (40 samples, 1.14%)</title><rect x="67.7072%" y="228" width="1.1351%" height="15" fill="rgb(211,81,21)" fg:x="2386" fg:w="40"/><text x="67.9572%" y="238.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:174) (5 samples, 0.14%)</title><rect x="68.9274%" y="228" width="0.1419%" height="15" fill="rgb(208,190,38)" fg:x="2429" fg:w="5"/><text x="69.1774%" y="238.50"></text></g><g><title>_broadcast_to (numpy/lib/stride_tricks.py:349) (4 samples, 0.11%)</title><rect x="69.5800%" y="324" width="0.1135%" height="15" fill="rgb(235,213,38)" fg:x="2452" fg:w="4"/><text x="69.8300%" y="334.50"></text></g><g><title>meshgrid (numpy/lib/function_base.py:4987) (20 samples, 0.57%)</title><rect x="69.3530%" y="260" width="0.5675%" height="15" fill="rgb(237,122,38)" fg:x="2444" fg:w="20"/><text x="69.6030%" y="270.50"></text></g><g><title>broadcast_arrays (&lt;__array_function__ internals&gt;:180) (19 samples, 0.54%)</title><rect x="69.3814%" y="276" width="0.5392%" height="15" fill="rgb(244,218,35)" fg:x="2445" fg:w="19"/><text x="69.6314%" y="286.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:546) (14 samples, 0.40%)</title><rect x="69.5233%" y="292" width="0.3973%" height="15" fill="rgb(240,68,47)" fg:x="2450" fg:w="14"/><text x="69.7733%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/stride_tricks.py:546) (14 samples, 0.40%)</title><rect x="69.5233%" y="308" width="0.3973%" height="15" fill="rgb(210,16,53)" fg:x="2450" fg:w="14"/><text x="69.7733%" y="318.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:183) (28 samples, 0.79%)</title><rect x="69.1544%" y="228" width="0.7946%" height="15" fill="rgb(235,124,12)" fg:x="2437" fg:w="28"/><text x="69.4044%" y="238.50"></text></g><g><title>meshgrid (&lt;__array_function__ internals&gt;:180) (26 samples, 0.74%)</title><rect x="69.2111%" y="244" width="0.7378%" height="15" fill="rgb(224,169,11)" fg:x="2439" fg:w="26"/><text x="69.4611%" y="254.50"></text></g><g><title>get_mass_matrices (core/articulations/articulation_view.py:3656) (14 samples, 0.40%)</title><rect x="70.3462%" y="308" width="0.3973%" height="15" fill="rgb(250,166,2)" fg:x="2479" fg:w="14"/><text x="70.5962%" y="318.50"></text></g><g><title>get_mass_matrices (tensors/impl/api.py:587) (14 samples, 0.40%)</title><rect x="70.3462%" y="324" width="0.3973%" height="15" fill="rgb(242,216,29)" fg:x="2479" fg:w="14"/><text x="70.5962%" y="334.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:184) (30 samples, 0.85%)</title><rect x="69.9489%" y="228" width="0.8513%" height="15" fill="rgb(230,116,27)" fg:x="2465" fg:w="30"/><text x="70.1989%" y="238.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:728) (29 samples, 0.82%)</title><rect x="69.9773%" y="244" width="0.8229%" height="15" fill="rgb(228,99,48)" fg:x="2466" fg:w="29"/><text x="70.2273%" y="254.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:747) (28 samples, 0.79%)</title><rect x="70.0057%" y="260" width="0.7946%" height="15" fill="rgb(253,11,6)" fg:x="2467" fg:w="28"/><text x="70.2557%" y="270.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:512) (28 samples, 0.79%)</title><rect x="70.0057%" y="276" width="0.7946%" height="15" fill="rgb(247,143,39)" fg:x="2467" fg:w="28"/><text x="70.2557%" y="286.50"></text></g><g><title>get_mass_matrix (omnigibson/prims/entity_prim.py:1320) (26 samples, 0.74%)</title><rect x="70.0624%" y="292" width="0.7378%" height="15" fill="rgb(236,97,10)" fg:x="2469" fg:w="26"/><text x="70.3124%" y="302.50"></text></g><g><title>get_generalized_gravity_forces (core/articulations/articulation_view.py:3792) (4 samples, 0.11%)</title><rect x="71.2259%" y="324" width="0.1135%" height="15" fill="rgb(233,208,19)" fg:x="2510" fg:w="4"/><text x="71.4759%" y="334.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:513) (16 samples, 0.45%)</title><rect x="70.9705%" y="276" width="0.4540%" height="15" fill="rgb(216,164,2)" fg:x="2501" fg:w="16"/><text x="71.2205%" y="286.50"></text></g><g><title>get_generalized_gravity_forces (omnigibson/robots/robot_base.py:494) (15 samples, 0.43%)</title><rect x="70.9989%" y="292" width="0.4257%" height="15" fill="rgb(220,129,5)" fg:x="2502" fg:w="15"/><text x="71.2489%" y="302.50"></text></g><g><title>get_generalized_gravity_forces (omnigibson/prims/entity_prim.py:1309) (12 samples, 0.34%)</title><rect x="71.0840%" y="308" width="0.3405%" height="15" fill="rgb(242,17,10)" fg:x="2505" fg:w="12"/><text x="71.3340%" y="318.50"></text></g><g><title>__getitem__ (omnigibson/utils/python_utils.py:728) (28 samples, 0.79%)</title><rect x="70.9421%" y="244" width="0.7946%" height="15" fill="rgb(242,107,0)" fg:x="2500" fg:w="28"/><text x="71.1921%" y="254.50"></text></g><g><title>get (omnigibson/utils/python_utils.py:747) (28 samples, 0.79%)</title><rect x="70.9421%" y="260" width="0.7946%" height="15" fill="rgb(251,28,31)" fg:x="2500" fg:w="28"/><text x="71.1921%" y="270.50"></text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:514) (11 samples, 0.31%)</title><rect x="71.4245%" y="276" width="0.3121%" height="15" fill="rgb(233,223,10)" fg:x="2517" fg:w="11"/><text x="71.6745%" y="286.50"></text></g><g><title>get_coriolis_and_centrifugal_forces (omnigibson/prims/entity_prim.py:1298) (10 samples, 0.28%)</title><rect x="71.4529%" y="292" width="0.2838%" height="15" fill="rgb(215,21,27)" fg:x="2518" fg:w="10"/><text x="71.7029%" y="302.50"></text></g><g><title>compute_control (omnigibson/controllers/joint_controller.py:188) (32 samples, 0.91%)</title><rect x="70.8854%" y="228" width="0.9081%" height="15" fill="rgb(232,23,21)" fg:x="2498" fg:w="32"/><text x="71.1354%" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:180) (4 samples, 0.11%)</title><rect x="72.3893%" y="292" width="0.1135%" height="15" fill="rgb(244,5,23)" fg:x="2551" fg:w="4"/><text x="72.6393%" y="302.50"></text></g><g><title>_update_grasping_state (omnigibson/controllers/multi_finger_gripper_controller.py:240) (13 samples, 0.37%)</title><rect x="72.1623%" y="244" width="0.3689%" height="15" fill="rgb(226,81,46)" fg:x="2543" fg:w="13"/><text x="72.4123%" y="254.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (9 samples, 0.26%)</title><rect x="72.2758%" y="260" width="0.2554%" height="15" fill="rgb(247,70,30)" fg:x="2547" fg:w="9"/><text x="72.5258%" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (9 samples, 0.26%)</title><rect x="72.2758%" y="276" width="0.2554%" height="15" fill="rgb(212,68,19)" fg:x="2547" fg:w="9"/><text x="72.5258%" y="286.50"></text></g><g><title>step (omnigibson/controllers/controller_base.py:274) (183 samples, 5.19%)</title><rect x="67.6788%" y="212" width="5.1930%" height="15" fill="rgb(240,187,13)" fg:x="2385" fg:w="183"/><text x="67.9288%" y="222.50">step (..</text></g><g><title>compute_control (omnigibson/controllers/multi_finger_gripper_controller.py:203) (30 samples, 0.85%)</title><rect x="72.0204%" y="228" width="0.8513%" height="15" fill="rgb(223,113,26)" fg:x="2538" fg:w="30"/><text x="72.2704%" y="238.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:94) (4 samples, 0.11%)</title><rect x="72.9569%" y="260" width="0.1135%" height="15" fill="rgb(206,192,2)" fg:x="2571" fg:w="4"/><text x="73.2069%" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:135) (6 samples, 0.17%)</title><rect x="72.9569%" y="244" width="0.1703%" height="15" fill="rgb(241,108,4)" fg:x="2571" fg:w="6"/><text x="73.2069%" y="254.50"></text></g><g><title>_clip (numpy/core/_methods.py:138) (4 samples, 0.11%)</title><rect x="73.1271%" y="244" width="0.1135%" height="15" fill="rgb(247,173,49)" fg:x="2577" fg:w="4"/><text x="73.3771%" y="254.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:246) (17 samples, 0.48%)</title><rect x="72.9285%" y="228" width="0.4824%" height="15" fill="rgb(224,114,35)" fg:x="2570" fg:w="17"/><text x="73.1785%" y="238.50"></text></g><g><title>_clip (numpy/core/_methods.py:160) (6 samples, 0.17%)</title><rect x="73.2406%" y="244" width="0.1703%" height="15" fill="rgb(245,159,27)" fg:x="2581" fg:w="6"/><text x="73.4906%" y="254.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:114) (5 samples, 0.14%)</title><rect x="73.2690%" y="260" width="0.1419%" height="15" fill="rgb(245,172,44)" fg:x="2582" fg:w="5"/><text x="73.5190%" y="270.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:247) (6 samples, 0.17%)</title><rect x="73.4109%" y="228" width="0.1703%" height="15" fill="rgb(236,23,11)" fg:x="2587" fg:w="6"/><text x="73.6609%" y="238.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:248) (6 samples, 0.17%)</title><rect x="73.5812%" y="228" width="0.1703%" height="15" fill="rgb(205,117,38)" fg:x="2593" fg:w="6"/><text x="73.8312%" y="238.50"></text></g><g><title>step (omnigibson/objects/controllable_object.py:336) (229 samples, 6.50%)</title><rect x="67.5653%" y="196" width="6.4983%" height="15" fill="rgb(237,72,25)" fg:x="2381" fg:w="229"/><text x="67.8153%" y="206.50">step (omn..</text></g><g><title>step (omnigibson/controllers/controller_base.py:275) (42 samples, 1.19%)</title><rect x="72.8717%" y="212" width="1.1918%" height="15" fill="rgb(244,70,9)" fg:x="2568" fg:w="42"/><text x="73.1217%" y="222.50"></text></g><g><title>clip_control (omnigibson/controllers/controller_base.py:255) (7 samples, 0.20%)</title><rect x="73.8649%" y="228" width="0.1986%" height="15" fill="rgb(217,125,39)" fg:x="2603" fg:w="7"/><text x="74.1149%" y="238.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:906) (4 samples, 0.11%)</title><rect x="75.0284%" y="276" width="0.1135%" height="15" fill="rgb(235,36,10)" fg:x="2644" fg:w="4"/><text x="75.2784%" y="286.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (4 samples, 0.11%)</title><rect x="75.0284%" y="292" width="0.1135%" height="15" fill="rgb(251,123,47)" fg:x="2644" fg:w="4"/><text x="75.2784%" y="302.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (4 samples, 0.11%)</title><rect x="75.0284%" y="308" width="0.1135%" height="15" fill="rgb(221,13,13)" fg:x="2644" fg:w="4"/><text x="75.2784%" y="318.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:59) (4 samples, 0.11%)</title><rect x="75.3121%" y="308" width="0.1135%" height="15" fill="rgb(238,131,9)" fg:x="2654" fg:w="4"/><text x="75.5621%" y="318.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:472) (12 samples, 0.34%)</title><rect x="75.3121%" y="292" width="0.3405%" height="15" fill="rgb(211,50,8)" fg:x="2654" fg:w="12"/><text x="75.5621%" y="302.50"></text></g><g><title>get_tensor_desc (tensors/impl/frontend_np.py:62) (6 samples, 0.17%)</title><rect x="75.4824%" y="308" width="0.1703%" height="15" fill="rgb(245,182,24)" fg:x="2660" fg:w="6"/><text x="75.7324%" y="318.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:473) (4 samples, 0.11%)</title><rect x="75.6527%" y="292" width="0.1135%" height="15" fill="rgb(242,14,37)" fg:x="2666" fg:w="4"/><text x="75.9027%" y="302.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:477) (41 samples, 1.16%)</title><rect x="74.7162%" y="228" width="1.1635%" height="15" fill="rgb(246,228,12)" fg:x="2633" fg:w="41"/><text x="74.9662%" y="238.50"></text></g><g><title>set_joint_positions (omnigibson/objects/controllable_object.py:526) (41 samples, 1.16%)</title><rect x="74.7162%" y="244" width="1.1635%" height="15" fill="rgb(213,55,15)" fg:x="2633" fg:w="41"/><text x="74.9662%" y="254.50"></text></g><g><title>set_joint_positions (omnigibson/prims/entity_prim.py:634) (41 samples, 1.16%)</title><rect x="74.7162%" y="260" width="1.1635%" height="15" fill="rgb(209,9,3)" fg:x="2633" fg:w="41"/><text x="74.9662%" y="270.50"></text></g><g><title>set_joint_position_targets (core/articulations/articulation_view.py:908) (26 samples, 0.74%)</title><rect x="75.1419%" y="276" width="0.7378%" height="15" fill="rgb(230,59,30)" fg:x="2648" fg:w="26"/><text x="75.3919%" y="286.50"></text></g><g><title>set_dof_position_targets (tensors/impl/api.py:475) (4 samples, 0.11%)</title><rect x="75.7662%" y="292" width="0.1135%" height="15" fill="rgb(209,121,21)" fg:x="2670" fg:w="4"/><text x="76.0162%" y="302.50"></text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:479) (16 samples, 0.45%)</title><rect x="75.8797%" y="228" width="0.4540%" height="15" fill="rgb(220,109,13)" fg:x="2674" fg:w="16"/><text x="76.1297%" y="238.50"></text></g><g><title>set_joint_velocities (omnigibson/prims/entity_prim.py:665) (15 samples, 0.43%)</title><rect x="75.9081%" y="244" width="0.4257%" height="15" fill="rgb(232,18,1)" fg:x="2675" fg:w="15"/><text x="76.1581%" y="254.50"></text></g><g><title>set_joint_velocity_targets (core/articulations/articulation_view.py:1033) (8 samples, 0.23%)</title><rect x="76.1067%" y="260" width="0.2270%" height="15" fill="rgb(215,41,42)" fg:x="2682" fg:w="8"/><text x="76.3567%" y="270.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:618) (10 samples, 0.28%)</title><rect x="76.5040%" y="260" width="0.2838%" height="15" fill="rgb(224,123,36)" fg:x="2696" fg:w="10"/><text x="76.7540%" y="270.50"></text></g><g><title>expand_dims (core/utils/numpy/tensor.py:64) (10 samples, 0.28%)</title><rect x="76.5040%" y="276" width="0.2838%" height="15" fill="rgb(240,125,3)" fg:x="2696" fg:w="10"/><text x="76.7540%" y="286.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:180) (6 samples, 0.17%)</title><rect x="76.6175%" y="292" width="0.1703%" height="15" fill="rgb(205,98,50)" fg:x="2700" fg:w="6"/><text x="76.8675%" y="302.50"></text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:333) (87 samples, 2.47%)</title><rect x="74.4325%" y="212" width="2.4688%" height="15" fill="rgb(205,185,37)" fg:x="2623" fg:w="87"/><text x="74.6825%" y="222.50">de..</text></g><g><title>deploy_control (omnigibson/objects/controllable_object.py:481) (20 samples, 0.57%)</title><rect x="76.3337%" y="228" width="0.5675%" height="15" fill="rgb(238,207,15)" fg:x="2690" fg:w="20"/><text x="76.5837%" y="238.50"></text></g><g><title>set_joint_efforts (omnigibson/prims/entity_prim.py:691) (19 samples, 0.54%)</title><rect x="76.3621%" y="244" width="0.5392%" height="15" fill="rgb(213,199,42)" fg:x="2691" fg:w="19"/><text x="76.6121%" y="254.50"></text></g><g><title>set_joint_efforts (omnigibson/utils/deprecated_utils.py:620) (4 samples, 0.11%)</title><rect x="76.7877%" y="260" width="0.1135%" height="15" fill="rgb(235,201,11)" fg:x="2706" fg:w="4"/><text x="77.0377%" y="270.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1238) (14 samples, 0.40%)</title><rect x="76.9296%" y="228" width="0.3973%" height="15" fill="rgb(207,46,11)" fg:x="2711" fg:w="14"/><text x="77.1796%" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:180) (11 samples, 0.31%)</title><rect x="77.0148%" y="244" width="0.3121%" height="15" fill="rgb(241,35,35)" fg:x="2714" fg:w="11"/><text x="77.2648%" y="254.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3432) (9 samples, 0.26%)</title><rect x="77.0715%" y="260" width="0.2554%" height="15" fill="rgb(243,32,47)" fg:x="2716" fg:w="9"/><text x="77.3215%" y="270.50"></text></g><g><title>_mean (numpy/core/_methods.py:182) (4 samples, 0.11%)</title><rect x="77.2134%" y="276" width="0.1135%" height="15" fill="rgb(247,202,23)" fg:x="2721" fg:w="4"/><text x="77.4634%" y="286.50"></text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1242) (7 samples, 0.20%)</title><rect x="77.3269%" y="228" width="0.1986%" height="15" fill="rgb(219,102,11)" fg:x="2725" fg:w="7"/><text x="77.5769%" y="238.50"></text></g><g><title>any (&lt;__array_function__ internals&gt;:180) (5 samples, 0.14%)</title><rect x="77.3837%" y="244" width="0.1419%" height="15" fill="rgb(243,110,44)" fg:x="2727" fg:w="5"/><text x="77.6337%" y="254.50"></text></g><g><title>any (numpy/core/fromnumeric.py:2397) (5 samples, 0.14%)</title><rect x="77.3837%" y="260" width="0.1419%" height="15" fill="rgb(222,74,54)" fg:x="2727" fg:w="5"/><text x="77.6337%" y="270.50"></text></g><g><title>__getattr__ (omnigibson/utils/lazy_import_utils.py:18) (4 samples, 0.11%)</title><rect x="77.8661%" y="340" width="0.1135%" height="15" fill="rgb(216,99,12)" fg:x="2744" fg:w="4"/><text x="78.1161%" y="350.50"></text></g><g><title>contact_list (omnigibson/prims/rigid_prim.py:254) (13 samples, 0.37%)</title><rect x="77.6390%" y="308" width="0.3689%" height="15" fill="rgb(226,22,26)" fg:x="2736" fg:w="13"/><text x="77.8890%" y="318.50"></text></g><g><title>contact_reporting_enabled (omnigibson/prims/rigid_prim.py:604) (13 samples, 0.37%)</title><rect x="77.6390%" y="324" width="0.3689%" height="15" fill="rgb(217,163,10)" fg:x="2736" fg:w="13"/><text x="77.8890%" y="334.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:706) (27 samples, 0.77%)</title><rect x="79.5687%" y="356" width="0.7662%" height="15" fill="rgb(213,25,53)" fg:x="2804" fg:w="27"/><text x="79.8187%" y="366.50"></text></g><g><title>__dtype_from_pep3118 (numpy/core/_internal.py:706) (48 samples, 1.36%)</title><rect x="79.2849%" y="340" width="1.3621%" height="15" fill="rgb(252,105,26)" fg:x="2794" fg:w="48"/><text x="79.5349%" y="350.50"></text></g><g><title>_find_gripper_contacts (omnigibson/robots/manipulation_robot.py:285) (112 samples, 3.18%)</title><rect x="77.5539%" y="276" width="3.1782%" height="15" fill="rgb(220,39,43)" fg:x="2733" fg:w="112"/><text x="77.8039%" y="286.50">_fi..</text></g><g><title>&lt;listcomp&gt; (omnigibson/robots/manipulation_robot.py:285) (110 samples, 3.12%)</title><rect x="77.6107%" y="292" width="3.1215%" height="15" fill="rgb(229,68,48)" fg:x="2735" fg:w="110"/><text x="77.8607%" y="302.50">&lt;li..</text></g><g><title>contact_list (omnigibson/prims/rigid_prim.py:255) (96 samples, 2.72%)</title><rect x="78.0079%" y="308" width="2.7242%" height="15" fill="rgb(252,8,32)" fg:x="2749" fg:w="96"/><text x="78.2579%" y="318.50">co..</text></g><g><title>_dtype_from_pep3118 (numpy/core/_internal.py:652) (58 samples, 1.65%)</title><rect x="79.0863%" y="324" width="1.6459%" height="15" fill="rgb(223,20,43)" fg:x="2787" fg:w="58"/><text x="79.3363%" y="334.50"></text></g><g><title>_calculate_in_hand_object_rigid (omnigibson/robots/manipulation_robot.py:788) (122 samples, 3.46%)</title><rect x="77.5255%" y="260" width="3.4620%" height="15" fill="rgb(229,81,49)" fg:x="2732" fg:w="122"/><text x="77.7755%" y="270.50">_ca..</text></g><g><title>_find_gripper_contacts (omnigibson/robots/manipulation_robot.py:288) (9 samples, 0.26%)</title><rect x="80.7321%" y="276" width="0.2554%" height="15" fill="rgb(236,28,36)" fg:x="2845" fg:w="9"/><text x="80.9821%" y="286.50"></text></g><g><title>link_prim_paths (omnigibson/objects/object_base.py:284) (7 samples, 0.20%)</title><rect x="80.7889%" y="292" width="0.1986%" height="15" fill="rgb(249,185,26)" fg:x="2847" fg:w="7"/><text x="81.0389%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/objects/object_base.py:284) (7 samples, 0.20%)</title><rect x="80.7889%" y="308" width="0.1986%" height="15" fill="rgb(249,174,33)" fg:x="2847" fg:w="7"/><text x="81.0389%" y="318.50"></text></g><g><title>prim_path (omnigibson/prims/prim_base.py:147) (4 samples, 0.11%)</title><rect x="80.8740%" y="324" width="0.1135%" height="15" fill="rgb(233,201,37)" fg:x="2850" fg:w="4"/><text x="81.1240%" y="334.50"></text></g><g><title>_calculate_in_hand_object (omnigibson/robots/manipulation_robot.py:1279) (123 samples, 3.49%)</title><rect x="77.5255%" y="244" width="3.4904%" height="15" fill="rgb(221,78,26)" fg:x="2732" fg:w="123"/><text x="77.7755%" y="254.50">_ca..</text></g><g><title>deploy_control (omnigibson/robots/manipulation_robot.py:337) (146 samples, 4.14%)</title><rect x="76.9012%" y="212" width="4.1430%" height="15" fill="rgb(250,127,30)" fg:x="2710" fg:w="146"/><text x="77.1512%" y="222.50">deplo..</text></g><g><title>_handle_assisted_grasping (omnigibson/robots/manipulation_robot.py:1256) (124 samples, 3.52%)</title><rect x="77.5255%" y="228" width="3.5187%" height="15" fill="rgb(230,49,44)" fg:x="2732" fg:w="124"/><text x="77.7755%" y="238.50">_ha..</text></g><g><title>&lt;lambda&gt; (omnigibson/objects/controllable_object.py:139) (745 samples, 21.14%)</title><rect x="59.9319%" y="164" width="21.1407%" height="15" fill="rgb(229,67,23)" fg:x="2112" fg:w="745"/><text x="60.1819%" y="174.50">&lt;lambda&gt; (omnigibson/objects/cont..</text></g><g><title>step (omnigibson/robots/robot_base.py:285) (501 samples, 14.22%)</title><rect x="66.8558%" y="180" width="14.2168%" height="15" fill="rgb(249,83,47)" fg:x="2356" fg:w="501"/><text x="67.1058%" y="190.50">step (omnigibson/robot..</text></g><g><title>step (omnigibson/objects/controllable_object.py:354) (237 samples, 6.73%)</title><rect x="74.3473%" y="196" width="6.7253%" height="15" fill="rgb(215,43,3)" fg:x="2620" fg:w="237"/><text x="74.5973%" y="206.50">step (omn..</text></g><g><title>stage_changed_notice (viewport/widget.py:250) (54 samples, 1.53%)</title><rect x="81.1578%" y="180" width="1.5323%" height="15" fill="rgb(238,154,13)" fg:x="2860" fg:w="54"/><text x="81.4078%" y="190.50"></text></g><g><title>stage_changed_notice (viewport/widget.py:251) (46 samples, 1.31%)</title><rect x="82.6901%" y="180" width="1.3053%" height="15" fill="rgb(219,56,2)" fg:x="2914" fg:w="46"/><text x="82.9401%" y="190.50"></text></g><g><title>stage_changed_notice (viewport/widget.py:256) (22 samples, 0.62%)</title><rect x="83.9955%" y="180" width="0.6243%" height="15" fill="rgb(233,0,4)" fg:x="2960" fg:w="22"/><text x="84.2455%" y="190.50"></text></g><g><title>stage_changed_notice (viewport/widget.py:258) (25 samples, 0.71%)</title><rect x="84.6198%" y="180" width="0.7094%" height="15" fill="rgb(235,30,7)" fg:x="2982" fg:w="25"/><text x="84.8698%" y="190.50"></text></g><g><title>stage_changed_notice (viewport/widget.py:260) (149 samples, 4.23%)</title><rect x="85.3292%" y="180" width="4.2281%" height="15" fill="rgb(250,79,13)" fg:x="3007" fg:w="149"/><text x="85.5792%" y="190.50">stage..</text></g><g><title>&lt;lambda&gt; (viewport/widget.py:356) (300 samples, 8.51%)</title><rect x="81.0726%" y="164" width="8.5131%" height="15" fill="rgb(211,146,34)" fg:x="2857" fg:w="300"/><text x="81.3226%" y="174.50">&lt;lambda&gt; (vi..</text></g><g><title>__enter__ (contextlib.py:135) (4 samples, 0.11%)</title><rect x="89.6425%" y="180" width="0.1135%" height="15" fill="rgb(228,22,38)" fg:x="3159" fg:w="4"/><text x="89.8925%" y="190.50"></text></g><g><title>invoke (Trace/__init__.py:76) (11 samples, 0.31%)</title><rect x="89.5857%" y="164" width="0.3121%" height="15" fill="rgb(235,168,5)" fg:x="3157" fg:w="11"/><text x="89.8357%" y="174.50"></text></g><g><title>__on_objects_changed (stage/stage_model.py:473) (18 samples, 0.51%)</title><rect x="89.8978%" y="180" width="0.5108%" height="15" fill="rgb(221,155,16)" fg:x="3168" fg:w="18"/><text x="90.1478%" y="190.50"></text></g><g><title>__on_objects_changed (stage/stage_model.py:474) (23 samples, 0.65%)</title><rect x="90.4086%" y="180" width="0.6527%" height="15" fill="rgb(215,215,53)" fg:x="3186" fg:w="23"/><text x="90.6586%" y="190.50"></text></g><g><title>__on_objects_changed (stage/stage_model.py:475) (52 samples, 1.48%)</title><rect x="91.0613%" y="180" width="1.4756%" height="15" fill="rgb(223,4,10)" fg:x="3209" fg:w="52"/><text x="91.3113%" y="190.50"></text></g><g><title>_on_usd_changed (usd/_impl/utils.py:1068) (16 samples, 0.45%)</title><rect x="92.5653%" y="180" width="0.4540%" height="15" fill="rgb(234,103,6)" fg:x="3262" fg:w="16"/><text x="92.8153%" y="190.50"></text></g><g><title>step (omnigibson/simulator.py:773) (3,298 samples, 93.59%)</title><rect x="2.0148%" y="116" width="93.5868%" height="15" fill="rgb(227,97,0)" fg:x="71" fg:w="3298"/><text x="2.2648%" y="126.50">step (omnigibson/simulator.py:773)</text></g><g><title>step (core/simulation_context/simulation_context.py:704) (3,295 samples, 93.50%)</title><rect x="2.0999%" y="132" width="93.5017%" height="15" fill="rgb(234,150,53)" fg:x="74" fg:w="3295"/><text x="2.3499%" y="142.50">step (core/simulation_context/simulation_context.py:704)</text></g><g><title>_step (core/physics_context/physics_context.py:574) (3,279 samples, 93.05%)</title><rect x="2.5539%" y="148" width="93.0477%" height="15" fill="rgb(228,201,54)" fg:x="90" fg:w="3279"/><text x="2.8039%" y="158.50">_step (core/physics_context/physics_context.py:574)</text></g><g><title>invoke (Trace/__init__.py:77) (201 samples, 5.70%)</title><rect x="89.8978%" y="164" width="5.7037%" height="15" fill="rgb(222,22,37)" fg:x="3168" fg:w="201"/><text x="90.1478%" y="174.50">invoke ..</text></g><g><title>_on_usd_changed (usd/_impl/utils.py:1069) (91 samples, 2.58%)</title><rect x="93.0193%" y="180" width="2.5823%" height="15" fill="rgb(237,53,32)" fg:x="3278" fg:w="91"/><text x="93.2693%" y="190.50">_o..</text></g><g><title>_non_physics_step (omnigibson/simulator.py:656) (8 samples, 0.23%)</title><rect x="95.6016%" y="132" width="0.2270%" height="15" fill="rgb(233,25,53)" fg:x="3369" fg:w="8"/><text x="95.8516%" y="142.50"></text></g><g><title>global_update (omnigibson/object_states/toggle.py:63) (5 samples, 0.14%)</title><rect x="95.6867%" y="148" width="0.1419%" height="15" fill="rgb(210,40,34)" fg:x="3372" fg:w="5"/><text x="95.9367%" y="158.50"></text></g><g><title>step (omnigibson/envs/vec_env_base.py:16) (3,310 samples, 93.93%)</title><rect x="1.9864%" y="100" width="93.9274%" height="15" fill="rgb(241,220,44)" fg:x="70" fg:w="3310"/><text x="2.2364%" y="110.50">step (omnigibson/envs/vec_env_base.py:16)</text></g><g><title>step (omnigibson/simulator.py:776) (11 samples, 0.31%)</title><rect x="95.6016%" y="116" width="0.3121%" height="15" fill="rgb(235,28,35)" fg:x="3369" fg:w="11"/><text x="95.8516%" y="126.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:327) (7 samples, 0.20%)</title><rect x="96.0272%" y="260" width="0.1986%" height="15" fill="rgb(210,56,17)" fg:x="3384" fg:w="7"/><text x="96.2772%" y="270.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:832) (7 samples, 0.20%)</title><rect x="96.0272%" y="276" width="0.1986%" height="15" fill="rgb(224,130,29)" fg:x="3384" fg:w="7"/><text x="96.2772%" y="286.50"></text></g><g><title>get_position (omnigibson/prims/xform_prim.py:207) (4 samples, 0.11%)</title><rect x="96.3394%" y="276" width="0.1135%" height="15" fill="rgb(235,212,8)" fg:x="3395" fg:w="4"/><text x="96.5894%" y="286.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:225) (6 samples, 0.17%)</title><rect x="96.4529%" y="292" width="0.1703%" height="15" fill="rgb(223,33,50)" fg:x="3399" fg:w="6"/><text x="96.7029%" y="302.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:950) (5 samples, 0.14%)</title><rect x="96.4813%" y="308" width="0.1419%" height="15" fill="rgb(219,149,13)" fg:x="3400" fg:w="5"/><text x="96.7313%" y="318.50"></text></g><g><title>get_world_poses (core/articulations/articulation_view.py:1803) (4 samples, 0.11%)</title><rect x="96.5096%" y="324" width="0.1135%" height="15" fill="rgb(250,156,29)" fg:x="3401" fg:w="4"/><text x="96.7596%" y="334.50"></text></g><g><title>xyzw2wxyz (core/utils/numpy/rotations.py:191) (4 samples, 0.11%)</title><rect x="96.5096%" y="340" width="0.1135%" height="15" fill="rgb(216,193,19)" fg:x="3401" fg:w="4"/><text x="96.7596%" y="350.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:330) (15 samples, 0.43%)</title><rect x="96.3394%" y="260" width="0.4257%" height="15" fill="rgb(216,135,14)" fg:x="3395" fg:w="15"/><text x="96.5894%" y="270.50"></text></g><g><title>get_rpy (omnigibson/prims/xform_prim.py:234) (11 samples, 0.31%)</title><rect x="96.4529%" y="276" width="0.3121%" height="15" fill="rgb(241,47,5)" fg:x="3399" fg:w="11"/><text x="96.7029%" y="286.50"></text></g><g><title>quat2euler (omnigibson/utils/transform_utils.py:534) (5 samples, 0.14%)</title><rect x="96.6232%" y="292" width="0.1419%" height="15" fill="rgb(233,42,35)" fg:x="3405" fg:w="5"/><text x="96.8732%" y="302.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:180) (5 samples, 0.14%)</title><rect x="96.7934%" y="292" width="0.1419%" height="15" fill="rgb(231,13,6)" fg:x="3411" fg:w="5"/><text x="97.0434%" y="302.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1371) (4 samples, 0.11%)</title><rect x="96.8218%" y="308" width="0.1135%" height="15" fill="rgb(207,181,40)" fg:x="3412" fg:w="4"/><text x="97.0718%" y="318.50"></text></g><g><title>get_2d_orientation (omnigibson/prims/xform_prim.py:241) (9 samples, 0.26%)</title><rect x="96.7650%" y="276" width="0.2554%" height="15" fill="rgb(254,173,49)" fg:x="3410" fg:w="9"/><text x="97.0150%" y="286.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:331) (12 samples, 0.34%)</title><rect x="96.7650%" y="260" width="0.3405%" height="15" fill="rgb(221,1,38)" fg:x="3410" fg:w="12"/><text x="97.0150%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/active_camera_robot.py:35) (43 samples, 1.22%)</title><rect x="96.0272%" y="244" width="1.2202%" height="15" fill="rgb(206,124,46)" fg:x="3384" fg:w="43"/><text x="96.2772%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/robot_base.py:344) (5 samples, 0.14%)</title><rect x="97.1056%" y="260" width="0.1419%" height="15" fill="rgb(249,21,11)" fg:x="3422" fg:w="5"/><text x="97.3556%" y="270.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/entity_prim.py:889) (5 samples, 0.14%)</title><rect x="97.1056%" y="276" width="0.1419%" height="15" fill="rgb(222,201,40)" fg:x="3422" fg:w="5"/><text x="97.3556%" y="286.50"></text></g><g><title>get_linear_velocity (omnigibson/prims/rigid_prim.py:278) (5 samples, 0.14%)</title><rect x="97.1056%" y="292" width="0.1419%" height="15" fill="rgb(235,61,29)" fg:x="3422" fg:w="5"/><text x="97.3556%" y="302.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/locomotion_robot.py:40) (48 samples, 1.36%)</title><rect x="95.9989%" y="228" width="1.3621%" height="15" fill="rgb(219,207,3)" fg:x="3383" fg:w="48"/><text x="96.2489%" y="238.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:68) (51 samples, 1.45%)</title><rect x="95.9989%" y="212" width="1.4472%" height="15" fill="rgb(222,56,46)" fg:x="3383" fg:w="51"/><text x="96.2489%" y="222.50"></text></g><g><title>get_state (omnigibson/prims/joint_prim.py:591) (4 samples, 0.11%)</title><rect x="97.5312%" y="244" width="0.1135%" height="15" fill="rgb(239,76,54)" fg:x="3437" fg:w="4"/><text x="97.7812%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/two_wheel_robot.py:73) (8 samples, 0.23%)</title><rect x="97.5028%" y="212" width="0.2270%" height="15" fill="rgb(231,124,27)" fg:x="3436" fg:w="8"/><text x="97.7528%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (omnigibson/robots/two_wheel_robot.py:73) (8 samples, 0.23%)</title><rect x="97.5028%" y="228" width="0.2270%" height="15" fill="rgb(249,195,6)" fg:x="3436" fg:w="8"/><text x="97.7528%" y="238.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:406) (64 samples, 1.82%)</title><rect x="95.9989%" y="196" width="1.8161%" height="15" fill="rgb(237,174,47)" fg:x="3383" fg:w="64"/><text x="96.2489%" y="206.50">_..</text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:314) (5 samples, 0.14%)</title><rect x="97.9569%" y="244" width="0.1419%" height="15" fill="rgb(206,201,31)" fg:x="3452" fg:w="5"/><text x="98.2069%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:419) (11 samples, 0.31%)</title><rect x="97.9285%" y="196" width="0.3121%" height="15" fill="rgb(231,57,52)" fg:x="3451" fg:w="11"/><text x="98.1785%" y="206.50"></text></g><g><title>get_eef_position (omnigibson/robots/manipulation_robot.py:686) (11 samples, 0.31%)</title><rect x="97.9285%" y="212" width="0.3121%" height="15" fill="rgb(248,177,22)" fg:x="3451" fg:w="11"/><text x="98.1785%" y="222.50"></text></g><g><title>get_position (omnigibson/prims/xform_prim.py:207) (10 samples, 0.28%)</title><rect x="97.9569%" y="228" width="0.2838%" height="15" fill="rgb(215,211,37)" fg:x="3452" fg:w="10"/><text x="98.2069%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:314) (5 samples, 0.14%)</title><rect x="98.2974%" y="244" width="0.1419%" height="15" fill="rgb(241,128,51)" fg:x="3464" fg:w="5"/><text x="98.5474%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (5 samples, 0.14%)</title><rect x="98.4393%" y="260" width="0.1419%" height="15" fill="rgb(227,165,31)" fg:x="3469" fg:w="5"/><text x="98.6893%" y="270.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:420) (13 samples, 0.37%)</title><rect x="98.2406%" y="196" width="0.3689%" height="15" fill="rgb(228,167,24)" fg:x="3462" fg:w="13"/><text x="98.4906%" y="206.50"></text></g><g><title>get_eef_orientation (omnigibson/robots/manipulation_robot.py:699) (12 samples, 0.34%)</title><rect x="98.2690%" y="212" width="0.3405%" height="15" fill="rgb(228,143,12)" fg:x="3463" fg:w="12"/><text x="98.5190%" y="222.50"></text></g><g><title>get_orientation (omnigibson/prims/xform_prim.py:225) (12 samples, 0.34%)</title><rect x="98.2690%" y="228" width="0.3405%" height="15" fill="rgb(249,149,8)" fg:x="3463" fg:w="12"/><text x="98.5190%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:316) (6 samples, 0.17%)</title><rect x="98.4393%" y="244" width="0.1703%" height="15" fill="rgb(243,35,44)" fg:x="3469" fg:w="6"/><text x="98.6893%" y="254.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (6 samples, 0.17%)</title><rect x="98.7230%" y="260" width="0.1703%" height="15" fill="rgb(246,89,9)" fg:x="3479" fg:w="6"/><text x="98.9730%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:316) (7 samples, 0.20%)</title><rect x="98.7230%" y="244" width="0.1986%" height="15" fill="rgb(233,213,13)" fg:x="3479" fg:w="7"/><text x="98.9730%" y="254.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:713) (11 samples, 0.31%)</title><rect x="98.6379%" y="228" width="0.3121%" height="15" fill="rgb(233,141,41)" fg:x="3476" fg:w="11"/><text x="98.8879%" y="238.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:421) (19 samples, 0.54%)</title><rect x="98.6095%" y="196" width="0.5392%" height="15" fill="rgb(239,167,4)" fg:x="3475" fg:w="19"/><text x="98.8595%" y="206.50"></text></g><g><title>get_relative_eef_position (omnigibson/robots/manipulation_robot.py:729) (18 samples, 0.51%)</title><rect x="98.6379%" y="212" width="0.5108%" height="15" fill="rgb(209,217,16)" fg:x="3476" fg:w="18"/><text x="98.8879%" y="222.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:715) (4 samples, 0.11%)</title><rect x="99.0352%" y="228" width="0.1135%" height="15" fill="rgb(219,88,35)" fg:x="3490" fg:w="4"/><text x="99.2852%" y="238.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:180) (5 samples, 0.14%)</title><rect x="99.2906%" y="260" width="0.1419%" height="15" fill="rgb(220,193,23)" fg:x="3499" fg:w="5"/><text x="99.5406%" y="270.50"></text></g><g><title>get_position_orientation (omnigibson/prims/rigid_prim.py:316) (6 samples, 0.17%)</title><rect x="99.2906%" y="244" width="0.1703%" height="15" fill="rgb(230,90,52)" fg:x="3499" fg:w="6"/><text x="99.5406%" y="254.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:713) (12 samples, 0.34%)</title><rect x="99.1487%" y="228" width="0.3405%" height="15" fill="rgb(252,106,19)" fg:x="3494" fg:w="12"/><text x="99.3987%" y="238.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:714) (4 samples, 0.11%)</title><rect x="99.4892%" y="228" width="0.1135%" height="15" fill="rgb(206,74,20)" fg:x="3506" fg:w="4"/><text x="99.7392%" y="238.50"></text></g><g><title>get_position_orientation (omnigibson/prims/entity_prim.py:950) (4 samples, 0.11%)</title><rect x="99.4892%" y="244" width="0.1135%" height="15" fill="rgb(230,138,44)" fg:x="3506" fg:w="4"/><text x="99.7392%" y="254.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:289) (131 samples, 3.72%)</title><rect x="95.9989%" y="180" width="3.7174%" height="15" fill="rgb(235,182,43)" fg:x="3383" fg:w="131"/><text x="96.2489%" y="190.50">_get..</text></g><g><title>_get_proprioception_dict (omnigibson/robots/manipulation_robot.py:422) (20 samples, 0.57%)</title><rect x="99.1487%" y="196" width="0.5675%" height="15" fill="rgb(242,16,51)" fg:x="3494" fg:w="20"/><text x="99.3987%" y="206.50"></text></g><g><title>get_relative_eef_orientation (omnigibson/robots/manipulation_robot.py:741) (20 samples, 0.57%)</title><rect x="99.1487%" y="212" width="0.5675%" height="15" fill="rgb(248,9,4)" fg:x="3494" fg:w="20"/><text x="99.3987%" y="222.50"></text></g><g><title>get_relative_eef_pose (omnigibson/robots/manipulation_robot.py:715) (4 samples, 0.11%)</title><rect x="99.6027%" y="228" width="0.1135%" height="15" fill="rgb(210,31,22)" fg:x="3510" fg:w="4"/><text x="99.8527%" y="238.50"></text></g><g><title>_get_proprioception_dict (omnigibson/robots/fetch.py:292) (4 samples, 0.11%)</title><rect x="99.7162%" y="180" width="0.1135%" height="15" fill="rgb(239,54,39)" fg:x="3514" fg:w="4"/><text x="99.9662%" y="190.50"></text></g><g><title>get_joint_positions (omnigibson/prims/entity_prim.py:832) (4 samples, 0.11%)</title><rect x="99.7162%" y="196" width="0.1135%" height="15" fill="rgb(230,99,41)" fg:x="3514" fg:w="4"/><text x="99.9662%" y="206.50"></text></g><g><title>get_obs (omnigibson/envs/env_base.py:473) (138 samples, 3.92%)</title><rect x="95.9705%" y="132" width="3.9160%" height="15" fill="rgb(253,106,12)" fg:x="3382" fg:w="138"/><text x="96.2205%" y="142.50">get_..</text></g><g><title>get_obs (omnigibson/robots/robot_base.py:308) (137 samples, 3.89%)</title><rect x="95.9989%" y="148" width="3.8876%" height="15" fill="rgb(213,46,41)" fg:x="3383" fg:w="137"/><text x="96.2489%" y="158.50">get_..</text></g><g><title>get_proprioception (omnigibson/robots/robot_base.py:318) (137 samples, 3.89%)</title><rect x="95.9989%" y="164" width="3.8876%" height="15" fill="rgb(215,133,35)" fg:x="3383" fg:w="137"/><text x="96.2489%" y="174.50">get_..</text></g><g><title>_post_step (omnigibson/envs/env_base.py:542) (142 samples, 4.03%)</title><rect x="95.9137%" y="116" width="4.0295%" height="15" fill="rgb(213,28,5)" fg:x="3380" fg:w="142"/><text x="96.1637%" y="126.50">_pos..</text></g><g><title>all (3,524 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(215,77,49)" fg:x="0" fg:w="3524"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test_multiple_envs.py:78) (3,524 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="3524"/><text x="0.2500%" y="78.50">&lt;module&gt; (test_multiple_envs.py:78)</text></g><g><title>main (test_multiple_envs.py:57) (3,516 samples, 99.77%)</title><rect x="0.2270%" y="84" width="99.7730%" height="15" fill="rgb(208,67,9)" fg:x="8" fg:w="3516"/><text x="0.4770%" y="94.50">main (test_multiple_envs.py:57)</text></g><g><title>step (omnigibson/envs/vec_env_base.py:18) (144 samples, 4.09%)</title><rect x="95.9137%" y="100" width="4.0863%" height="15" fill="rgb(219,133,21)" fg:x="3380" fg:w="144"/><text x="96.1637%" y="110.50">step..</text></g></svg></svg>