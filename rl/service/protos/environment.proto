syntax = "proto3";

package environment;

service EnvironmentService {
    rpc Step(StepRequest) returns (StepResponse);
    rpc Reset(ResetRequest) returns (ResetResponse);
    rpc Render(RenderRequest) returns (RenderResponse);
    rpc Close(CloseRequest) returns (CloseResponse);
    rpc GetSpaces(GetSpacesRequest) returns (GetSpacesResponse);
    rpc EnvMethod(EnvMethodRequest) returns (EnvMethodResponse);
    rpc GetAttr(GetAttrRequest) returns (GetAttrResponse);
    rpc SetAttr(SetAttrRequest) returns (SetAttrResponse);
    rpc IsWrapped(IsWrappedRequest) returns (IsWrappedResponse);
}

message StepRequest {
    bytes action = 1;
}

message StepResponse {
    bytes observation = 1;
    float reward = 2;
    bool done = 3;
    bytes info = 4;
    bytes reset_info = 5;
}

message ResetRequest {
    int32 seed = 1;
    bytes options = 2;
}

message ResetResponse {
    bytes observation = 1;
    bytes reset_info = 2;
}

message RenderRequest {
    // Include fields if render Request needs parameters
}

message RenderResponse {
    bytes render_data = 1;
}

message CloseRequest {}
message CloseResponse {}

message GetSpacesRequest {}
message GetSpacesResponse {
    bytes observation_space = 1;
    bytes action_space = 2;
}

message EnvMethodRequest {
    string method_name = 1;
    bytes arguments = 2;
}

message EnvMethodResponse {
    bytes result = 1;
}

message GetAttrRequest {
    string attribute_name = 1;
}

message GetAttrResponse {
    bytes attribute_value = 1;
}

message SetAttrRequest {
    string attribute_name = 1;
    bytes attribute_value = 2;
}

message SetAttrResponse {
    // Usually empty, can include confirmation or result
}

// IsWrapped Request and response
message IsWrappedRequest {
    string wrapper_type = 1;
}

message IsWrappedResponse {
    bool is_wrapped = 1;
}

service EnvironmentRegistrationService {
    rpc RegisterEnvironment(RegisterEnvironmentRequest) returns (RegisterEnvironmentResponse);
}

message RegisterEnvironmentRequest {
    string ip = 1;
    int32 port = 2;
}

message RegisterEnvironmentResponse {
    bool success = 1;
}
